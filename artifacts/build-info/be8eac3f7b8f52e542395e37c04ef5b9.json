{
	"id": "be8eac3f7b8f52e542395e37c04ef5b9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"gameContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract VersaGames is Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    uint256 public stakeAmount;\r\n    uint256 public prizePool;\r\n    uint256 public totalGamesPlayed;\r\n\r\n    mapping(address => uint256) public activeStakes;\r\n    mapping(address => bool) public hasPlayed;\r\n    mapping(address => uint256) public lastPlayed;\r\n\r\n    event GamePlayed(address indexed player, uint256 amount, uint256 timestamp);\r\n    event PrizePoolFunded(uint256 amount);\r\n    event StakeWithdrawn(address indexed player, uint256 amount);\r\n    event PrizeClaimed(address indexed winner, uint256 amount);\r\n\r\n    constructor(uint256 _initialStakeAmount) Ownable(msg.sender) {\r\n        require(_initialStakeAmount > 0, \"Stake amount must be greater than 0\");\r\n        stakeAmount = _initialStakeAmount;\r\n    }\r\n\r\n    function playGame() external payable {\r\n        require(msg.value == stakeAmount, \"Incorrect stake amount\");\r\n        require(!hasPlayed[msg.sender], \"Already played in this round\");\r\n\r\n        activeStakes[msg.sender] = msg.value;\r\n        hasPlayed[msg.sender] = true;\r\n        lastPlayed[msg.sender] = block.timestamp;\r\n        totalGamesPlayed++;\r\n\r\n        // Transfer stake to prize pool (using SafeMath)\r\n        prizePool = prizePool.add(msg.value);\r\n\r\n        emit GamePlayed(msg.sender, msg.value, block.timestamp);\r\n    }\r\n\r\n    function fundPrizePool() external payable onlyOwner {\r\n        require(msg.value > 0, \"Must send ETH to fund the prize pool\");\r\n        prizePool = prizePool.add(msg.value);\r\n        emit PrizePoolFunded(msg.value);\r\n    }\r\n\r\n    function withdrawStake() external {\r\n        require(hasPlayed[msg.sender], \"No active stake\");\r\n        require(block.timestamp.sub(lastPlayed[msg.sender]) >= 1 days, \"Stake locked for 1 day\");\r\n\r\n        uint256 amount = activeStakes[msg.sender];\r\n        activeStakes[msg.sender] = 0;\r\n        hasPlayed[msg.sender] = false;\r\n\r\n        payable(msg.sender).transfer(amount);\r\n        emit StakeWithdrawn(msg.sender, amount);\r\n    }\r\n\r\n    function claimPrize() external onlyOwner {\r\n        require(prizePool > 0, \"No prize to claim\");\r\n        uint256 amount = prizePool;\r\n        prizePool = 0;\r\n\r\n        payable(owner()).transfer(amount);\r\n        emit PrizeClaimed(owner(), amount);\r\n    }\r\n\r\n    // Helper function to check if a player can withdraw\r\n    function canWithdraw(address player) external view returns (bool) {\r\n        return hasPlayed[player] && block.timestamp.sub(lastPlayed[player]) >= 1 days;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122036740312e2188c32e18ccc575eeecb40d31d68599a19ed884e2d9da6c3db1ca864736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122036740312e2188c32e18ccc575eeecb40d31d68599a19ed884e2d9da6c3db1ca864736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH21 0x312E2188C32E18CCC575EEECB40D31D68599A19ED DUP9 0x4E 0x2D SWAP14 0xA6 0xC3 0xDB SHR 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "482:6210:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6210:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122036740312e2188c32e18ccc575eeecb40d31d68599a19ed884e2d9da6c3db1ca864736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH21 0x312E2188C32E18CCC575EEECB40D31D68599A19ED DUP9 0x4E 0x2D SWAP14 0xA6 0xC3 0xDB SHR 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "482:6210:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122036740312e2188c32e18ccc575eeecb40d31d68599a19ed884e2d9da6c3db1ca864736f6c63430008140033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"gameContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"gameContract.sol": {
				"VersaGames": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initialStakeAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "GamePlayed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PrizeClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PrizePoolFunded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeWithdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "activeStakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"name": "canWithdraw",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimPrize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fundPrizePool",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "hasPlayed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastPlayed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "playGame",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "prizePool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalGamesPlayed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"gameContract.sol\":176:2669  contract VersaGames is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"gameContract.sol\":769:964  constructor(uint256 _initialStakeAmount) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"gameContract.sol\":818:828  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":349:400   */\n  mstore\n    /* \"#utility.yul\":322:340   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"gameContract.sol\":871:872  0 */\n  0x00\n    /* \"gameContract.sol\":849:868  _initialStakeAmount */\n  dup2\n    /* \"gameContract.sol\":849:872  _initialStakeAmount > 0 */\n  gt\n    /* \"gameContract.sol\":841:912  require(_initialStakeAmount > 0, \"Stake amount must be greater than 0\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":613:615   */\n  0x20\n    /* \"gameContract.sol\":841:912  require(_initialStakeAmount > 0, \"Stake amount must be greater than 0\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":595:616   */\n  mstore\n    /* \"#utility.yul\":652:654   */\n  0x23\n    /* \"#utility.yul\":632:650   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":625:655   */\n  mstore\n    /* \"#utility.yul\":691:725   */\n  0x5374616b6520616d6f756e74206d757374206265206772656174657220746861\n    /* \"#utility.yul\":671:689   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":664:726   */\n  mstore\n  shl(0xec, 0x06e203)\n    /* \"#utility.yul\":742:760   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":735:768   */\n  mstore\n    /* \"#utility.yul\":785:804   */\n  0x84\n  add\n    /* \"gameContract.sol\":841:912  require(_initialStakeAmount > 0, \"Stake amount must be greater than 0\") */\n  tag_8\n    /* \"#utility.yul\":411:810   */\n  jump\n    /* \"gameContract.sol\":841:912  require(_initialStakeAmount > 0, \"Stake amount must be greater than 0\") */\ntag_13:\n    /* \"gameContract.sol\":923:934  stakeAmount */\n  0x01\n    /* \"gameContract.sol\":923:956  stakeAmount = _initialStakeAmount */\n  sstore\n    /* \"gameContract.sol\":176:2669  contract VersaGames is Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:198   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_20:\n  pop\n    /* \"#utility.yul\":176:192   */\n  mload\n  swap2\n    /* \"#utility.yul\":14:198   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":411:810   */\ntag_18:\n    /* \"gameContract.sol\":176:2669  contract VersaGames is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"gameContract.sol\":176:2669  contract VersaGames is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x719ce73e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xaf899735\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xaf899735\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xbed9d861\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc506f233\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x719ce73e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x88b2f7c3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x5c492129\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x5c492129\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x60c7dc47\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x70740ac9\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x07cc6d69\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x19262d30\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x32d0bbe3\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"gameContract.sol\":353:400  mapping(address => uint256) public activeStakes */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":451:476   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"gameContract.sol\":353:400  mapping(address => uint256) public activeStakes */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gameContract.sol\":2504:2666  function canWithdraw(address player) external view returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":652:666   */\n      swap1\n      iszero\n        /* \"#utility.yul\":645:667   */\n      iszero\n        /* \"#utility.yul\":627:668   */\n      dup2\n      mstore\n        /* \"#utility.yul\":615:617   */\n      0x20\n        /* \"#utility.yul\":600:618   */\n      add\n        /* \"gameContract.sol\":2504:2666  function canWithdraw(address player) external view returns (bool) {... */\n      tag_24\n        /* \"#utility.yul\":487:674   */\n      jump\n        /* \"gameContract.sol\":407:448  mapping(address => bool) public hasPlayed */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_27\n      tag_34\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_34:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"gameContract.sol\":313:344  uint256 public totalGamesPlayed */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_20\n      sload(0x03)\n      dup2\n      jump\n        /* \"gameContract.sol\":249:275  uint256 public stakeAmount */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_20\n      sload(0x01)\n      dup2\n      jump\n        /* \"gameContract.sol\":2183:2438  function claimPrize() external onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_46\n      tag_50\n      jump\t// in\n        /* \"gameContract.sol\":282:306  uint256 public prizePool */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_20\n      sload(0x02)\n      dup2\n      jump\n        /* \"gameContract.sol\":1512:1734  function fundPrizePool() external payable onlyOwner {... */\n    tag_10:\n      tag_46\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":825:876   */\n      dup2\n      mstore\n        /* \"#utility.yul\":813:815   */\n      0x20\n        /* \"#utility.yul\":798:816   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":679:882   */\n      jump\n        /* \"gameContract.sol\":972:1504  function playGame() external payable {... */\n    tag_12:\n      tag_46\n      tag_63\n      jump\t// in\n        /* \"gameContract.sol\":1742:2175  function withdrawStake() external {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_46\n      tag_66\n      jump\t// in\n        /* \"gameContract.sol\":455:500  mapping(address => uint256) public lastPlayed */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_20\n      tag_69\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_69:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_46\n      tag_74\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"gameContract.sol\":2504:2666  function canWithdraw(address player) external view returns (bool) {... */\n    tag_29:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gameContract.sol\":2588:2605  hasPlayed[player] */\n      dup2\n      and\n        /* \"gameContract.sol\":2564:2568  bool */\n      0x00\n        /* \"gameContract.sol\":2588:2605  hasPlayed[player] */\n      swap1\n      dup2\n      mstore\n        /* \"gameContract.sol\":2588:2597  hasPlayed */\n      0x05\n        /* \"gameContract.sol\":2588:2605  hasPlayed[player] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"gameContract.sol\":2588:2658  hasPlayed[player] && block.timestamp.sub(lastPlayed[player]) >= 1 days */\n      dup1\n      iszero\n      tag_77\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gameContract.sol\":2629:2647  lastPlayed[player] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gameContract.sol\":2629:2639  lastPlayed */\n      0x06\n        /* \"gameContract.sol\":2629:2647  lastPlayed[player] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"gameContract.sol\":2652:2658  1 days */\n      0x015180\n      swap1\n        /* \"gameContract.sol\":2609:2648  block.timestamp.sub(lastPlayed[player]) */\n      tag_78\n      swap1\n        /* \"gameContract.sol\":2609:2624  block.timestamp */\n      timestamp\n      swap1\n        /* \"gameContract.sol\":2609:2628  block.timestamp.sub */\n      tag_79\n        /* \"gameContract.sol\":2609:2648  block.timestamp.sub(lastPlayed[player]) */\n      jump\t// in\n    tag_78:\n        /* \"gameContract.sol\":2609:2658  block.timestamp.sub(lastPlayed[player]) >= 1 days */\n      lt\n      iszero\n        /* \"gameContract.sol\":2588:2658  hasPlayed[player] && block.timestamp.sub(lastPlayed[player]) >= 1 days */\n    tag_77:\n        /* \"gameContract.sol\":2581:2658  return hasPlayed[player] && block.timestamp.sub(lastPlayed[player]) >= 1 days */\n      swap3\n        /* \"gameContract.sol\":2504:2666  function canWithdraw(address player) external view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"gameContract.sol\":2183:2438  function claimPrize() external onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_81:\n        /* \"gameContract.sol\":2255:2256  0 */\n      0x00\n        /* \"gameContract.sol\":2243:2252  prizePool */\n      sload(0x02)\n        /* \"gameContract.sol\":2243:2256  prizePool > 0 */\n      gt\n        /* \"gameContract.sol\":2235:2278  require(prizePool > 0, \"No prize to claim\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1089:1091   */\n      0x20\n        /* \"gameContract.sol\":2235:2278  require(prizePool > 0, \"No prize to claim\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1071:1092   */\n      mstore\n        /* \"#utility.yul\":1128:1130   */\n      0x11\n        /* \"#utility.yul\":1108:1126   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1101:1131   */\n      mstore\n      shl(0x78, 0x4e6f207072697a6520746f20636c61696d)\n        /* \"#utility.yul\":1147:1165   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1140:1187   */\n      mstore\n        /* \"#utility.yul\":1204:1222   */\n      0x64\n      add\n        /* \"gameContract.sol\":2235:2278  require(prizePool > 0, \"No prize to claim\") */\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"gameContract.sol\":2306:2315  prizePool */\n      0x02\n      dup1\n      sload\n        /* \"gameContract.sol\":2289:2303  uint256 amount */\n      0x00\n        /* \"gameContract.sol\":2326:2339  prizePool = 0 */\n      swap1\n      swap2\n      sstore\n        /* \"gameContract.sol\":2360:2367  owner() */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"gameContract.sol\":2360:2367  owner() */\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gameContract.sol\":2352:2377  payable(owner()).transfer */\n      and\n        /* \"gameContract.sol\":2352:2385  payable(owner()).transfer(amount) */\n      0x08fc\n        /* \"gameContract.sol\":2378:2384  amount */\n      dup3\n        /* \"gameContract.sol\":2352:2385  payable(owner()).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_89:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gameContract.sol\":2401:2430  PrizeClaimed(owner(), amount) */\n      and\n      0x95681e512bc0fe659e195e06c283eada494316f3d801213e48e7101af92bf770\n        /* \"gameContract.sol\":2423:2429  amount */\n      dup3\n        /* \"gameContract.sol\":2401:2430  PrizeClaimed(owner(), amount) */\n      mload(0x40)\n      tag_91\n      swap2\n        /* \"#utility.yul\":451:476   */\n      dup2\n      mstore\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n      swap1\n        /* \"#utility.yul\":305:482   */\n      jump\n        /* \"gameContract.sol\":2401:2430  PrizeClaimed(owner(), amount) */\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"gameContract.sol\":2224:2438  {... */\n      pop\n        /* \"gameContract.sol\":2183:2438  function claimPrize() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"gameContract.sol\":1512:1734  function fundPrizePool() external payable onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_98:\n        /* \"gameContract.sol\":1595:1596  0 */\n      0x00\n        /* \"gameContract.sol\":1583:1592  msg.value */\n      callvalue\n        /* \"gameContract.sol\":1583:1596  msg.value > 0 */\n      gt\n        /* \"gameContract.sol\":1575:1637  require(msg.value > 0, \"Must send ETH to fund the prize pool\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1435:1437   */\n      0x20\n        /* \"gameContract.sol\":1575:1637  require(msg.value > 0, \"Must send ETH to fund the prize pool\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1417:1438   */\n      mstore\n        /* \"#utility.yul\":1474:1476   */\n      0x24\n        /* \"#utility.yul\":1454:1472   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":1447:1477   */\n      mstore\n        /* \"#utility.yul\":1513:1547   */\n      0x4d7573742073656e642045544820746f2066756e6420746865207072697a6520\n        /* \"#utility.yul\":1493:1511   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1486:1548   */\n      mstore\n      shl(0xe2, 0x1c1bdbdb)\n        /* \"#utility.yul\":1564:1582   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1557:1591   */\n      mstore\n        /* \"#utility.yul\":1608:1627   */\n      0x84\n      add\n        /* \"gameContract.sol\":1575:1637  require(msg.value > 0, \"Must send ETH to fund the prize pool\") */\n      tag_85\n        /* \"#utility.yul\":1233:1633   */\n      jump\n        /* \"gameContract.sol\":1575:1637  require(msg.value > 0, \"Must send ETH to fund the prize pool\") */\n    tag_100:\n        /* \"gameContract.sol\":1660:1669  prizePool */\n      sload(0x02)\n        /* \"gameContract.sol\":1660:1684  prizePool.add(msg.value) */\n      tag_103\n      swap1\n        /* \"gameContract.sol\":1674:1683  msg.value */\n      callvalue\n        /* \"gameContract.sol\":1660:1673  prizePool.add */\n      tag_104\n        /* \"gameContract.sol\":1660:1684  prizePool.add(msg.value) */\n      jump\t// in\n    tag_103:\n        /* \"gameContract.sol\":1648:1657  prizePool */\n      0x02\n        /* \"gameContract.sol\":1648:1684  prizePool = prizePool.add(msg.value) */\n      sstore\n        /* \"gameContract.sol\":1700:1726  PrizePoolFunded(msg.value) */\n      mload(0x40)\n        /* \"gameContract.sol\":1716:1725  msg.value */\n      callvalue\n        /* \"#utility.yul\":451:476   */\n      dup2\n      mstore\n        /* \"gameContract.sol\":1700:1726  PrizePoolFunded(msg.value) */\n      0x9d81ff1364df34467b23be983916ca00ebe5b231f3c47645a0ad063b56589f48\n      swap1\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"gameContract.sol\":1700:1726  PrizePoolFunded(msg.value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"gameContract.sol\":1512:1734  function fundPrizePool() external payable onlyOwner {... */\n      jump\t// out\n        /* \"gameContract.sol\":972:1504  function playGame() external payable {... */\n    tag_63:\n        /* \"gameContract.sol\":1041:1052  stakeAmount */\n      sload(0x01)\n        /* \"gameContract.sol\":1028:1037  msg.value */\n      callvalue\n        /* \"gameContract.sol\":1028:1052  msg.value == stakeAmount */\n      eq\n        /* \"gameContract.sol\":1020:1079  require(msg.value == stakeAmount, \"Incorrect stake amount\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1840:1842   */\n      0x20\n        /* \"gameContract.sol\":1020:1079  require(msg.value == stakeAmount, \"Incorrect stake amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1822:1843   */\n      mstore\n        /* \"#utility.yul\":1879:1881   */\n      0x16\n        /* \"#utility.yul\":1859:1877   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1852:1882   */\n      mstore\n      shl(0x52, 0x125b98dbdc9c9958dd081cdd185ad948185b5bdd5b9d)\n        /* \"#utility.yul\":1898:1916   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1891:1943   */\n      mstore\n        /* \"#utility.yul\":1960:1978   */\n      0x64\n      add\n        /* \"gameContract.sol\":1020:1079  require(msg.value == stakeAmount, \"Incorrect stake amount\") */\n      tag_85\n        /* \"#utility.yul\":1638:1984   */\n      jump\n        /* \"gameContract.sol\":1020:1079  require(msg.value == stakeAmount, \"Incorrect stake amount\") */\n    tag_108:\n        /* \"gameContract.sol\":1109:1119  msg.sender */\n      caller\n        /* \"gameContract.sol\":1099:1120  hasPlayed[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gameContract.sol\":1099:1108  hasPlayed */\n      0x05\n        /* \"gameContract.sol\":1099:1120  hasPlayed[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"gameContract.sol\":1098:1120  !hasPlayed[msg.sender] */\n      iszero\n        /* \"gameContract.sol\":1090:1153  require(!hasPlayed[msg.sender], \"Already played in this round\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2191:2193   */\n      0x20\n        /* \"gameContract.sol\":1090:1153  require(!hasPlayed[msg.sender], \"Already played in this round\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2173:2194   */\n      mstore\n        /* \"#utility.yul\":2230:2232   */\n      0x1c\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2203:2233   */\n      mstore\n        /* \"#utility.yul\":2269:2299   */\n      0x416c726561647920706c6179656420696e207468697320726f756e6400000000\n        /* \"#utility.yul\":2249:2267   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2242:2300   */\n      mstore\n        /* \"#utility.yul\":2317:2335   */\n      0x64\n      add\n        /* \"gameContract.sol\":1090:1153  require(!hasPlayed[msg.sender], \"Already played in this round\") */\n      tag_85\n        /* \"#utility.yul\":1989:2341   */\n      jump\n        /* \"gameContract.sol\":1090:1153  require(!hasPlayed[msg.sender], \"Already played in this round\") */\n    tag_111:\n        /* \"gameContract.sol\":1179:1189  msg.sender */\n      caller\n        /* \"gameContract.sol\":1166:1190  activeStakes[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gameContract.sol\":1166:1178  activeStakes */\n      0x04\n        /* \"gameContract.sol\":1166:1190  activeStakes[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"gameContract.sol\":1193:1202  msg.value */\n      callvalue\n        /* \"gameContract.sol\":1166:1202  activeStakes[msg.sender] = msg.value */\n      swap1\n      sstore\n        /* \"gameContract.sol\":1213:1222  hasPlayed */\n      0x05\n        /* \"gameContract.sol\":1213:1234  hasPlayed[msg.sender] */\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"gameContract.sol\":1213:1241  hasPlayed[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"gameContract.sol\":1237:1241  true */\n      0x01\n        /* \"gameContract.sol\":1213:1241  hasPlayed[msg.sender] = true */\n      or\n      swap1\n      sstore\n        /* \"gameContract.sol\":1252:1262  lastPlayed */\n      0x06\n        /* \"gameContract.sol\":1252:1274  lastPlayed[msg.sender] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"gameContract.sol\":1277:1292  block.timestamp */\n      timestamp\n        /* \"gameContract.sol\":1252:1292  lastPlayed[msg.sender] = block.timestamp */\n      swap1\n      sstore\n        /* \"gameContract.sol\":1303:1319  totalGamesPlayed */\n      0x03\n        /* \"gameContract.sol\":1303:1321  totalGamesPlayed++ */\n      dup1\n      sload\n      swap2\n      tag_114\n      dup4\n      tag_115\n      jump\t// in\n    tag_114:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"gameContract.sol\":1404:1413  prizePool */\n      sload(0x02)\n        /* \"gameContract.sol\":1404:1428  prizePool.add(msg.value) */\n      tag_116\n      swap1\n        /* \"gameContract.sol\":1418:1427  msg.value */\n      callvalue\n        /* \"gameContract.sol\":1404:1417  prizePool.add */\n      tag_104\n        /* \"gameContract.sol\":1404:1428  prizePool.add(msg.value) */\n      jump\t// in\n    tag_116:\n        /* \"gameContract.sol\":1392:1401  prizePool */\n      0x02\n        /* \"gameContract.sol\":1392:1428  prizePool = prizePool.add(msg.value) */\n      sstore\n        /* \"gameContract.sol\":1446:1496  GamePlayed(msg.sender, msg.value, block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"gameContract.sol\":1469:1478  msg.value */\n      callvalue\n        /* \"#utility.yul\":2792:2817   */\n      dup2\n      mstore\n        /* \"gameContract.sol\":1480:1495  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":2848:2850   */\n      0x20\n        /* \"#utility.yul\":2833:2851   */\n      dup3\n      add\n        /* \"#utility.yul\":2826:2860   */\n      mstore\n        /* \"gameContract.sol\":1457:1467  msg.sender */\n      caller\n      swap2\n        /* \"gameContract.sol\":1446:1496  GamePlayed(msg.sender, msg.value, block.timestamp) */\n      0x24b31e1dbf1732a12bb700d3d77e5fb96ff3b693374d9fa15ccbc03f42715076\n      swap2\n        /* \"#utility.yul\":2765:2783   */\n      add\n        /* \"gameContract.sol\":1446:1496  GamePlayed(msg.sender, msg.value, block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"gameContract.sol\":972:1504  function playGame() external payable {... */\n      jump\t// out\n        /* \"gameContract.sol\":1742:2175  function withdrawStake() external {... */\n    tag_66:\n        /* \"gameContract.sol\":1805:1815  msg.sender */\n      caller\n        /* \"gameContract.sol\":1795:1816  hasPlayed[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gameContract.sol\":1795:1804  hasPlayed */\n      0x05\n        /* \"gameContract.sol\":1795:1816  hasPlayed[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"gameContract.sol\":1787:1836  require(hasPlayed[msg.sender], \"No active stake\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3073:3075   */\n      0x20\n        /* \"gameContract.sol\":1787:1836  require(hasPlayed[msg.sender], \"No active stake\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3055:3076   */\n      mstore\n        /* \"#utility.yul\":3112:3114   */\n      0x0f\n        /* \"#utility.yul\":3092:3110   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3085:3115   */\n      mstore\n      shl(0x88, 0x4e6f20616374697665207374616b65)\n        /* \"#utility.yul\":3131:3149   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3124:3169   */\n      mstore\n        /* \"#utility.yul\":3186:3204   */\n      0x64\n      add\n        /* \"gameContract.sol\":1787:1836  require(hasPlayed[msg.sender], \"No active stake\") */\n      tag_85\n        /* \"#utility.yul\":2871:3210   */\n      jump\n        /* \"gameContract.sol\":1787:1836  require(hasPlayed[msg.sender], \"No active stake\") */\n    tag_120:\n        /* \"gameContract.sol\":1886:1896  msg.sender */\n      caller\n        /* \"gameContract.sol\":1875:1897  lastPlayed[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gameContract.sol\":1875:1885  lastPlayed */\n      0x06\n        /* \"gameContract.sol\":1875:1897  lastPlayed[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"gameContract.sol\":1902:1908  1 days */\n      0x015180\n      swap1\n        /* \"gameContract.sol\":1855:1898  block.timestamp.sub(lastPlayed[msg.sender]) */\n      tag_123\n      swap1\n        /* \"gameContract.sol\":1855:1870  block.timestamp */\n      timestamp\n      swap1\n        /* \"gameContract.sol\":1855:1874  block.timestamp.sub */\n      tag_79\n        /* \"gameContract.sol\":1855:1898  block.timestamp.sub(lastPlayed[msg.sender]) */\n      jump\t// in\n    tag_123:\n        /* \"gameContract.sol\":1855:1908  block.timestamp.sub(lastPlayed[msg.sender]) >= 1 days */\n      lt\n      iszero\n        /* \"gameContract.sol\":1847:1935  require(block.timestamp.sub(lastPlayed[msg.sender]) >= 1 days, \"Stake locked for 1 day\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3417:3419   */\n      0x20\n        /* \"gameContract.sol\":1847:1935  require(block.timestamp.sub(lastPlayed[msg.sender]) >= 1 days, \"Stake locked for 1 day\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3399:3420   */\n      mstore\n        /* \"#utility.yul\":3456:3458   */\n      0x16\n        /* \"#utility.yul\":3436:3454   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3429:3459   */\n      mstore\n      shl(0x50, 0x5374616b65206c6f636b656420666f72203120646179)\n        /* \"#utility.yul\":3475:3493   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3468:3520   */\n      mstore\n        /* \"#utility.yul\":3537:3555   */\n      0x64\n      add\n        /* \"gameContract.sol\":1847:1935  require(block.timestamp.sub(lastPlayed[msg.sender]) >= 1 days, \"Stake locked for 1 day\") */\n      tag_85\n        /* \"#utility.yul\":3215:3561   */\n      jump\n        /* \"gameContract.sol\":1847:1935  require(block.timestamp.sub(lastPlayed[msg.sender]) >= 1 days, \"Stake locked for 1 day\") */\n    tag_124:\n        /* \"gameContract.sol\":1978:1988  msg.sender */\n      caller\n        /* \"gameContract.sol\":1948:1962  uint256 amount */\n      0x00\n        /* \"gameContract.sol\":1965:1989  activeStakes[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"gameContract.sol\":1965:1977  activeStakes */\n      0x04\n        /* \"gameContract.sol\":1965:1989  activeStakes[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      dup1\n      sload\n        /* \"gameContract.sol\":2000:2028  activeStakes[msg.sender] = 0 */\n      swap1\n      dup5\n      swap1\n      sstore\n        /* \"gameContract.sol\":2039:2048  hasPlayed */\n      0x05\n        /* \"gameContract.sol\":2039:2060  hasPlayed[msg.sender] */\n      swap1\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"gameContract.sol\":2039:2068  hasPlayed[msg.sender] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"gameContract.sol\":2081:2117  payable(msg.sender).transfer(amount) */\n      mload\n        /* \"gameContract.sol\":1965:1989  activeStakes[msg.sender] */\n      swap1\n      swap3\n        /* \"gameContract.sol\":1978:1988  msg.sender */\n      swap2\n        /* \"gameContract.sol\":2081:2117  payable(msg.sender).transfer(amount) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"gameContract.sol\":1965:1989  activeStakes[msg.sender] */\n      dup5\n      swap2\n        /* \"gameContract.sol\":2081:2117  payable(msg.sender).transfer(amount) */\n      dup2\n        /* \"gameContract.sol\":1948:1962  uint256 amount */\n      dup2\n        /* \"gameContract.sol\":2081:2117  payable(msg.sender).transfer(amount) */\n      dup2\n        /* \"gameContract.sol\":1965:1989  activeStakes[msg.sender] */\n      dup6\n        /* \"gameContract.sol\":1978:1988  msg.sender */\n      dup9\n        /* \"gameContract.sol\":2081:2117  payable(msg.sender).transfer(amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n        /* \"gameContract.sol\":2133:2167  StakeWithdrawn(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":451:476   */\n      dup2\n      dup2\n      mstore\n        /* \"gameContract.sol\":2148:2158  msg.sender */\n      caller\n      swap1\n        /* \"gameContract.sol\":2133:2167  StakeWithdrawn(msg.sender, amount) */\n      0x8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc\n      swap1\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"gameContract.sol\":2133:2167  StakeWithdrawn(msg.sender, amount) */\n      tag_91\n        /* \"#utility.yul\":305:482   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_133\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":825:876   */\n      mstore\n        /* \"#utility.yul\":798:816   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_85\n        /* \"#utility.yul\":679:882   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_137\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_95\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":825:876   */\n      mstore\n        /* \"#utility.yul\":798:816   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_85\n        /* \"#utility.yul\":679:882   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_137\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_149\n      jump\t// in\n        /* \"#utility.yul\":14:300   */\n    tag_22:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_154:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_137\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":2346:2473   */\n    tag_151:\n        /* \"#utility.yul\":2407:2417   */\n      0x4e487b71\n        /* \"#utility.yul\":2402:2405   */\n      0xe0\n        /* \"#utility.yul\":2398:2418   */\n      shl\n        /* \"#utility.yul\":2395:2396   */\n      0x00\n        /* \"#utility.yul\":2388:2419   */\n      mstore\n        /* \"#utility.yul\":2438:2442   */\n      0x11\n        /* \"#utility.yul\":2435:2436   */\n      0x04\n        /* \"#utility.yul\":2428:2443   */\n      mstore\n        /* \"#utility.yul\":2462:2466   */\n      0x24\n        /* \"#utility.yul\":2459:2460   */\n      0x00\n        /* \"#utility.yul\":2452:2467   */\n      revert\n        /* \"#utility.yul\":2478:2613   */\n    tag_115:\n        /* \"#utility.yul\":2517:2520   */\n      0x00\n        /* \"#utility.yul\":2538:2555   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":2535:2578   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2558:2576   */\n      tag_166\n      tag_151\n      jump\t// in\n    tag_166:\n      pop\n        /* \"#utility.yul\":2605:2606   */\n      0x01\n        /* \"#utility.yul\":2594:2607   */\n      add\n      swap1\n        /* \"#utility.yul\":2478:2613   */\n      jump\t// out\n        /* \"#utility.yul\":3566:3694   */\n    tag_138:\n        /* \"#utility.yul\":3633:3642   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3654:3665   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3651:3688   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":3668:3686   */\n      tag_77\n      tag_151\n      jump\t// in\n        /* \"#utility.yul\":3699:3824   */\n    tag_149:\n        /* \"#utility.yul\":3764:3773   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3785:3795   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3782:3818   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":3798:3816   */\n      tag_77\n      tag_151\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220bc88c9553163062dfed9a1000e954a31a7ba598a652c426ae20fb7af23bed92164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_561": {
									"entryPoint": null,
									"id": 561,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 193,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:812:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:103:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:4"
															},
															"nodeType": "YulIf",
															"src": "105:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "166:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "182:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "176:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "176:16:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:4",
														"type": ""
													}
												],
												"src": "14:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "304:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "314:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "326:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "337:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "322:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "322:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "314:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "356:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "371:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "387:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "392:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "383:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "383:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "396:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "379:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "379:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "349:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "349:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "349:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "273:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "284:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "295:4:4",
														"type": ""
													}
												],
												"src": "203:203:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "585:225:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "602:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "613:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "595:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "595:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "595:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "636:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "647:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "632:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "632:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "652:2:4",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "625:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "625:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "675:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "686:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "671:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "671:18:4"
																	},
																	{
																		"hexValue": "5374616b6520616d6f756e74206d757374206265206772656174657220746861",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "691:34:4",
																		"type": "",
																		"value": "Stake amount must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "664:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "664:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "664:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "746:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "757:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "742:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "742:18:4"
																	},
																	{
																		"hexValue": "6e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "762:5:4",
																		"type": "",
																		"value": "n 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "735:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "735:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "735:33:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "777:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "789:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "800:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "777:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "562:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "576:4:4",
														"type": ""
													}
												],
												"src": "411:399:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Stake amount must be greater tha\")\n        mstore(add(headStart, 96), \"n 0\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161099b38038061099b83398101604081905261002e91610110565b338061005457604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61005d816100c1565b505f81116100b95760405162461bcd60e51b815260206004820152602360248201527f5374616b6520616d6f756e74206d75737420626520677265617465722074686160448201526206e20360ec1b606482015260840161004b565b600155610127565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f60208284031215610120575f80fd5b5051919050565b610867806101345f395ff3fe6080604052600436106100d9575f3560e01c8063719ce73e1161007c578063af89973511610057578063af8997351461020f578063bed9d86114610217578063c506f2331461022b578063f2fde38b14610256575f80fd5b8063719ce73e146101cc57806388b2f7c3146101e15780638da5cb5b146101e9575f80fd5b80635c492129116100b75780635c4921291461017857806360c7dc471461018d57806370740ac9146101a2578063715018a6146101b8575f80fd5b806307cc6d69146100dd57806319262d301461011b57806332d0bbe31461014a575b5f80fd5b3480156100e8575f80fd5b506101086100f73660046107b9565b60046020525f908152604090205481565b6040519081526020015b60405180910390f35b348015610126575f80fd5b5061013a6101353660046107b9565b610275565b6040519015158152602001610112565b348015610155575f80fd5b5061013a6101643660046107b9565b60056020525f908152604090205460ff1681565b348015610183575f80fd5b5061010860035481565b348015610198575f80fd5b5061010860015481565b3480156101ad575f80fd5b506101b66102c8565b005b3480156101c3575f80fd5b506101b66103b9565b3480156101d7575f80fd5b5061010860025481565b6101b66103cc565b3480156101f4575f80fd5b505f546040516001600160a01b039091168152602001610112565b6101b6610474565b348015610222575f80fd5b506101b66105ac565b348015610236575f80fd5b506101086102453660046107b9565b60066020525f908152604090205481565b348015610261575f80fd5b506101b66102703660046107b9565b6106e4565b6001600160a01b0381165f9081526005602052604081205460ff1680156102c257506001600160a01b0382165f9081526006602052604090205462015180906102bf904290610721565b10155b92915050565b6102d0610733565b5f6002541161031a5760405162461bcd60e51b81526020600482015260116024820152704e6f207072697a6520746f20636c61696d60781b60448201526064015b60405180910390fd5b600280545f9091556103335f546001600160a01b031690565b6001600160a01b03166108fc8290811502906040515f60405180830381858888f19350505050158015610368573d5f803e3d5ffd5b505f546001600160a01b03166001600160a01b03167f95681e512bc0fe659e195e06c283eada494316f3d801213e48e7101af92bf770826040516103ae91815260200190565b60405180910390a250565b6103c1610733565b6103ca5f61075f565b565b6103d4610733565b5f341161042f5760405162461bcd60e51b8152602060048201526024808201527f4d7573742073656e642045544820746f2066756e6420746865207072697a65206044820152631c1bdbdb60e21b6064820152608401610311565b60025461043c90346107ae565b6002556040513481527f9d81ff1364df34467b23be983916ca00ebe5b231f3c47645a0ad063b56589f489060200160405180910390a1565b60015434146104be5760405162461bcd60e51b8152602060048201526016602482015275125b98dbdc9c9958dd081cdd185ad948185b5bdd5b9d60521b6044820152606401610311565b335f9081526005602052604090205460ff161561051d5760405162461bcd60e51b815260206004820152601c60248201527f416c726561647920706c6179656420696e207468697320726f756e64000000006044820152606401610311565b335f90815260046020908152604080832034905560058252808320805460ff1916600117905560069091528120429055600380549161055b836107f3565b909155505060025461056d90346107ae565b6002556040805134815242602082015233917f24b31e1dbf1732a12bb700d3d77e5fb96ff3b693374d9fa15ccbc03f42715076910160405180910390a2565b335f9081526005602052604090205460ff166105fc5760405162461bcd60e51b815260206004820152600f60248201526e4e6f20616374697665207374616b6560881b6044820152606401610311565b335f90815260066020526040902054620151809061061b904290610721565b10156106625760405162461bcd60e51b81526020600482015260166024820152755374616b65206c6f636b656420666f7220312064617960501b6044820152606401610311565b335f8181526004602090815260408083208054908490556005909252808320805460ff191690555190929183156108fc02918491818181858888f193505050501580156106b1573d5f803e3d5ffd5b5060405181815233907f8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc906020016103ae565b6106ec610733565b6001600160a01b03811661071557604051631e4fbdf760e01b81525f6004820152602401610311565b61071e8161075f565b50565b5f61072c828461080b565b9392505050565b5f546001600160a01b031633146103ca5760405163118cdaa760e01b8152336004820152602401610311565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f61072c828461081e565b5f602082840312156107c9575f80fd5b81356001600160a01b038116811461072c575f80fd5b634e487b7160e01b5f52601160045260245ffd5b5f60018201610804576108046107df565b5060010190565b818103818111156102c2576102c26107df565b808201808211156102c2576102c26107df56fea2646970667358221220bc88c9553163062dfed9a1000e954a31a7ba598a652c426ae20fb7af23bed92164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x99B CODESIZE SUB DUP1 PUSH2 0x99B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x110 JUMP JUMPDEST CALLER DUP1 PUSH2 0x54 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5D DUP2 PUSH2 0xC1 JUMP JUMPDEST POP PUSH0 DUP2 GT PUSH2 0xB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B6520616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH2 0x127 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x867 DUP1 PUSH2 0x134 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x719CE73E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xAF899735 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xAF899735 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xBED9D861 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xC506F233 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x256 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x719CE73E EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x88B2F7C3 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C492129 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x5C492129 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x60C7DC47 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x70740AC9 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7CC6D69 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x19262D30 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x32D0BBE3 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x112 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x3B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x3CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x112 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x474 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x5AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x2C2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x15180 SWAP1 PUSH2 0x2BF SWAP1 TIMESTAMP SWAP1 PUSH2 0x721 JUMP JUMPDEST LT ISZERO JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0x733 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD GT PUSH2 0x31A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F207072697A6520746F20636C61696D PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH0 SWAP1 SWAP2 SSTORE PUSH2 0x333 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x368 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x95681E512BC0FE659E195E06C283EADA494316F3D801213E48E7101AF92BF770 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x3CA PUSH0 PUSH2 0x75F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3D4 PUSH2 0x733 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x42F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4D7573742073656E642045544820746F2066756E6420746865207072697A6520 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1C1BDBDB PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x43C SWAP1 CALLVALUE PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH32 0x9D81FF1364DF34467B23BE983916CA00EBE5B231F3C47645A0AD063B56589F48 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLVALUE EQ PUSH2 0x4BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B98DBDC9C9958DD081CDD185AD948185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920706C6179656420696E207468697320726F756E6400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLVALUE SWAP1 SSTORE PUSH1 0x5 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 PUSH2 0x55B DUP4 PUSH2 0x7F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH2 0x56D SWAP1 CALLVALUE PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x24B31E1DBF1732A12BB700D3D77E5FB96FF3B693374D9FA15CCBC03F42715076 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F20616374697665207374616B65 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x15180 SWAP1 PUSH2 0x61B SWAP1 TIMESTAMP SWAP1 PUSH2 0x721 JUMP JUMPDEST LT ISZERO PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x5374616B65206C6F636B656420666F72203120646179 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP3 SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6B1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x8108595EB6BAD3ACEFA9DA467D90CC2217686D5C5AC85460F8B7849C840645FC SWAP1 PUSH1 0x20 ADD PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x6EC PUSH2 0x733 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x715 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x311 JUMP JUMPDEST PUSH2 0x71E DUP2 PUSH2 0x75F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x72C DUP3 DUP5 PUSH2 0x80B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3CA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x311 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x72C DUP3 DUP5 PUSH2 0x81E JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x72C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x804 JUMPI PUSH2 0x804 PUSH2 0x7DF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x7DF JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x7DF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC DUP9 0xC9 SSTORE BALANCE PUSH4 0x62DFED9 LOG1 STOP 0xE SWAP6 0x4A BALANCE 0xA7 0xBA MSIZE DUP11 PUSH6 0x2C426AE20FB7 0xAF 0x23 0xBE 0xD9 0x21 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "176:2493:3:-:0;;;769:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;818:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;349:51:4;322:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;871:1:3::1;849:19;:23;841:71;;;::::0;-1:-1:-1;;;841:71:3;;613:2:4;841:71:3::1;::::0;::::1;595:21:4::0;652:2;632:18;;;625:30;691:34;671:18;;;664:62;-1:-1:-1;;;742:18:4;;;735:33;785:19;;841:71:3::1;411:399:4::0;841:71:3::1;923:11;:33:::0;176:2493;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:184:4:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:4;;14:184;-1:-1:-1;14:184:4:o;411:399::-;176:2493:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1843,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": null,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1887,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@activeStakes_508": {
									"entryPoint": null,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_353": {
									"entryPoint": 1966,
									"id": 353,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@canWithdraw_772": {
									"entryPoint": 629,
									"id": 772,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimPrize_750": {
									"entryPoint": 712,
									"id": 750,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fundPrizePool_652": {
									"entryPoint": 972,
									"id": 652,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@hasPlayed_512": {
									"entryPoint": null,
									"id": 512,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastPlayed_516": {
									"entryPoint": null,
									"id": 516,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@playGame_625": {
									"entryPoint": 1140,
									"id": 625,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@prizePool_502": {
									"entryPoint": null,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 953,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeAmount_500": {
									"entryPoint": null,
									"id": 500,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_368": {
									"entryPoint": 1825,
									"id": 368,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalGamesPlayed_504": {
									"entryPoint": null,
									"id": 504,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1764,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawStake_714": {
									"entryPoint": 1452,
									"id": 714,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_35075a8aaf17f88c6d06dfc971cf92115a9114e82f33628ec975082c22053630__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3f199782e4f29a835ea638fe1c7e17a78da2d188961e8a5fe86695b5d6f94265__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3f5071e4757739cd42b9e94901e6f3a73f485622954975b8d77f7b23a078c5be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9e295611c7fff753208b30618c22be66e796815d2bd93579abae4b5ec65907c1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f0eea299b23e35bb62f6facdd8a43d0b4ef250617409b6608fb2d409f5132935__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2015,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3826:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:4"
															},
															"nodeType": "YulIf",
															"src": "94:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:4"
															},
															"nodeType": "YulIf",
															"src": "200:70:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:4",
														"type": ""
													}
												],
												"src": "14:286:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "406:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "416:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "439:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "424:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "424:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "416:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "469:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "451:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "375:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "386:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "397:4:4",
														"type": ""
													}
												],
												"src": "305:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "582:92:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "592:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "615:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "600:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "600:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "592:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "634:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "659:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "652:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "652:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "645:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "645:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "627:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "627:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "551:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "562:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "573:4:4",
														"type": ""
													}
												],
												"src": "487:187:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "780:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "790:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "798:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "798:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "790:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "832:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "847:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "863:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "868:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "859:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "859:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "872:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "855:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "855:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "843:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "843:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "825:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "749:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "760:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "771:4:4",
														"type": ""
													}
												],
												"src": "679:203:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1061:167:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1078:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1089:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1071:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1071:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1071:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1112:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1123:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1108:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1108:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1128:2:4",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1101:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1101:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1101:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1151:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1162:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1147:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1147:18:4"
																	},
																	{
																		"hexValue": "4e6f207072697a6520746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1167:19:4",
																		"type": "",
																		"value": "No prize to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1140:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1140:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1196:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1208:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1219:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1204:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1204:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1196:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f0eea299b23e35bb62f6facdd8a43d0b4ef250617409b6608fb2d409f5132935__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1038:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1052:4:4",
														"type": ""
													}
												],
												"src": "887:341:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1407:226:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1424:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1435:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1417:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1417:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1417:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1458:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1469:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1454:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1454:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1474:2:4",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1447:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1447:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1497:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1508:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1493:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1493:18:4"
																	},
																	{
																		"hexValue": "4d7573742073656e642045544820746f2066756e6420746865207072697a6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1513:34:4",
																		"type": "",
																		"value": "Must send ETH to fund the prize "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1486:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1486:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1568:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1579:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1564:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1564:18:4"
																	},
																	{
																		"hexValue": "706f6f6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1584:6:4",
																		"type": "",
																		"value": "pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1557:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1557:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1557:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1600:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1612:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1623:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1608:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1608:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1600:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_35075a8aaf17f88c6d06dfc971cf92115a9114e82f33628ec975082c22053630__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1384:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1398:4:4",
														"type": ""
													}
												],
												"src": "1233:400:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1812:172:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1829:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1840:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1822:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1822:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1822:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1863:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1874:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1859:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1859:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1879:2:4",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1852:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1852:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1852:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1902:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1913:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1898:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1898:18:4"
																	},
																	{
																		"hexValue": "496e636f7272656374207374616b6520616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1918:24:4",
																		"type": "",
																		"value": "Incorrect stake amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1891:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1891:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1891:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1952:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1964:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1975:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1960:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1960:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1952:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f199782e4f29a835ea638fe1c7e17a78da2d188961e8a5fe86695b5d6f94265__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1789:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1803:4:4",
														"type": ""
													}
												],
												"src": "1638:346:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2163:178:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2180:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2191:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2173:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2214:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2225:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2210:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2210:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2230:2:4",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2203:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2203:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2203:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2253:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2264:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2249:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2249:18:4"
																	},
																	{
																		"hexValue": "416c726561647920706c6179656420696e207468697320726f756e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2269:30:4",
																		"type": "",
																		"value": "Already played in this round"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2242:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2242:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2242:58:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2309:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2321:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2332:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2317:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2317:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2309:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f5071e4757739cd42b9e94901e6f3a73f485622954975b8d77f7b23a078c5be__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2140:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2154:4:4",
														"type": ""
													}
												],
												"src": "1989:352:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2378:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2395:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2402:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2407:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2398:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2398:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2388:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2388:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2388:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2438:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2428:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2428:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2428:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2459:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2462:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2452:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2452:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2452:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2346:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2525:88:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2556:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2558:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2558:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2558:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2541:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2552:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2548:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2548:6:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2538:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:17:4"
															},
															"nodeType": "YulIf",
															"src": "2535:43:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2587:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2598:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2605:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2594:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2594:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2587:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2507:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2517:3:4",
														"type": ""
													}
												],
												"src": "2478:135:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2747:119:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2757:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2769:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2780:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2765:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2765:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2757:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2799:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2810:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2792:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2792:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2792:25:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2837:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2848:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2833:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2833:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2853:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2826:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2826:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2826:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2708:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2719:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2727:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2738:4:4",
														"type": ""
													}
												],
												"src": "2618:248:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3045:165:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3062:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3073:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3096:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3107:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3092:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3092:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3112:2:4",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3085:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3085:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3085:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3135:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3146:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3131:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3131:18:4"
																	},
																	{
																		"hexValue": "4e6f20616374697665207374616b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3151:17:4",
																		"type": "",
																		"value": "No active stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3124:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3124:45:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3124:45:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3178:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3190:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3201:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3186:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3186:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3178:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3022:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3036:4:4",
														"type": ""
													}
												],
												"src": "2871:339:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3389:172:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3406:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3417:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3399:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3399:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3440:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3451:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3436:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3456:2:4",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3429:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3429:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3479:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3490:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3475:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:18:4"
																	},
																	{
																		"hexValue": "5374616b65206c6f636b656420666f72203120646179",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3495:24:4",
																		"type": "",
																		"value": "Stake locked for 1 day"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3468:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3468:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3468:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3529:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3541:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3552:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3537:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3537:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3529:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9e295611c7fff753208b30618c22be66e796815d2bd93579abae4b5ec65907c1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3366:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3380:4:4",
														"type": ""
													}
												],
												"src": "3215:346:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3615:79:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3625:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3637:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3640:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3633:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3633:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3625:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3666:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3668:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3668:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3668:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:4"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3663:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3654:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3654:11:4"
															},
															"nodeType": "YulIf",
															"src": "3651:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3597:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3600:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3606:4:4",
														"type": ""
													}
												],
												"src": "3566:128:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3747:77:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3757:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3768:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3771:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3764:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3764:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3757:3:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3796:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3798:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3798:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3798:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3788:1:4"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3791:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3785:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3785:10:4"
															},
															"nodeType": "YulIf",
															"src": "3782:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3730:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3733:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3739:3:4",
														"type": ""
													}
												],
												"src": "3699:125:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_f0eea299b23e35bb62f6facdd8a43d0b4ef250617409b6608fb2d409f5132935__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"No prize to claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_35075a8aaf17f88c6d06dfc971cf92115a9114e82f33628ec975082c22053630__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Must send ETH to fund the prize \")\n        mstore(add(headStart, 96), \"pool\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3f199782e4f29a835ea638fe1c7e17a78da2d188961e8a5fe86695b5d6f94265__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Incorrect stake amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3f5071e4757739cd42b9e94901e6f3a73f485622954975b8d77f7b23a078c5be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Already played in this round\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"No active stake\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9e295611c7fff753208b30618c22be66e796815d2bd93579abae4b5ec65907c1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Stake locked for 1 day\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100d9575f3560e01c8063719ce73e1161007c578063af89973511610057578063af8997351461020f578063bed9d86114610217578063c506f2331461022b578063f2fde38b14610256575f80fd5b8063719ce73e146101cc57806388b2f7c3146101e15780638da5cb5b146101e9575f80fd5b80635c492129116100b75780635c4921291461017857806360c7dc471461018d57806370740ac9146101a2578063715018a6146101b8575f80fd5b806307cc6d69146100dd57806319262d301461011b57806332d0bbe31461014a575b5f80fd5b3480156100e8575f80fd5b506101086100f73660046107b9565b60046020525f908152604090205481565b6040519081526020015b60405180910390f35b348015610126575f80fd5b5061013a6101353660046107b9565b610275565b6040519015158152602001610112565b348015610155575f80fd5b5061013a6101643660046107b9565b60056020525f908152604090205460ff1681565b348015610183575f80fd5b5061010860035481565b348015610198575f80fd5b5061010860015481565b3480156101ad575f80fd5b506101b66102c8565b005b3480156101c3575f80fd5b506101b66103b9565b3480156101d7575f80fd5b5061010860025481565b6101b66103cc565b3480156101f4575f80fd5b505f546040516001600160a01b039091168152602001610112565b6101b6610474565b348015610222575f80fd5b506101b66105ac565b348015610236575f80fd5b506101086102453660046107b9565b60066020525f908152604090205481565b348015610261575f80fd5b506101b66102703660046107b9565b6106e4565b6001600160a01b0381165f9081526005602052604081205460ff1680156102c257506001600160a01b0382165f9081526006602052604090205462015180906102bf904290610721565b10155b92915050565b6102d0610733565b5f6002541161031a5760405162461bcd60e51b81526020600482015260116024820152704e6f207072697a6520746f20636c61696d60781b60448201526064015b60405180910390fd5b600280545f9091556103335f546001600160a01b031690565b6001600160a01b03166108fc8290811502906040515f60405180830381858888f19350505050158015610368573d5f803e3d5ffd5b505f546001600160a01b03166001600160a01b03167f95681e512bc0fe659e195e06c283eada494316f3d801213e48e7101af92bf770826040516103ae91815260200190565b60405180910390a250565b6103c1610733565b6103ca5f61075f565b565b6103d4610733565b5f341161042f5760405162461bcd60e51b8152602060048201526024808201527f4d7573742073656e642045544820746f2066756e6420746865207072697a65206044820152631c1bdbdb60e21b6064820152608401610311565b60025461043c90346107ae565b6002556040513481527f9d81ff1364df34467b23be983916ca00ebe5b231f3c47645a0ad063b56589f489060200160405180910390a1565b60015434146104be5760405162461bcd60e51b8152602060048201526016602482015275125b98dbdc9c9958dd081cdd185ad948185b5bdd5b9d60521b6044820152606401610311565b335f9081526005602052604090205460ff161561051d5760405162461bcd60e51b815260206004820152601c60248201527f416c726561647920706c6179656420696e207468697320726f756e64000000006044820152606401610311565b335f90815260046020908152604080832034905560058252808320805460ff1916600117905560069091528120429055600380549161055b836107f3565b909155505060025461056d90346107ae565b6002556040805134815242602082015233917f24b31e1dbf1732a12bb700d3d77e5fb96ff3b693374d9fa15ccbc03f42715076910160405180910390a2565b335f9081526005602052604090205460ff166105fc5760405162461bcd60e51b815260206004820152600f60248201526e4e6f20616374697665207374616b6560881b6044820152606401610311565b335f90815260066020526040902054620151809061061b904290610721565b10156106625760405162461bcd60e51b81526020600482015260166024820152755374616b65206c6f636b656420666f7220312064617960501b6044820152606401610311565b335f8181526004602090815260408083208054908490556005909252808320805460ff191690555190929183156108fc02918491818181858888f193505050501580156106b1573d5f803e3d5ffd5b5060405181815233907f8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc906020016103ae565b6106ec610733565b6001600160a01b03811661071557604051631e4fbdf760e01b81525f6004820152602401610311565b61071e8161075f565b50565b5f61072c828461080b565b9392505050565b5f546001600160a01b031633146103ca5760405163118cdaa760e01b8152336004820152602401610311565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f61072c828461081e565b5f602082840312156107c9575f80fd5b81356001600160a01b038116811461072c575f80fd5b634e487b7160e01b5f52601160045260245ffd5b5f60018201610804576108046107df565b5060010190565b818103818111156102c2576102c26107df565b808201808211156102c2576102c26107df56fea2646970667358221220bc88c9553163062dfed9a1000e954a31a7ba598a652c426ae20fb7af23bed92164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x719CE73E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xAF899735 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xAF899735 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xBED9D861 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xC506F233 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x256 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x719CE73E EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x88B2F7C3 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C492129 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x5C492129 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x60C7DC47 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x70740AC9 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7CC6D69 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x19262D30 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x32D0BBE3 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x112 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x3B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x3CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x112 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x474 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x5AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x2C2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x15180 SWAP1 PUSH2 0x2BF SWAP1 TIMESTAMP SWAP1 PUSH2 0x721 JUMP JUMPDEST LT ISZERO JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0x733 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD GT PUSH2 0x31A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F207072697A6520746F20636C61696D PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH0 SWAP1 SWAP2 SSTORE PUSH2 0x333 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x368 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x95681E512BC0FE659E195E06C283EADA494316F3D801213E48E7101AF92BF770 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x3CA PUSH0 PUSH2 0x75F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3D4 PUSH2 0x733 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x42F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4D7573742073656E642045544820746F2066756E6420746865207072697A6520 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1C1BDBDB PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x43C SWAP1 CALLVALUE PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH32 0x9D81FF1364DF34467B23BE983916CA00EBE5B231F3C47645A0AD063B56589F48 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLVALUE EQ PUSH2 0x4BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B98DBDC9C9958DD081CDD185AD948185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920706C6179656420696E207468697320726F756E6400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLVALUE SWAP1 SSTORE PUSH1 0x5 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 PUSH2 0x55B DUP4 PUSH2 0x7F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH2 0x56D SWAP1 CALLVALUE PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x24B31E1DBF1732A12BB700D3D77E5FB96FF3B693374D9FA15CCBC03F42715076 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F20616374697665207374616B65 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x15180 SWAP1 PUSH2 0x61B SWAP1 TIMESTAMP SWAP1 PUSH2 0x721 JUMP JUMPDEST LT ISZERO PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x5374616B65206C6F636B656420666F72203120646179 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP3 SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6B1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x8108595EB6BAD3ACEFA9DA467D90CC2217686D5C5AC85460F8B7849C840645FC SWAP1 PUSH1 0x20 ADD PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x6EC PUSH2 0x733 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x715 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x311 JUMP JUMPDEST PUSH2 0x71E DUP2 PUSH2 0x75F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x72C DUP3 DUP5 PUSH2 0x80B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3CA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x311 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x72C DUP3 DUP5 PUSH2 0x81E JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x72C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x804 JUMPI PUSH2 0x804 PUSH2 0x7DF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x7DF JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x7DF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC DUP9 0xC9 SSTORE BALANCE PUSH4 0x62DFED9 LOG1 STOP 0xE SWAP6 0x4A BALANCE 0xA7 0xBA MSIZE DUP11 PUSH6 0x2C426AE20FB7 0xAF 0x23 0xBE 0xD9 0x21 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "176:2493:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;353:47;;;;;;;;;;-1:-1:-1;353:47:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;451:25:4;;;439:2;424:18;353:47:3;;;;;;;;2504:162;;;;;;;;;;-1:-1:-1;2504:162:3;;;;;:::i;:::-;;:::i;:::-;;;652:14:4;;645:22;627:41;;615:2;600:18;2504:162:3;487:187:4;407:41:3;;;;;;;;;;-1:-1:-1;407:41:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;313:31;;;;;;;;;;;;;;;;249:26;;;;;;;;;;;;;;;;2183:255;;;;;;;;;;;;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;282:24:3:-;;;;;;;;;;;;;;;;1512:222;;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1684:7:0;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:0;;;825:51:4;;813:2;798:18;1638:85:0;679:203:4;972:532:3;;;:::i;1742:433::-;;;;;;;;;;;;;:::i;455:45::-;;;;;;;;;;-1:-1:-1;455:45:3;;;;;:::i;:::-;;;;;;;;;;;;;;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;2504:162:3:-;-1:-1:-1;;;;;2588:17:3;;2564:4;2588:17;;;:9;:17;;;;;;;;:70;;;;-1:-1:-1;;;;;;2629:18:3;;;;;;:10;:18;;;;;;2652:6;;2609:39;;:15;;:19;:39::i;:::-;:49;;2588:70;2581:77;2504:162;-1:-1:-1;;2504:162:3:o;2183:255::-;1531:13:0;:11;:13::i;:::-;2255:1:3::1;2243:9;;:13;2235:43;;;::::0;-1:-1:-1;;;2235:43:3;;1089:2:4;2235:43:3::1;::::0;::::1;1071:21:4::0;1128:2;1108:18;;;1101:30;-1:-1:-1;;;1147:18:4;;;1140:47;1204:18;;2235:43:3::1;;;;;;;;;2306:9;::::0;;2289:14:::1;2326:13:::0;;;2360:7:::1;1684::0::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;2360:7:3::1;-1:-1:-1::0;;;;;2352:25:3::1;:33;2378:6;2352:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;-1:-1:-1;;;;;2401:29:3::1;;2423:6;2401:29;;;;451:25:4::0;;439:2;424:18;;305:177;2401:29:3::1;;;;;;;;2224:214;2183:255::o:0;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1512:222:3:-;1531:13:0;:11;:13::i;:::-;1595:1:3::1;1583:9;:13;1575:62;;;::::0;-1:-1:-1;;;1575:62:3;;1435:2:4;1575:62:3::1;::::0;::::1;1417:21:4::0;1474:2;1454:18;;;1447:30;1513:34;1493:18;;;1486:62;-1:-1:-1;;;1564:18:4;;;1557:34;1608:19;;1575:62:3::1;1233:400:4::0;1575:62:3::1;1660:9;::::0;:24:::1;::::0;1674:9:::1;1660:13;:24::i;:::-;1648:9;:36:::0;1700:26:::1;::::0;1716:9:::1;451:25:4::0;;1700:26:3::1;::::0;439:2:4;424:18;1700:26:3::1;;;;;;;1512:222::o:0;972:532::-;1041:11;;1028:9;:24;1020:59;;;;-1:-1:-1;;;1020:59:3;;1840:2:4;1020:59:3;;;1822:21:4;1879:2;1859:18;;;1852:30;-1:-1:-1;;;1898:18:4;;;1891:52;1960:18;;1020:59:3;1638:346:4;1020:59:3;1109:10;1099:21;;;;:9;:21;;;;;;;;1098:22;1090:63;;;;-1:-1:-1;;;1090:63:3;;2191:2:4;1090:63:3;;;2173:21:4;2230:2;2210:18;;;2203:30;2269;2249:18;;;2242:58;2317:18;;1090:63:3;1989:352:4;1090:63:3;1179:10;1166:24;;;;:12;:24;;;;;;;;1193:9;1166:36;;1213:9;:21;;;;;:28;;-1:-1:-1;;1213:28:3;1237:4;1213:28;;;1252:10;:22;;;;;1277:15;1252:40;;1303:16;:18;;;;;;:::i;:::-;;;;-1:-1:-1;;1404:9:3;;:24;;1418:9;1404:13;:24::i;:::-;1392:9;:36;1446:50;;;1469:9;2792:25:4;;1480:15:3;2848:2:4;2833:18;;2826:34;1457:10:3;;1446:50;;2765:18:4;1446:50:3;;;;;;;972:532::o;1742:433::-;1805:10;1795:21;;;;:9;:21;;;;;;;;1787:49;;;;-1:-1:-1;;;1787:49:3;;3073:2:4;1787:49:3;;;3055:21:4;3112:2;3092:18;;;3085:30;-1:-1:-1;;;3131:18:4;;;3124:45;3186:18;;1787:49:3;2871:339:4;1787:49:3;1886:10;1875:22;;;;:10;:22;;;;;;1902:6;;1855:43;;:15;;:19;:43::i;:::-;:53;;1847:88;;;;-1:-1:-1;;;1847:88:3;;3417:2:4;1847:88:3;;;3399:21:4;3456:2;3436:18;;;3429:30;-1:-1:-1;;;3475:18:4;;;3468:52;3537:18;;1847:88:3;3215:346:4;1847:88:3;1978:10;1948:14;1965:24;;;:12;:24;;;;;;;;;;2000:28;;;;2039:9;:21;;;;;;:29;;-1:-1:-1;;2039:29:3;;;2081:36;1965:24;;1978:10;2081:36;;;;;1965:24;;2081:36;1948:14;2081:36;1965:24;1978:10;2081:36;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2133:34:3;;451:25:4;;;2148:10:3;;2133:34;;439:2:4;424:18;2133:34:3;305:177:4;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;825:51:4::0;798:18;;2672:31:0::1;679:203:4::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3122:96:2:-;3180:7;3206:5;3210:1;3206;:5;:::i;:::-;3199:12;3122:96;-1:-1:-1;;;3122:96:2:o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:1;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;825:51:4;798:18;;1901:40:0;679:203:4;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;2755:96:2:-;2813:7;2839:5;2843:1;2839;:5;:::i;14:286:4:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:4;;210:42;;200:70;;266:1;263;256:12;2346:127;2407:10;2402:3;2398:20;2395:1;2388:31;2438:4;2435:1;2428:15;2462:4;2459:1;2452:15;2478:135;2517:3;2538:17;;;2535:43;;2558:18;;:::i;:::-;-1:-1:-1;2605:1:4;2594:13;;2478:135::o;3566:128::-;3633:9;;;3654:11;;;3651:37;;;3668:18;;:::i;3699:125::-;3764:9;;;3785:10;;;3782:36;;;3798:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "430200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"activeStakes(address)": "2494",
								"canWithdraw(address)": "infinite",
								"claimPrize()": "infinite",
								"fundPrizePool()": "27728",
								"hasPlayed(address)": "2561",
								"lastPlayed(address)": "2536",
								"owner()": "2366",
								"playGame()": "123395",
								"prizePool()": "2306",
								"renounceOwnership()": "infinite",
								"stakeAmount()": "2328",
								"totalGamesPlayed()": "2306",
								"transferOwnership(address)": "28382",
								"withdrawStake()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 176,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 176,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 176,
									"end": 2669,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 964,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 964,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 964,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 769,
									"end": 964,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 769,
									"end": 964,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 769,
									"end": 964,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 769,
									"end": 964,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 769,
									"end": 964,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 769,
									"end": 964,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 818,
									"end": 828,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 818,
									"end": 828,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 349,
									"end": 400,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 322,
									"end": 340,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 322,
									"end": 340,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 871,
									"end": 872,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 849,
									"end": 868,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 849,
									"end": 872,
									"modifierDepth": 1,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 841,
									"end": 912,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 841,
									"end": 912,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 841,
									"end": 912,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 841,
									"end": 912,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 841,
									"end": 912,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 841,
									"end": 912,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 613,
									"end": 615,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 841,
									"end": 912,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 841,
									"end": 912,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 841,
									"end": 912,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 595,
									"end": 616,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 652,
									"end": 654,
									"name": "PUSH",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 632,
									"end": 650,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 632,
									"end": 650,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 632,
									"end": 650,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 625,
									"end": 655,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 691,
									"end": 725,
									"name": "PUSH",
									"source": 4,
									"value": "5374616B6520616D6F756E74206D757374206265206772656174657220746861"
								},
								{
									"begin": 671,
									"end": 689,
									"name": "PUSH",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 671,
									"end": 689,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 671,
									"end": 689,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 664,
									"end": 726,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6E203"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 742,
									"end": 760,
									"name": "PUSH",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 742,
									"end": 760,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 742,
									"end": 760,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 735,
									"end": 768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 785,
									"end": 804,
									"name": "PUSH",
									"source": 4,
									"value": "84"
								},
								{
									"begin": 785,
									"end": 804,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 841,
									"end": 912,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 411,
									"end": 810,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 841,
									"end": 912,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 841,
									"end": 912,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 923,
									"end": 934,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 923,
									"end": 956,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 176,
									"end": 2669,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 176,
									"end": 2669,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 176,
									"end": 192,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 14,
									"end": 198,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 411,
									"end": 810,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 411,
									"end": 810,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 176,
									"end": 2669,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 176,
									"end": 2669,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 176,
									"end": 2669,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 176,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 2669,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 176,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 2669,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc88c9553163062dfed9a1000e954a31a7ba598a652c426ae20fb7af23bed92164736f6c63430008140033",
									".code": [
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "719CE73E"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "AF899735"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "AF899735"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "BED9D861"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "C506F233"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "719CE73E"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "88B2F7C3"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "5C492129"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "5C492129"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "60C7DC47"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "70740AC9"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "7CC6D69"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "19262D30"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "32D0BBE3"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 2669,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 353,
											"end": 400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 353,
											"end": 400,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 353,
											"end": 400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 353,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 353,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 353,
											"end": 400,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 353,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 353,
											"end": 400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 353,
											"end": 400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 353,
											"end": 400,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 353,
											"end": 400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 353,
											"end": 400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 353,
											"end": 400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 353,
											"end": 400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 451,
											"end": 476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 353,
											"end": 400,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 353,
											"end": 400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 353,
											"end": 400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 353,
											"end": 400,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2504,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2504,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 652,
											"end": 666,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 645,
											"end": 667,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 627,
											"end": 668,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 627,
											"end": 668,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 615,
											"end": 617,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 600,
											"end": 618,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 487,
											"end": 674,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 407,
											"end": 448,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 407,
											"end": 448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 407,
											"end": 448,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 407,
											"end": 448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 448,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 407,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 407,
											"end": 448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 407,
											"end": 448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 448,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 407,
											"end": 448,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 407,
											"end": 448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 407,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 407,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 407,
											"end": 448,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 407,
											"end": 448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 407,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 407,
											"end": 448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 407,
											"end": 448,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 407,
											"end": 448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 407,
											"end": 448,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 407,
											"end": 448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 407,
											"end": 448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 407,
											"end": 448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 407,
											"end": 448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 448,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 407,
											"end": 448,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 407,
											"end": 448,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 407,
											"end": 448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 407,
											"end": 448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 448,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 313,
											"end": 344,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 313,
											"end": 344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 313,
											"end": 344,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 313,
											"end": 344,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 313,
											"end": 344,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 313,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 313,
											"end": 344,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 313,
											"end": 344,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 344,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 313,
											"end": 344,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 313,
											"end": 344,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 313,
											"end": 344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 313,
											"end": 344,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 313,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 344,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 313,
											"end": 344,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 313,
											"end": 344,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 313,
											"end": 344,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 249,
											"end": 275,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 249,
											"end": 275,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 249,
											"end": 275,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 249,
											"end": 275,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 249,
											"end": 275,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 249,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 249,
											"end": 275,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 249,
											"end": 275,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 275,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 249,
											"end": 275,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 249,
											"end": 275,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 249,
											"end": 275,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 249,
											"end": 275,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 249,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 275,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 249,
											"end": 275,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 249,
											"end": 275,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 249,
											"end": 275,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2438,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2183,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2438,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2438,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2438,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2183,
											"end": 2438,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2438,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2438,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2438,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2438,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2183,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2438,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2183,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2183,
											"end": 2438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2438,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2183,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2438,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 282,
											"end": 306,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 282,
											"end": 306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 282,
											"end": 306,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 282,
											"end": 306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 282,
											"end": 306,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 282,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 282,
											"end": 306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 282,
											"end": 306,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 282,
											"end": 306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 282,
											"end": 306,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 282,
											"end": 306,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 282,
											"end": 306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 282,
											"end": 306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 282,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 282,
											"end": 306,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 282,
											"end": 306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 282,
											"end": 306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 282,
											"end": 306,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1512,
											"end": 1734,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1512,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1512,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1512,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 825,
											"end": 876,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 825,
											"end": 876,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 813,
											"end": 815,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 679,
											"end": 882,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1504,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 972,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 972,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 972,
											"end": 1504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 2175,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1742,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 2175,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 2175,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 2175,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1742,
											"end": 2175,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 2175,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 2175,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 2175,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 2175,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1742,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 2175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1742,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1742,
											"end": 2175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 455,
											"end": 500,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 455,
											"end": 500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 455,
											"end": 500,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 455,
											"end": 500,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 455,
											"end": 500,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 455,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 455,
											"end": 500,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 455,
											"end": 500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 500,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 455,
											"end": 500,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 455,
											"end": 500,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 455,
											"end": 500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 455,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 455,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 455,
											"end": 500,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 455,
											"end": 500,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 455,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 455,
											"end": 500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 455,
											"end": 500,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 455,
											"end": 500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 455,
											"end": 500,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 455,
											"end": 500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 455,
											"end": 500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 455,
											"end": 500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 455,
											"end": 500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 455,
											"end": 500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 455,
											"end": 500,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 455,
											"end": 500,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 455,
											"end": 500,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 455,
											"end": 500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 455,
											"end": 500,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2588,
											"end": 2605,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2605,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2564,
											"end": 2568,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2605,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2605,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2597,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2588,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2588,
											"end": 2605,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2588,
											"end": 2605,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2605,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2605,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2588,
											"end": 2605,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2658,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2588,
											"end": 2658,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2629,
											"end": 2647,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2647,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2647,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2629,
											"end": 2647,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2647,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2647,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2639,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2629,
											"end": 2647,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2629,
											"end": 2647,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2647,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2629,
											"end": 2647,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2647,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2647,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2658,
											"name": "PUSH",
											"source": 3,
											"value": "15180"
										},
										{
											"begin": 2652,
											"end": 2658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2609,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2609,
											"end": 2648,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2609,
											"end": 2624,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 2609,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2609,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2609,
											"end": 2648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2609,
											"end": 2648,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2609,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2609,
											"end": 2658,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2609,
											"end": 2658,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2658,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2588,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2666,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2504,
											"end": 2666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2438,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2183,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2243,
											"end": 2252,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2243,
											"end": 2256,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2278,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2235,
											"end": 2278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2278,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1091,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2235,
											"end": 2278,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1092,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1130,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1108,
											"end": 1126,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1108,
											"end": 1126,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1126,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1131,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F207072697A6520746F20636C61696D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1147,
											"end": 1165,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1147,
											"end": 1165,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1165,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1140,
											"end": 1187,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1204,
											"end": 1222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2306,
											"end": 2315,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2315,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2289,
											"end": 2303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2326,
											"end": 2339,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2326,
											"end": 2339,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2326,
											"end": 2339,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2360,
											"end": 2367,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2367,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2360,
											"end": 2367,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2352,
											"end": 2377,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 2378,
											"end": 2384,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2385,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2352,
											"end": 2385,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2401,
											"end": 2430,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "95681E512BC0FE659E195E06C283EADA494316F3D801213E48E7101AF92BF770"
										},
										{
											"begin": 2423,
											"end": 2429,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2430,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2401,
											"end": 2430,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 424,
											"end": 442,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 305,
											"end": 482,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2430,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2401,
											"end": 2430,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2430,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2430,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2430,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2430,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2430,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2430,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 2224,
											"end": 2438,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1734,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1512,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1595,
											"end": 1596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1592,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1596,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1575,
											"end": 1637,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1575,
											"end": 1637,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1575,
											"end": 1637,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1637,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1435,
											"end": 1437,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1575,
											"end": 1637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1575,
											"end": 1637,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1637,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1474,
											"end": 1476,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1477,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1547,
											"name": "PUSH",
											"source": 4,
											"value": "4D7573742073656E642045544820746F2066756E6420746865207072697A6520"
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1486,
											"end": 1548,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C1BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1564,
											"end": 1582,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1564,
											"end": 1582,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1564,
											"end": 1582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1608,
											"end": 1627,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1608,
											"end": 1627,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1233,
											"end": 1633,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1575,
											"end": 1637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1660,
											"end": 1669,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1684,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1660,
											"end": 1684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1683,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1673,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1660,
											"end": 1684,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1684,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1660,
											"end": 1684,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1648,
											"end": 1657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1648,
											"end": 1684,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1725,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "9D81FF1364DF34467B23BE983916CA00EBE5B231F3C47645A0AD063B56589F48"
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1700,
											"end": 1726,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1726,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1726,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1726,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1726,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1726,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 1512,
											"end": 1734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1504,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 972,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1052,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1052,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1052,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1020,
											"end": 1079,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1079,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1079,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1020,
											"end": 1079,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1079,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1020,
											"end": 1079,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1020,
											"end": 1079,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1079,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 1843,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1881,
											"name": "PUSH",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1859,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1859,
											"end": 1877,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1859,
											"end": 1877,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B98DBDC9C9958DD081CDD185AD948185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1898,
											"end": 1916,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1898,
											"end": 1916,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 1916,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1943,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1978,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1960,
											"end": 1978,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1984,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1079,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1020,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1119,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1099,
											"end": 1120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1099,
											"end": 1120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1099,
											"end": 1120,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1099,
											"end": 1108,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1099,
											"end": 1120,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1099,
											"end": 1120,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1099,
											"end": 1120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1099,
											"end": 1120,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1099,
											"end": 1120,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1099,
											"end": 1120,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1099,
											"end": 1120,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1098,
											"end": 1120,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2193,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2173,
											"end": 2194,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2230,
											"end": 2232,
											"name": "PUSH",
											"source": 4,
											"value": "1C"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2233,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2299,
											"name": "PUSH",
											"source": 4,
											"value": "416C726561647920706C6179656420696E207468697320726F756E6400000000"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1989,
											"end": 2341,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1179,
											"end": 1189,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1190,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1190,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1166,
											"end": 1190,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1190,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1190,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1166,
											"end": 1190,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1190,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1190,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1202,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1202,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1202,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1222,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1237,
											"end": 1241,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1262,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1252,
											"end": 1274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1274,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1274,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1274,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1274,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1277,
											"end": 1292,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1292,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1292,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1319,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1303,
											"end": 1321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1321,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1303,
											"end": 1321,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1303,
											"end": 1321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1321,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1303,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1321,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1404,
											"end": 1413,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1404,
											"end": 1413,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1404,
											"end": 1428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1427,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1404,
											"end": 1428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1428,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1404,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1392,
											"end": 1428,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1446,
											"end": 1496,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1446,
											"end": 1496,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1446,
											"end": 1496,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2792,
											"end": 2817,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2817,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1480,
											"end": 1495,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 2848,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2833,
											"end": 2851,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2833,
											"end": 2851,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1467,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1467,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1446,
											"end": 1496,
											"name": "PUSH",
											"source": 3,
											"value": "24B31E1DBF1732A12BB700D3D77E5FB96FF3B693374D9FA15CCBC03F42715076"
										},
										{
											"begin": 1446,
											"end": 1496,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2783,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1446,
											"end": 1496,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1446,
											"end": 1496,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1446,
											"end": 1496,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1446,
											"end": 1496,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1446,
											"end": 1496,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1446,
											"end": 1496,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1446,
											"end": 1496,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 2175,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1742,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1815,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1804,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1787,
											"end": 1836,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1836,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1787,
											"end": 1836,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1787,
											"end": 1836,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1836,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3075,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1787,
											"end": 1836,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1787,
											"end": 1836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1836,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3055,
											"end": 3076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3112,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 3092,
											"end": 3110,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3092,
											"end": 3110,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3092,
											"end": 3110,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F20616374697665207374616B65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3131,
											"end": 3149,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3131,
											"end": 3149,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3131,
											"end": 3149,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3124,
											"end": 3169,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1787,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2871,
											"end": 3210,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1787,
											"end": 1836,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1787,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1886,
											"end": 1896,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1897,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1897,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1885,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1875,
											"end": 1897,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1897,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1875,
											"end": 1897,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1897,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1897,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1908,
											"name": "PUSH",
											"source": 3,
											"value": "15180"
										},
										{
											"begin": 1902,
											"end": 1908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1855,
											"end": 1898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1870,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1870,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1855,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1898,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1855,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1908,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1908,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1847,
											"end": 1935,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1935,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1935,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1847,
											"end": 1935,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1935,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3417,
											"end": 3419,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1847,
											"end": 1935,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1847,
											"end": 1935,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1935,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3420,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3456,
											"end": 3458,
											"name": "PUSH",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3436,
											"end": 3454,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3436,
											"end": 3454,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3436,
											"end": 3454,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3459,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5374616B65206C6F636B656420666F72203120646179"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3475,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3475,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3520,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3537,
											"end": 3555,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3537,
											"end": 3555,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3215,
											"end": 3561,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1935,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1847,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 1988,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1962,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1965,
											"end": 1989,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 1989,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 1989,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 1977,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1965,
											"end": 1989,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1965,
											"end": 1989,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 1989,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 1989,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 1989,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1965,
											"end": 1989,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 1989,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 1989,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 1989,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 1989,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2028,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2028,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2028,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2028,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2039,
											"end": 2060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2060,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2060,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2060,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2060,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2060,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2068,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2068,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2039,
											"end": 2068,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2068,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2068,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 1989,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 1989,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 1988,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 1989,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 1989,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1962,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 1989,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 1988,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2081,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2133,
											"end": 2167,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2167,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2158,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2148,
											"end": 2158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2167,
											"name": "PUSH",
											"source": 3,
											"value": "8108595EB6BAD3ACEFA9DA467D90CC2217686D5C5AC85460F8B7849C840645FC"
										},
										{
											"begin": 2133,
											"end": 2167,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 305,
											"end": 482,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 825,
											"end": 876,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 798,
											"end": 816,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 679,
											"end": 882,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 825,
											"end": 876,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 798,
											"end": 816,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 679,
											"end": 882,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2473,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2346,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2417,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 2402,
											"end": 2405,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2395,
											"end": 2396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2419,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2442,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2428,
											"end": 2443,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2462,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2459,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2467,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2613,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2478,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2520,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2538,
											"end": 2555,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2538,
											"end": 2555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2538,
											"end": 2555,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2535,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2535,
											"end": 2578,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2558,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2605,
											"end": 2606,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3694,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3566,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3642,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 3665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 3665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 3665,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3651,
											"end": 3688,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3651,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3651,
											"end": 3688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3668,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3668,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3668,
											"end": 3686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3824,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3699,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3764,
											"end": 3773,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3764,
											"end": 3773,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3764,
											"end": 3773,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3785,
											"end": 3795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3785,
											"end": 3795,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3785,
											"end": 3795,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3782,
											"end": 3818,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3782,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3782,
											"end": 3818,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3798,
											"end": 3816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"gameContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"activeStakes(address)": "07cc6d69",
							"canWithdraw(address)": "19262d30",
							"claimPrize()": "70740ac9",
							"fundPrizePool()": "88b2f7c3",
							"hasPlayed(address)": "32d0bbe3",
							"lastPlayed(address)": "c506f233",
							"owner()": "8da5cb5b",
							"playGame()": "af899735",
							"prizePool()": "719ce73e",
							"renounceOwnership()": "715018a6",
							"stakeAmount()": "60c7dc47",
							"totalGamesPlayed()": "5c492129",
							"transferOwnership(address)": "f2fde38b",
							"withdrawStake()": "bed9d861"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialStakeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"GamePlayed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PrizeClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PrizePoolFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"activeStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"canWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPrize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundPrizePool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasPlayed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastPlayed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"playGame\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prizePool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalGamesPlayed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gameContract.sol\":\"VersaGames\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"gameContract.sol\":{\"keccak256\":\"0xc8af268ccf1f08a91ebcbb826b8f8164f58a1b02a04d5662240addad0fc29a36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c07a0cee2525dfaadad0ffe38a7078285574cfadfc41f0e982c66136edb1fb6f\",\"dweb:/ipfs/QmZaWVhd7DbZUebxabHjz3Mquo2hq2oXT7hrmFmyW6pYLw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "gameContract.sol:VersaGames",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 500,
								"contract": "gameContract.sol:VersaGames",
								"label": "stakeAmount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 502,
								"contract": "gameContract.sol:VersaGames",
								"label": "prizePool",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 504,
								"contract": "gameContract.sol:VersaGames",
								"label": "totalGamesPlayed",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 508,
								"contract": "gameContract.sol:VersaGames",
								"label": "activeStakes",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 512,
								"contract": "gameContract.sol:VersaGames",
								"label": "hasPlayed",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 516,
								"contract": "gameContract.sol:VersaGames",
								"label": "lastPlayed",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							489
						]
					},
					"id": 490,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 180,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 489,
							"linearizedBaseContracts": [
								489
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 210,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															193
														],
														"declarations": [
															{
																"constant": false,
																"id": 193,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 192,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 197,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 195,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 198,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 199,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 205,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 203,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 191,
															"id": 204,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 207,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 208,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 191,
														"id": 209,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 187,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 489,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 238,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 224,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 225,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 231,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 229,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 223,
															"id": 230,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 233,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 234,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 217,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 236,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 223,
														"id": 237,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 219,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 489,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 280,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 252,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 259,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 257,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 251,
															"id": 258,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															261
														],
														"declarations": [
															{
																"constant": false,
																"id": 261,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 280,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 260,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 265,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 262,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 263,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 245,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 266,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 261,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 267,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 243,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 269,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 245,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 275,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 273,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 251,
															"id": 274,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 277,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 261,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 278,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 251,
														"id": 279,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 489,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 294,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 301,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 299,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 293,
															"id": 300,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 303,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 285,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 304,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 306,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 293,
														"id": 307,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 489,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 322,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 329,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 327,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 321,
															"id": 328,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 331,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 313,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 332,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 334,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 321,
														"id": 335,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 489,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 348,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 349,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 347,
												"id": 351,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 489,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 363,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 364,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 362,
												"id": 366,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 489,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 378,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 379,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 377,
												"id": 381,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 489,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 393,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 394,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 392,
												"id": 396,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 489,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 408,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 409,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 407,
												"id": 411,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 489,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "5054:106:2",
										"statements": [
											{
												"id": 436,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 426,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 418,
																		"src": "5096:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 427,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "5101:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 429,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "5104:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 425,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 431,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 432,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "5138:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 433,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "5142:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 424,
														"id": 435,
														"nodeType": "Return",
														"src": "5131:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "4972:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "4983:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "4994:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 419,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:2"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "5045:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:2"
									},
									"scope": 489,
									"src": "4959:201:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "5739:105:2",
										"statements": [
											{
												"id": 461,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 451,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "5781:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 454,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "5788:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 450,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 456,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 457,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "5822:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 458,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "5826:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 449,
														"id": 460,
														"nodeType": "Return",
														"src": "5815:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "5657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "5668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "5679:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:2"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "5730:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:2"
									},
									"scope": 489,
									"src": "5644:200:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "6585:105:2",
										"statements": [
											{
												"id": 486,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 476,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "6627:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 479,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "6634:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 475,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 481,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 482,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "6668:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 483,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "6672:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 474,
														"id": 485,
														"nodeType": "Return",
														"src": "6661:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "6503:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "6514:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "6525:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 469,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:2"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "6576:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:2"
									},
									"scope": 489,
									"src": "6490:200:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 490,
							"src": "482:6210:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:2"
				},
				"id": 2
			},
			"gameContract.sol": {
				"ast": {
					"absolutePath": "gameContract.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						],
						"SafeMath": [
							489
						],
						"VersaGames": [
							773
						]
					},
					"id": 774,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 491,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 492,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 774,
							"sourceUnit": 148,
							"src": "61:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 493,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 774,
							"sourceUnit": 490,
							"src": "115:57:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 494,
										"name": "Ownable",
										"nameLocations": [
											"199:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "199:7:3"
									},
									"id": 495,
									"nodeType": "InheritanceSpecifier",
									"src": "199:7:3"
								}
							],
							"canonicalName": "VersaGames",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 773,
							"linearizedBaseContracts": [
								773,
								147,
								177
							],
							"name": "VersaGames",
							"nameLocation": "185:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 498,
									"libraryName": {
										"id": 496,
										"name": "SafeMath",
										"nameLocations": [
											"220:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 489,
										"src": "220:8:3"
									},
									"nodeType": "UsingForDirective",
									"src": "214:27:3",
									"typeName": {
										"id": 497,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "233:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "60c7dc47",
									"id": 500,
									"mutability": "mutable",
									"name": "stakeAmount",
									"nameLocation": "264:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 773,
									"src": "249:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 499,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "249:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "719ce73e",
									"id": 502,
									"mutability": "mutable",
									"name": "prizePool",
									"nameLocation": "297:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 773,
									"src": "282:24:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 501,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "282:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5c492129",
									"id": 504,
									"mutability": "mutable",
									"name": "totalGamesPlayed",
									"nameLocation": "328:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 773,
									"src": "313:31:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 503,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "313:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "07cc6d69",
									"id": 508,
									"mutability": "mutable",
									"name": "activeStakes",
									"nameLocation": "388:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 773,
									"src": "353:47:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 507,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 505,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "361:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "353:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 506,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "372:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "32d0bbe3",
									"id": 512,
									"mutability": "mutable",
									"name": "hasPlayed",
									"nameLocation": "439:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 773,
									"src": "407:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 511,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 509,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "415:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "407:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 510,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "426:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c506f233",
									"id": 516,
									"mutability": "mutable",
									"name": "lastPlayed",
									"nameLocation": "490:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 773,
									"src": "455:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 515,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 513,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "463:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "455:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 514,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "474:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "24b31e1dbf1732a12bb700d3d77e5fb96ff3b693374d9fa15ccbc03f42715076",
									"id": 524,
									"name": "GamePlayed",
									"nameLocation": "515:10:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "542:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "526:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "558:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "550:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "574:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "566:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:59:3"
									},
									"src": "509:76:3"
								},
								{
									"anonymous": false,
									"eventSelector": "9d81ff1364df34467b23be983916ca00ebe5b231f3c47645a0ad063b56589f48",
									"id": 528,
									"name": "PrizePoolFunded",
									"nameLocation": "597:15:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "621:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "613:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:16:3"
									},
									"src": "591:38:3"
								},
								{
									"anonymous": false,
									"eventSelector": "8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc",
									"id": 534,
									"name": "StakeWithdrawn",
									"nameLocation": "641:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "672:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "656:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "688:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "680:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:40:3"
									},
									"src": "635:61:3"
								},
								{
									"anonymous": false,
									"eventSelector": "95681e512bc0fe659e195e06c283eada494316f3d801213e48e7101af92bf770",
									"id": 540,
									"name": "PrizeClaimed",
									"nameLocation": "708:12:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"indexed": true,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "737:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "721:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "745:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:40:3"
									},
									"src": "702:59:3"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "830:134:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 550,
																"name": "_initialStakeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 542,
																"src": "849:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "871:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "849:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b6520616d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "874:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30",
																"typeString": "literal_string \"Stake amount must be greater than 0\""
															},
															"value": "Stake amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30",
																"typeString": "literal_string \"Stake amount must be greater than 0\""
															}
														],
														"id": 549,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "841:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "841:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "841:71:3"
											},
											{
												"expression": {
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 556,
														"name": "stakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "923:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 557,
														"name": "_initialStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "937:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "923:33:3"
											}
										]
									},
									"id": 561,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 545,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "818:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "822:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "818:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 547,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 544,
												"name": "Ownable",
												"nameLocations": [
													"810:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "810:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "810:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "_initialStakeAmount",
												"nameLocation": "789:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "781:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "780:29:3"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "830:0:3"
									},
									"scope": 773,
									"src": "769:195:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "1009:495:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 565,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1028:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1032:5:3",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1028:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 567,
																"name": "stakeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "1041:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1028:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f7272656374207374616b6520616d6f756e74",
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1054:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f199782e4f29a835ea638fe1c7e17a78da2d188961e8a5fe86695b5d6f94265",
																"typeString": "literal_string \"Incorrect stake amount\""
															},
															"value": "Incorrect stake amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f199782e4f29a835ea638fe1c7e17a78da2d188961e8a5fe86695b5d6f94265",
																"typeString": "literal_string \"Incorrect stake amount\""
															}
														],
														"id": 564,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1020:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1020:59:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "1020:59:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1098:22:3",
															"subExpression": {
																"baseExpression": {
																	"id": 573,
																	"name": "hasPlayed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "1099:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 576,
																"indexExpression": {
																	"expression": {
																		"id": 574,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1109:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1113:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1109:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1099:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920706c6179656420696e207468697320726f756e64",
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1122:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f5071e4757739cd42b9e94901e6f3a73f485622954975b8d77f7b23a078c5be",
																"typeString": "literal_string \"Already played in this round\""
															},
															"value": "Already played in this round"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f5071e4757739cd42b9e94901e6f3a73f485622954975b8d77f7b23a078c5be",
																"typeString": "literal_string \"Already played in this round\""
															}
														],
														"id": 572,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1090:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1090:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "1090:63:3"
											},
											{
												"expression": {
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 581,
															"name": "activeStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "1166:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 584,
														"indexExpression": {
															"expression": {
																"id": 582,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1179:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1183:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1179:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1166:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 585,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1193:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1197:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1193:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1166:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "1166:36:3"
											},
											{
												"expression": {
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 589,
															"name": "hasPlayed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "1213:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 592,
														"indexExpression": {
															"expression": {
																"id": 590,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1223:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1227:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1223:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1213:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1237:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1213:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "1213:28:3"
											},
											{
												"expression": {
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 596,
															"name": "lastPlayed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "1252:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 599,
														"indexExpression": {
															"expression": {
																"id": 597,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1263:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1267:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1263:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1252:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 600,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1277:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1283:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1277:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1252:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "1252:40:3"
											},
											{
												"expression": {
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1303:18:3",
													"subExpression": {
														"id": 604,
														"name": "totalGamesPlayed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "1303:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "1303:18:3"
											},
											{
												"expression": {
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 607,
														"name": "prizePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "1392:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 610,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1418:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1422:5:3",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1418:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 608,
																"name": "prizePool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "1404:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1414:3:3",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 353,
															"src": "1404:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1404:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1392:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "1392:36:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 616,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1457:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1461:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1457:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 618,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1469:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:5:3",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1469:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 620,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1480:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1486:9:3",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1480:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 615,
														"name": "GamePlayed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "1446:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1446:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "EmitStatement",
												"src": "1441:55:3"
											}
										]
									},
									"functionSelector": "af899735",
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "playGame",
									"nameLocation": "981:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "989:2:3"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1009:0:3"
									},
									"scope": 773,
									"src": "972:532:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "1564:170:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 631,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1583:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1587:5:3",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1583:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1595:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1583:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742073656e642045544820746f2066756e6420746865207072697a6520706f6f6c",
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1598:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35075a8aaf17f88c6d06dfc971cf92115a9114e82f33628ec975082c22053630",
																"typeString": "literal_string \"Must send ETH to fund the prize pool\""
															},
															"value": "Must send ETH to fund the prize pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35075a8aaf17f88c6d06dfc971cf92115a9114e82f33628ec975082c22053630",
																"typeString": "literal_string \"Must send ETH to fund the prize pool\""
															}
														],
														"id": 630,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1575:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1575:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "1575:62:3"
											},
											{
												"expression": {
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 638,
														"name": "prizePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "1648:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 641,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1674:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1678:5:3",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1674:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 639,
																"name": "prizePool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "1660:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1670:3:3",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 353,
															"src": "1660:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1660:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1648:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "1648:36:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 647,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1716:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1720:5:3",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1716:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "PrizePoolFunded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "1700:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1700:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "EmitStatement",
												"src": "1695:31:3"
											}
										]
									},
									"functionSelector": "88b2f7c3",
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 628,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 627,
												"name": "onlyOwner",
												"nameLocations": [
													"1554:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1554:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1554:9:3"
										}
									],
									"name": "fundPrizePool",
									"nameLocation": "1521:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1534:2:3"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1564:0:3"
									},
									"scope": 773,
									"src": "1512:222:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "1776:399:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 656,
																"name": "hasPlayed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "1795:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 659,
															"indexExpression": {
																"expression": {
																	"id": 657,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1805:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1809:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1805:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1795:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20616374697665207374616b65",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1818:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d",
																"typeString": "literal_string \"No active stake\""
															},
															"value": "No active stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d",
																"typeString": "literal_string \"No active stake\""
															}
														],
														"id": 655,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1787:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1787:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "1787:49:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 667,
																			"name": "lastPlayed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 516,
																			"src": "1875:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 670,
																		"indexExpression": {
																			"expression": {
																				"id": 668,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1886:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1890:6:3",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1886:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1875:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 664,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "1855:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1861:9:3",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "1855:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1871:3:3",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 368,
																	"src": "1855:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1855:43:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1902:6:3",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															},
															"src": "1855:53:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b65206c6f636b656420666f72203120646179",
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1910:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9e295611c7fff753208b30618c22be66e796815d2bd93579abae4b5ec65907c1",
																"typeString": "literal_string \"Stake locked for 1 day\""
															},
															"value": "Stake locked for 1 day"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9e295611c7fff753208b30618c22be66e796815d2bd93579abae4b5ec65907c1",
																"typeString": "literal_string \"Stake locked for 1 day\""
															}
														],
														"id": 663,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1847:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1847:88:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "1847:88:3"
											},
											{
												"assignments": [
													678
												],
												"declarations": [
													{
														"constant": false,
														"id": 678,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "1956:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 713,
														"src": "1948:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 677,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1948:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 683,
												"initialValue": {
													"baseExpression": {
														"id": 679,
														"name": "activeStakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "1965:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 682,
													"indexExpression": {
														"expression": {
															"id": 680,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1978:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1982:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1978:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1965:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1948:41:3"
											},
											{
												"expression": {
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 684,
															"name": "activeStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "2000:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 687,
														"indexExpression": {
															"expression": {
																"id": 685,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2013:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2017:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2013:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2027:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2000:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "2000:28:3"
											},
											{
												"expression": {
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 691,
															"name": "hasPlayed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "2039:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 694,
														"indexExpression": {
															"expression": {
																"id": 692,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2049:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2053:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2049:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2039:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2063:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2039:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "2039:29:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 704,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "2110:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 700,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2089:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2093:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2089:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2081:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 698,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2081:8:3",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2101:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2081:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "2081:36:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 708,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2148:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2152:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2148:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 710,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "2160:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 707,
														"name": "StakeWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "2133:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2133:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "EmitStatement",
												"src": "2128:39:3"
											}
										]
									},
									"functionSelector": "bed9d861",
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawStake",
									"nameLocation": "1751:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1764:2:3"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1776:0:3"
									},
									"scope": 773,
									"src": "1742:433:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "2224:214:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 720,
																"name": "prizePool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "2243:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2255:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2243:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207072697a6520746f20636c61696d",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2258:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f0eea299b23e35bb62f6facdd8a43d0b4ef250617409b6608fb2d409f5132935",
																"typeString": "literal_string \"No prize to claim\""
															},
															"value": "No prize to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f0eea299b23e35bb62f6facdd8a43d0b4ef250617409b6608fb2d409f5132935",
																"typeString": "literal_string \"No prize to claim\""
															}
														],
														"id": 719,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2235:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2235:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "2235:43:3"
											},
											{
												"assignments": [
													727
												],
												"declarations": [
													{
														"constant": false,
														"id": 727,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2297:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 749,
														"src": "2289:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 726,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2289:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 729,
												"initialValue": {
													"id": 728,
													"name": "prizePool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 502,
													"src": "2306:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2289:26:3"
											},
											{
												"expression": {
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 730,
														"name": "prizePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "2326:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2338:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2326:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "2326:13:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 740,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "2378:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 736,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "2360:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2360:7:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2352:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 734,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2352:8:3",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2352:16:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2369:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2352:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2352:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "2352:33:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 744,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "2414:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2414:7:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 746,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "2423:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 743,
														"name": "PrizeClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "2401:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "EmitStatement",
												"src": "2396:34:3"
											}
										]
									},
									"functionSelector": "70740ac9",
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 717,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 716,
												"name": "onlyOwner",
												"nameLocations": [
													"2214:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2214:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2214:9:3"
										}
									],
									"name": "claimPrize",
									"nameLocation": "2192:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2202:2:3"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2224:0:3"
									},
									"scope": 773,
									"src": "2183:255:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "2570:96:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 757,
															"name": "hasPlayed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "2588:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 759,
														"indexExpression": {
															"id": 758,
															"name": "player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "2598:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2588:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"baseExpression": {
																		"id": 763,
																		"name": "lastPlayed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 516,
																		"src": "2629:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 765,
																	"indexExpression": {
																		"id": 764,
																		"name": "player",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "2640:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2629:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 760,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2609:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2615:9:3",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2609:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2625:3:3",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 368,
																"src": "2609:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2609:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"hexValue": "31",
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2652:6:3",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														},
														"src": "2609:49:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2588:70:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 756,
												"id": 770,
												"nodeType": "Return",
												"src": "2581:77:3"
											}
										]
									},
									"functionSelector": "19262d30",
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canWithdraw",
									"nameLocation": "2513:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "2533:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "2525:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:16:3"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "2564:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 754,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2564:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:6:3"
									},
									"scope": 773,
									"src": "2504:162:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 774,
							"src": "176:2493:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								524,
								528,
								534,
								540
							]
						}
					],
					"src": "33:2636:3"
				},
				"id": 3
			}
		}
	}
}