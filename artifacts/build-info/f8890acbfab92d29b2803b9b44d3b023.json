{
	"id": "f8890acbfab92d29b2803b9b44d3b023",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"gameContract_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/SafeMath.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n\n// File: gameContract.sol\n\n\npragma solidity ^0.8.20;\n\n\n\ncontract VersaGames is Ownable {\n    using SafeMath for uint256;\n\n    uint256 public stakeAmount;\n    uint256 public prizePool;\n    uint256 public totalGamesPlayed;\n\n    mapping(address => uint256) public activeStakes;\n    mapping(address => bool) public hasPlayed;\n    mapping(address => uint256) public lastPlayed;\n\n    event GamePlayed(address indexed player, uint256 amount, uint256 timestamp);\n    event PrizePoolFunded(uint256 amount);\n    event StakeWithdrawn(address indexed player, uint256 amount);\n    event PrizeClaimed(address indexed winner, uint256 amount);\n\n    constructor(uint256 _initialStakeAmount) Ownable(msg.sender) {\n        require(_initialStakeAmount > 0, \"Stake amount must be greater than 0\");\n        stakeAmount = _initialStakeAmount;\n    }\n\n    function playGame() external payable {\n        require(msg.value == stakeAmount, \"Incorrect stake amount\");\n        require(!hasPlayed[msg.sender], \"Already played in this round\");\n\n        activeStakes[msg.sender] = msg.value;\n        hasPlayed[msg.sender] = true;\n        lastPlayed[msg.sender] = block.timestamp;\n        totalGamesPlayed++;\n\n        // Transfer stake to prize pool (using SafeMath)\n        prizePool = prizePool.add(msg.value);\n\n        emit GamePlayed(msg.sender, msg.value, block.timestamp);\n    }\n\n    function fundPrizePool() external payable onlyOwner {\n        require(msg.value > 0, \"Must send ETH to fund the prize pool\");\n        prizePool = prizePool.add(msg.value);\n        emit PrizePoolFunded(msg.value);\n    }\n\n    function withdrawStake() external {\n        require(hasPlayed[msg.sender], \"No active stake\");\n        require(block.timestamp.sub(lastPlayed[msg.sender]) >= 1 days, \"Stake locked for 1 day\");\n\n        uint256 amount = activeStakes[msg.sender];\n        activeStakes[msg.sender] = 0;\n        hasPlayed[msg.sender] = false;\n\n        payable(msg.sender).transfer(amount);\n        emit StakeWithdrawn(msg.sender, amount);\n    }\n\n    function claimPrize() external onlyOwner {\n        require(prizePool > 0, \"No prize to claim\");\n        uint256 amount = prizePool;\n        prizePool = 0;\n\n        payable(owner()).transfer(amount);\n        emit PrizeClaimed(owner(), amount);\n    }\n\n    // Helper function to check if a player can withdraw\n    function canWithdraw(address player) external view returns (bool) {\n        return hasPlayed[player] && block.timestamp.sub(lastPlayed[player]) >= 1 days;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"gameContract_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gameContract_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"gameContract_flattened.sol\":{\"keccak256\":\"0x6ae0cc3478fb57947b3fce6baaa45f9c00bc5d3a064bfcc6223738dd92377bbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfa29312e01cc0e432021b3670361071a6f16a5a170967c8f3254fe73bfd98a8\",\"dweb:/ipfs/QmPMaXTDq4tx8NA8BGgcEfjyYJGzmEV2bHbyBNAegExGhc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gameContract_flattened.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"gameContract_flattened.sol\":{\"keccak256\":\"0x6ae0cc3478fb57947b3fce6baaa45f9c00bc5d3a064bfcc6223738dd92377bbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfa29312e01cc0e432021b3670361071a6f16a5a170967c8f3254fe73bfd98a8\",\"dweb:/ipfs/QmPMaXTDq4tx8NA8BGgcEfjyYJGzmEV2bHbyBNAegExGhc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 35,
								"contract": "gameContract_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"gameContract_flattened.sol\":4605:10815  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"gameContract_flattened.sol\":4605:10815  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201004106b4e12201edcc4882ecea85fd9a6a098ff60c4ea39f413d116b7676c5464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201004106b4e12201edcc4882ecea85fd9a6a098ff60c4ea39f413d116b7676c5464736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT DIV LT PUSH12 0x4E12201EDCC4882ECEA85FD9 0xA6 LOG0 SWAP9 SELFDESTRUCT PUSH1 0xC4 0xEA CODECOPY DELEGATECALL SGT 0xD1 AND 0xB7 PUSH8 0x6C5464736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "4605:6210:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;4605:6210:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201004106b4e12201edcc4882ecea85fd9a6a098ff60c4ea39f413d116b7676c5464736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT DIV LT PUSH12 0x4E12201EDCC4882ECEA85FD9 0xA6 LOG0 SWAP9 SELFDESTRUCT PUSH1 0xC4 0xEA CODECOPY DELEGATECALL SGT 0xD1 AND 0xB7 PUSH8 0x6C5464736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "4605:6210:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4605,
									"end": 10815,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4605,
									"end": 10815,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201004106b4e12201edcc4882ecea85fd9a6a098ff60c4ea39f413d116b7676c5464736f6c63430008140033",
									".code": [
										{
											"begin": 4605,
											"end": 10815,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 4605,
											"end": 10815,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4605,
											"end": 10815,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4605,
											"end": 10815,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4605,
											"end": 10815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4605,
											"end": 10815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4605,
											"end": 10815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4605,
											"end": 10815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4605,
											"end": 10815,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"gameContract_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gameContract_flattened.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"gameContract_flattened.sol\":{\"keccak256\":\"0x6ae0cc3478fb57947b3fce6baaa45f9c00bc5d3a064bfcc6223738dd92377bbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfa29312e01cc0e432021b3670361071a6f16a5a170967c8f3254fe73bfd98a8\",\"dweb:/ipfs/QmPMaXTDq4tx8NA8BGgcEfjyYJGzmEV2bHbyBNAegExGhc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"VersaGames": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initialStakeAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "GamePlayed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PrizeClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PrizePoolFunded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeWithdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "activeStakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"name": "canWithdraw",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimPrize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fundPrizePool",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "hasPlayed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastPlayed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "playGame",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "prizePool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalGamesPlayed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"gameContract_flattened.sol\":10873:13299  contract VersaGames is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"gameContract_flattened.sol\":11450:11642  constructor(uint256 _initialStakeAmount) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"gameContract_flattened.sol\":11499:11509  msg.sender */\n  caller\n  dup1\n    /* \"gameContract_flattened.sol\":2262:2357  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"gameContract_flattened.sol\":2315:2346  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"gameContract_flattened.sol\":2343:2344  0 */\n  0x00\n    /* \"gameContract_flattened.sol\":2315:2346  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":349:400   */\n  mstore\n    /* \"#utility.yul\":322:340   */\n  0x24\n  add\n    /* \"gameContract_flattened.sol\":2315:2346  OwnableInvalidOwner(address(0)) */\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"gameContract_flattened.sol\":2262:2357  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"gameContract_flattened.sol\":2366:2398  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"gameContract_flattened.sol\":2385:2397  initialOwner */\n  dup2\n    /* \"gameContract_flattened.sol\":2366:2384  _transferOwnership */\n  tag_11\n    /* \"gameContract_flattened.sol\":2366:2398  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_10:\n    /* \"gameContract_flattened.sol\":2218:2405  constructor(address initialOwner) {... */\n  pop\n    /* \"gameContract_flattened.sol\":11551:11552  0 */\n  0x00\n    /* \"gameContract_flattened.sol\":11529:11548  _initialStakeAmount */\n  dup2\n    /* \"gameContract_flattened.sol\":11529:11552  _initialStakeAmount > 0 */\n  gt\n    /* \"gameContract_flattened.sol\":11521:11592  require(_initialStakeAmount > 0, \"Stake amount must be greater than 0\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":613:615   */\n  0x20\n    /* \"gameContract_flattened.sol\":11521:11592  require(_initialStakeAmount > 0, \"Stake amount must be greater than 0\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":595:616   */\n  mstore\n    /* \"#utility.yul\":652:654   */\n  0x23\n    /* \"#utility.yul\":632:650   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":625:655   */\n  mstore\n    /* \"#utility.yul\":691:725   */\n  0x5374616b6520616d6f756e74206d757374206265206772656174657220746861\n    /* \"#utility.yul\":671:689   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":664:726   */\n  mstore\n  shl(0xec, 0x06e203)\n    /* \"#utility.yul\":742:760   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":735:768   */\n  mstore\n    /* \"#utility.yul\":785:804   */\n  0x84\n  add\n    /* \"gameContract_flattened.sol\":11521:11592  require(_initialStakeAmount > 0, \"Stake amount must be greater than 0\") */\n  tag_8\n    /* \"#utility.yul\":411:810   */\n  jump\n    /* \"gameContract_flattened.sol\":11521:11592  require(_initialStakeAmount > 0, \"Stake amount must be greater than 0\") */\ntag_13:\n    /* \"gameContract_flattened.sol\":11602:11613  stakeAmount */\n  0x01\n    /* \"gameContract_flattened.sol\":11602:11635  stakeAmount = _initialStakeAmount */\n  sstore\n    /* \"gameContract_flattened.sol\":10873:13299  contract VersaGames is Ownable {... */\n  jump(tag_18)\n    /* \"gameContract_flattened.sol\":3905:4092  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"gameContract_flattened.sol\":3978:3994  address oldOwner */\n  0x00\n    /* \"gameContract_flattened.sol\":3997:4003  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"gameContract_flattened.sol\":4013:4030  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"gameContract_flattened.sol\":4045:4085  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"gameContract_flattened.sol\":3997:4003  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"gameContract_flattened.sol\":4045:4085  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"gameContract_flattened.sol\":3978:3994  address oldOwner */\n  swap1\n    /* \"gameContract_flattened.sol\":4045:4085  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"gameContract_flattened.sol\":3968:4092  {... */\n  pop\n    /* \"gameContract_flattened.sol\":3905:4092  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:198   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_20:\n  pop\n    /* \"#utility.yul\":176:192   */\n  mload\n  swap2\n    /* \"#utility.yul\":14:198   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":411:810   */\ntag_18:\n    /* \"gameContract_flattened.sol\":10873:13299  contract VersaGames is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"gameContract_flattened.sol\":10873:13299  contract VersaGames is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x719ce73e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xaf899735\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xaf899735\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xbed9d861\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc506f233\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x719ce73e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x88b2f7c3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x5c492129\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x5c492129\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x60c7dc47\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x70740ac9\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x07cc6d69\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x19262d30\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x32d0bbe3\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"gameContract_flattened.sol\":11043:11090  mapping(address => uint256) public activeStakes */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":451:476   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"gameContract_flattened.sol\":11043:11090  mapping(address => uint256) public activeStakes */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gameContract_flattened.sol\":13137:13297  function canWithdraw(address player) external view returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":652:666   */\n      swap1\n      iszero\n        /* \"#utility.yul\":645:667   */\n      iszero\n        /* \"#utility.yul\":627:668   */\n      dup2\n      mstore\n        /* \"#utility.yul\":615:617   */\n      0x20\n        /* \"#utility.yul\":600:618   */\n      add\n        /* \"gameContract_flattened.sol\":13137:13297  function canWithdraw(address player) external view returns (bool) {... */\n      tag_24\n        /* \"#utility.yul\":487:674   */\n      jump\n        /* \"gameContract_flattened.sol\":11096:11137  mapping(address => bool) public hasPlayed */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_27\n      tag_34\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_34:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"gameContract_flattened.sol\":11005:11036  uint256 public totalGamesPlayed */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_20\n      sload(0x03)\n      dup2\n      jump\n        /* \"gameContract_flattened.sol\":10943:10969  uint256 public stakeAmount */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_20\n      sload(0x01)\n      dup2\n      jump\n        /* \"gameContract_flattened.sol\":12826:13074  function claimPrize() external onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      stop\n        /* \"gameContract_flattened.sol\":3286:3387  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_46\n      tag_50\n      jump\t// in\n        /* \"gameContract_flattened.sol\":10975:10999  uint256 public prizePool */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_20\n      sload(0x02)\n      dup2\n      jump\n        /* \"gameContract_flattened.sol\":12173:12391  function fundPrizePool() external payable onlyOwner {... */\n    tag_10:\n      tag_46\n      tag_56\n      jump\t// in\n        /* \"gameContract_flattened.sol\":2631:2716  function owner() public view virtual returns (address) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n        /* \"gameContract_flattened.sol\":2677:2684  address */\n      0x00\n        /* \"gameContract_flattened.sol\":2703:2709  _owner */\n      sload\n        /* \"gameContract_flattened.sol\":2631:2716  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gameContract_flattened.sol\":2703:2709  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":825:876   */\n      dup2\n      mstore\n        /* \"#utility.yul\":813:815   */\n      0x20\n        /* \"#utility.yul\":798:816   */\n      add\n        /* \"gameContract_flattened.sol\":2631:2716  function owner() public view virtual returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":679:882   */\n      jump\n        /* \"gameContract_flattened.sol\":11648:12167  function playGame() external payable {... */\n    tag_12:\n      tag_46\n      tag_63\n      jump\t// in\n        /* \"gameContract_flattened.sol\":12397:12820  function withdrawStake() external {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_46\n      tag_66\n      jump\t// in\n        /* \"gameContract_flattened.sol\":11143:11188  mapping(address => uint256) public lastPlayed */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_20\n      tag_69\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_69:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"gameContract_flattened.sol\":3536:3751  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_46\n      tag_74\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"gameContract_flattened.sol\":13137:13297  function canWithdraw(address player) external view returns (bool) {... */\n    tag_29:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gameContract_flattened.sol\":13220:13237  hasPlayed[player] */\n      dup2\n      and\n        /* \"gameContract_flattened.sol\":13197:13201  bool */\n      0x00\n        /* \"gameContract_flattened.sol\":13220:13237  hasPlayed[player] */\n      swap1\n      dup2\n      mstore\n        /* \"gameContract_flattened.sol\":13220:13229  hasPlayed */\n      0x05\n        /* \"gameContract_flattened.sol\":13220:13237  hasPlayed[player] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"gameContract_flattened.sol\":13220:13290  hasPlayed[player] && block.timestamp.sub(lastPlayed[player]) >= 1 days */\n      dup1\n      iszero\n      tag_77\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gameContract_flattened.sol\":13261:13279  lastPlayed[player] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gameContract_flattened.sol\":13261:13271  lastPlayed */\n      0x06\n        /* \"gameContract_flattened.sol\":13261:13279  lastPlayed[player] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"gameContract_flattened.sol\":13284:13290  1 days */\n      0x015180\n      swap1\n        /* \"gameContract_flattened.sol\":13241:13280  block.timestamp.sub(lastPlayed[player]) */\n      tag_78\n      swap1\n        /* \"gameContract_flattened.sol\":13241:13256  block.timestamp */\n      timestamp\n      swap1\n        /* \"gameContract_flattened.sol\":13241:13260  block.timestamp.sub */\n      tag_79\n        /* \"gameContract_flattened.sol\":13241:13280  block.timestamp.sub(lastPlayed[player]) */\n      jump\t// in\n    tag_78:\n        /* \"gameContract_flattened.sol\":13241:13290  block.timestamp.sub(lastPlayed[player]) >= 1 days */\n      lt\n      iszero\n        /* \"gameContract_flattened.sol\":13220:13290  hasPlayed[player] && block.timestamp.sub(lastPlayed[player]) >= 1 days */\n    tag_77:\n        /* \"gameContract_flattened.sol\":13213:13290  return hasPlayed[player] && block.timestamp.sub(lastPlayed[player]) >= 1 days */\n      swap3\n        /* \"gameContract_flattened.sol\":13137:13297  function canWithdraw(address player) external view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"gameContract_flattened.sol\":12826:13074  function claimPrize() external onlyOwner {... */\n    tag_47:\n        /* \"gameContract_flattened.sol\":2524:2537  _checkOwner() */\n      tag_81\n        /* \"gameContract_flattened.sol\":2524:2535  _checkOwner */\n      tag_82\n        /* \"gameContract_flattened.sol\":2524:2537  _checkOwner() */\n      jump\t// in\n    tag_81:\n        /* \"gameContract_flattened.sol\":12897:12898  0 */\n      0x00\n        /* \"gameContract_flattened.sol\":12885:12894  prizePool */\n      sload(0x02)\n        /* \"gameContract_flattened.sol\":12885:12898  prizePool > 0 */\n      gt\n        /* \"gameContract_flattened.sol\":12877:12920  require(prizePool > 0, \"No prize to claim\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1089:1091   */\n      0x20\n        /* \"gameContract_flattened.sol\":12877:12920  require(prizePool > 0, \"No prize to claim\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1071:1092   */\n      mstore\n        /* \"#utility.yul\":1128:1130   */\n      0x11\n        /* \"#utility.yul\":1108:1126   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1101:1131   */\n      mstore\n      shl(0x78, 0x4e6f207072697a6520746f20636c61696d)\n        /* \"#utility.yul\":1147:1165   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1140:1187   */\n      mstore\n        /* \"#utility.yul\":1204:1222   */\n      0x64\n      add\n        /* \"gameContract_flattened.sol\":12877:12920  require(prizePool > 0, \"No prize to claim\") */\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"gameContract_flattened.sol\":12947:12956  prizePool */\n      0x02\n      dup1\n      sload\n        /* \"gameContract_flattened.sol\":12930:12944  uint256 amount */\n      0x00\n        /* \"gameContract_flattened.sol\":12966:12979  prizePool = 0 */\n      swap1\n      swap2\n      sstore\n        /* \"gameContract_flattened.sol\":12998:13005  owner() */\n      tag_87\n        /* \"gameContract_flattened.sol\":2677:2684  address */\n      0x00\n        /* \"gameContract_flattened.sol\":2703:2709  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"gameContract_flattened.sol\":2631:2716  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"gameContract_flattened.sol\":12998:13005  owner() */\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gameContract_flattened.sol\":12990:13015  payable(owner()).transfer */\n      and\n        /* \"gameContract_flattened.sol\":12990:13023  payable(owner()).transfer(amount) */\n      0x08fc\n        /* \"gameContract_flattened.sol\":13016:13022  amount */\n      dup3\n        /* \"gameContract_flattened.sol\":12990:13023  payable(owner()).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_89:\n      pop\n        /* \"gameContract_flattened.sol\":2677:2684  address */\n      0x00\n        /* \"gameContract_flattened.sol\":2703:2709  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gameContract_flattened.sol\":13038:13067  PrizeClaimed(owner(), amount) */\n      and\n      0x95681e512bc0fe659e195e06c283eada494316f3d801213e48e7101af92bf770\n        /* \"gameContract_flattened.sol\":13060:13066  amount */\n      dup3\n        /* \"gameContract_flattened.sol\":13038:13067  PrizeClaimed(owner(), amount) */\n      mload(0x40)\n      tag_91\n      swap2\n        /* \"#utility.yul\":451:476   */\n      dup2\n      mstore\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n      swap1\n        /* \"#utility.yul\":305:482   */\n      jump\n        /* \"gameContract_flattened.sol\":13038:13067  PrizeClaimed(owner(), amount) */\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"gameContract_flattened.sol\":12867:13074  {... */\n      pop\n        /* \"gameContract_flattened.sol\":12826:13074  function claimPrize() external onlyOwner {... */\n      jump\t// out\n        /* \"gameContract_flattened.sol\":3286:3387  function renounceOwnership() public virtual onlyOwner {... */\n    tag_50:\n        /* \"gameContract_flattened.sol\":2524:2537  _checkOwner() */\n      tag_93\n        /* \"gameContract_flattened.sol\":2524:2535  _checkOwner */\n      tag_82\n        /* \"gameContract_flattened.sol\":2524:2537  _checkOwner() */\n      jump\t// in\n    tag_93:\n        /* \"gameContract_flattened.sol\":3350:3380  _transferOwnership(address(0)) */\n      tag_95\n        /* \"gameContract_flattened.sol\":3377:3378  0 */\n      0x00\n        /* \"gameContract_flattened.sol\":3350:3368  _transferOwnership */\n      tag_96\n        /* \"gameContract_flattened.sol\":3350:3380  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_95:\n        /* \"gameContract_flattened.sol\":3286:3387  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"gameContract_flattened.sol\":12173:12391  function fundPrizePool() external payable onlyOwner {... */\n    tag_56:\n        /* \"gameContract_flattened.sol\":2524:2537  _checkOwner() */\n      tag_98\n        /* \"gameContract_flattened.sol\":2524:2535  _checkOwner */\n      tag_82\n        /* \"gameContract_flattened.sol\":2524:2537  _checkOwner() */\n      jump\t// in\n    tag_98:\n        /* \"gameContract_flattened.sol\":12255:12256  0 */\n      0x00\n        /* \"gameContract_flattened.sol\":12243:12252  msg.value */\n      callvalue\n        /* \"gameContract_flattened.sol\":12243:12256  msg.value > 0 */\n      gt\n        /* \"gameContract_flattened.sol\":12235:12297  require(msg.value > 0, \"Must send ETH to fund the prize pool\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1435:1437   */\n      0x20\n        /* \"gameContract_flattened.sol\":12235:12297  require(msg.value > 0, \"Must send ETH to fund the prize pool\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1417:1438   */\n      mstore\n        /* \"#utility.yul\":1474:1476   */\n      0x24\n        /* \"#utility.yul\":1454:1472   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":1447:1477   */\n      mstore\n        /* \"#utility.yul\":1513:1547   */\n      0x4d7573742073656e642045544820746f2066756e6420746865207072697a6520\n        /* \"#utility.yul\":1493:1511   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1486:1548   */\n      mstore\n      shl(0xe2, 0x1c1bdbdb)\n        /* \"#utility.yul\":1564:1582   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1557:1591   */\n      mstore\n        /* \"#utility.yul\":1608:1627   */\n      0x84\n      add\n        /* \"gameContract_flattened.sol\":12235:12297  require(msg.value > 0, \"Must send ETH to fund the prize pool\") */\n      tag_85\n        /* \"#utility.yul\":1233:1633   */\n      jump\n        /* \"gameContract_flattened.sol\":12235:12297  require(msg.value > 0, \"Must send ETH to fund the prize pool\") */\n    tag_100:\n        /* \"gameContract_flattened.sol\":12319:12328  prizePool */\n      sload(0x02)\n        /* \"gameContract_flattened.sol\":12319:12343  prizePool.add(msg.value) */\n      tag_103\n      swap1\n        /* \"gameContract_flattened.sol\":12333:12342  msg.value */\n      callvalue\n        /* \"gameContract_flattened.sol\":12319:12332  prizePool.add */\n      tag_104\n        /* \"gameContract_flattened.sol\":12319:12343  prizePool.add(msg.value) */\n      jump\t// in\n    tag_103:\n        /* \"gameContract_flattened.sol\":12307:12316  prizePool */\n      0x02\n        /* \"gameContract_flattened.sol\":12307:12343  prizePool = prizePool.add(msg.value) */\n      sstore\n        /* \"gameContract_flattened.sol\":12358:12384  PrizePoolFunded(msg.value) */\n      mload(0x40)\n        /* \"gameContract_flattened.sol\":12374:12383  msg.value */\n      callvalue\n        /* \"#utility.yul\":451:476   */\n      dup2\n      mstore\n        /* \"gameContract_flattened.sol\":12358:12384  PrizePoolFunded(msg.value) */\n      0x9d81ff1364df34467b23be983916ca00ebe5b231f3c47645a0ad063b56589f48\n      swap1\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"gameContract_flattened.sol\":12358:12384  PrizePoolFunded(msg.value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"gameContract_flattened.sol\":12173:12391  function fundPrizePool() external payable onlyOwner {... */\n      jump\t// out\n        /* \"gameContract_flattened.sol\":11648:12167  function playGame() external payable {... */\n    tag_63:\n        /* \"gameContract_flattened.sol\":11716:11727  stakeAmount */\n      sload(0x01)\n        /* \"gameContract_flattened.sol\":11703:11712  msg.value */\n      callvalue\n        /* \"gameContract_flattened.sol\":11703:11727  msg.value == stakeAmount */\n      eq\n        /* \"gameContract_flattened.sol\":11695:11754  require(msg.value == stakeAmount, \"Incorrect stake amount\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1840:1842   */\n      0x20\n        /* \"gameContract_flattened.sol\":11695:11754  require(msg.value == stakeAmount, \"Incorrect stake amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1822:1843   */\n      mstore\n        /* \"#utility.yul\":1879:1881   */\n      0x16\n        /* \"#utility.yul\":1859:1877   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1852:1882   */\n      mstore\n      shl(0x52, 0x125b98dbdc9c9958dd081cdd185ad948185b5bdd5b9d)\n        /* \"#utility.yul\":1898:1916   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1891:1943   */\n      mstore\n        /* \"#utility.yul\":1960:1978   */\n      0x64\n      add\n        /* \"gameContract_flattened.sol\":11695:11754  require(msg.value == stakeAmount, \"Incorrect stake amount\") */\n      tag_85\n        /* \"#utility.yul\":1638:1984   */\n      jump\n        /* \"gameContract_flattened.sol\":11695:11754  require(msg.value == stakeAmount, \"Incorrect stake amount\") */\n    tag_108:\n        /* \"gameContract_flattened.sol\":11783:11793  msg.sender */\n      caller\n        /* \"gameContract_flattened.sol\":11773:11794  hasPlayed[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gameContract_flattened.sol\":11773:11782  hasPlayed */\n      0x05\n        /* \"gameContract_flattened.sol\":11773:11794  hasPlayed[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"gameContract_flattened.sol\":11772:11794  !hasPlayed[msg.sender] */\n      iszero\n        /* \"gameContract_flattened.sol\":11764:11827  require(!hasPlayed[msg.sender], \"Already played in this round\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2191:2193   */\n      0x20\n        /* \"gameContract_flattened.sol\":11764:11827  require(!hasPlayed[msg.sender], \"Already played in this round\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2173:2194   */\n      mstore\n        /* \"#utility.yul\":2230:2232   */\n      0x1c\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2203:2233   */\n      mstore\n        /* \"#utility.yul\":2269:2299   */\n      0x416c726561647920706c6179656420696e207468697320726f756e6400000000\n        /* \"#utility.yul\":2249:2267   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2242:2300   */\n      mstore\n        /* \"#utility.yul\":2317:2335   */\n      0x64\n      add\n        /* \"gameContract_flattened.sol\":11764:11827  require(!hasPlayed[msg.sender], \"Already played in this round\") */\n      tag_85\n        /* \"#utility.yul\":1989:2341   */\n      jump\n        /* \"gameContract_flattened.sol\":11764:11827  require(!hasPlayed[msg.sender], \"Already played in this round\") */\n    tag_111:\n        /* \"gameContract_flattened.sol\":11851:11861  msg.sender */\n      caller\n        /* \"gameContract_flattened.sol\":11838:11862  activeStakes[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gameContract_flattened.sol\":11838:11850  activeStakes */\n      0x04\n        /* \"gameContract_flattened.sol\":11838:11862  activeStakes[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"gameContract_flattened.sol\":11865:11874  msg.value */\n      callvalue\n        /* \"gameContract_flattened.sol\":11838:11874  activeStakes[msg.sender] = msg.value */\n      swap1\n      sstore\n        /* \"gameContract_flattened.sol\":11884:11893  hasPlayed */\n      0x05\n        /* \"gameContract_flattened.sol\":11884:11905  hasPlayed[msg.sender] */\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"gameContract_flattened.sol\":11884:11912  hasPlayed[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"gameContract_flattened.sol\":11908:11912  true */\n      0x01\n        /* \"gameContract_flattened.sol\":11884:11912  hasPlayed[msg.sender] = true */\n      or\n      swap1\n      sstore\n        /* \"gameContract_flattened.sol\":11922:11932  lastPlayed */\n      0x06\n        /* \"gameContract_flattened.sol\":11922:11944  lastPlayed[msg.sender] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"gameContract_flattened.sol\":11947:11962  block.timestamp */\n      timestamp\n        /* \"gameContract_flattened.sol\":11922:11962  lastPlayed[msg.sender] = block.timestamp */\n      swap1\n      sstore\n        /* \"gameContract_flattened.sol\":11972:11988  totalGamesPlayed */\n      0x03\n        /* \"gameContract_flattened.sol\":11972:11990  totalGamesPlayed++ */\n      dup1\n      sload\n      swap2\n      tag_114\n      dup4\n      tag_115\n      jump\t// in\n    tag_114:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"gameContract_flattened.sol\":12070:12079  prizePool */\n      sload(0x02)\n        /* \"gameContract_flattened.sol\":12070:12094  prizePool.add(msg.value) */\n      tag_116\n      swap1\n        /* \"gameContract_flattened.sol\":12084:12093  msg.value */\n      callvalue\n        /* \"gameContract_flattened.sol\":12070:12083  prizePool.add */\n      tag_104\n        /* \"gameContract_flattened.sol\":12070:12094  prizePool.add(msg.value) */\n      jump\t// in\n    tag_116:\n        /* \"gameContract_flattened.sol\":12058:12067  prizePool */\n      0x02\n        /* \"gameContract_flattened.sol\":12058:12094  prizePool = prizePool.add(msg.value) */\n      sstore\n        /* \"gameContract_flattened.sol\":12110:12160  GamePlayed(msg.sender, msg.value, block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"gameContract_flattened.sol\":12133:12142  msg.value */\n      callvalue\n        /* \"#utility.yul\":2792:2817   */\n      dup2\n      mstore\n        /* \"gameContract_flattened.sol\":12144:12159  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":2848:2850   */\n      0x20\n        /* \"#utility.yul\":2833:2851   */\n      dup3\n      add\n        /* \"#utility.yul\":2826:2860   */\n      mstore\n        /* \"gameContract_flattened.sol\":12121:12131  msg.sender */\n      caller\n      swap2\n        /* \"gameContract_flattened.sol\":12110:12160  GamePlayed(msg.sender, msg.value, block.timestamp) */\n      0x24b31e1dbf1732a12bb700d3d77e5fb96ff3b693374d9fa15ccbc03f42715076\n      swap2\n        /* \"#utility.yul\":2765:2783   */\n      add\n        /* \"gameContract_flattened.sol\":12110:12160  GamePlayed(msg.sender, msg.value, block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"gameContract_flattened.sol\":11648:12167  function playGame() external payable {... */\n      jump\t// out\n        /* \"gameContract_flattened.sol\":12397:12820  function withdrawStake() external {... */\n    tag_66:\n        /* \"gameContract_flattened.sol\":12459:12469  msg.sender */\n      caller\n        /* \"gameContract_flattened.sol\":12449:12470  hasPlayed[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gameContract_flattened.sol\":12449:12458  hasPlayed */\n      0x05\n        /* \"gameContract_flattened.sol\":12449:12470  hasPlayed[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"gameContract_flattened.sol\":12441:12490  require(hasPlayed[msg.sender], \"No active stake\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3073:3075   */\n      0x20\n        /* \"gameContract_flattened.sol\":12441:12490  require(hasPlayed[msg.sender], \"No active stake\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3055:3076   */\n      mstore\n        /* \"#utility.yul\":3112:3114   */\n      0x0f\n        /* \"#utility.yul\":3092:3110   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3085:3115   */\n      mstore\n      shl(0x88, 0x4e6f20616374697665207374616b65)\n        /* \"#utility.yul\":3131:3149   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3124:3169   */\n      mstore\n        /* \"#utility.yul\":3186:3204   */\n      0x64\n      add\n        /* \"gameContract_flattened.sol\":12441:12490  require(hasPlayed[msg.sender], \"No active stake\") */\n      tag_85\n        /* \"#utility.yul\":2871:3210   */\n      jump\n        /* \"gameContract_flattened.sol\":12441:12490  require(hasPlayed[msg.sender], \"No active stake\") */\n    tag_120:\n        /* \"gameContract_flattened.sol\":12539:12549  msg.sender */\n      caller\n        /* \"gameContract_flattened.sol\":12528:12550  lastPlayed[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"gameContract_flattened.sol\":12528:12538  lastPlayed */\n      0x06\n        /* \"gameContract_flattened.sol\":12528:12550  lastPlayed[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"gameContract_flattened.sol\":12555:12561  1 days */\n      0x015180\n      swap1\n        /* \"gameContract_flattened.sol\":12508:12551  block.timestamp.sub(lastPlayed[msg.sender]) */\n      tag_123\n      swap1\n        /* \"gameContract_flattened.sol\":12508:12523  block.timestamp */\n      timestamp\n      swap1\n        /* \"gameContract_flattened.sol\":12508:12527  block.timestamp.sub */\n      tag_79\n        /* \"gameContract_flattened.sol\":12508:12551  block.timestamp.sub(lastPlayed[msg.sender]) */\n      jump\t// in\n    tag_123:\n        /* \"gameContract_flattened.sol\":12508:12561  block.timestamp.sub(lastPlayed[msg.sender]) >= 1 days */\n      lt\n      iszero\n        /* \"gameContract_flattened.sol\":12500:12588  require(block.timestamp.sub(lastPlayed[msg.sender]) >= 1 days, \"Stake locked for 1 day\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3417:3419   */\n      0x20\n        /* \"gameContract_flattened.sol\":12500:12588  require(block.timestamp.sub(lastPlayed[msg.sender]) >= 1 days, \"Stake locked for 1 day\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3399:3420   */\n      mstore\n        /* \"#utility.yul\":3456:3458   */\n      0x16\n        /* \"#utility.yul\":3436:3454   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3429:3459   */\n      mstore\n      shl(0x50, 0x5374616b65206c6f636b656420666f72203120646179)\n        /* \"#utility.yul\":3475:3493   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3468:3520   */\n      mstore\n        /* \"#utility.yul\":3537:3555   */\n      0x64\n      add\n        /* \"gameContract_flattened.sol\":12500:12588  require(block.timestamp.sub(lastPlayed[msg.sender]) >= 1 days, \"Stake locked for 1 day\") */\n      tag_85\n        /* \"#utility.yul\":3215:3561   */\n      jump\n        /* \"gameContract_flattened.sol\":12500:12588  require(block.timestamp.sub(lastPlayed[msg.sender]) >= 1 days, \"Stake locked for 1 day\") */\n    tag_124:\n        /* \"gameContract_flattened.sol\":12629:12639  msg.sender */\n      caller\n        /* \"gameContract_flattened.sol\":12599:12613  uint256 amount */\n      0x00\n        /* \"gameContract_flattened.sol\":12616:12640  activeStakes[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"gameContract_flattened.sol\":12616:12628  activeStakes */\n      0x04\n        /* \"gameContract_flattened.sol\":12616:12640  activeStakes[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      dup1\n      sload\n        /* \"gameContract_flattened.sol\":12650:12678  activeStakes[msg.sender] = 0 */\n      swap1\n      dup5\n      swap1\n      sstore\n        /* \"gameContract_flattened.sol\":12688:12697  hasPlayed */\n      0x05\n        /* \"gameContract_flattened.sol\":12688:12709  hasPlayed[msg.sender] */\n      swap1\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"gameContract_flattened.sol\":12688:12717  hasPlayed[msg.sender] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"gameContract_flattened.sol\":12728:12764  payable(msg.sender).transfer(amount) */\n      mload\n        /* \"gameContract_flattened.sol\":12616:12640  activeStakes[msg.sender] */\n      swap1\n      swap3\n        /* \"gameContract_flattened.sol\":12629:12639  msg.sender */\n      swap2\n        /* \"gameContract_flattened.sol\":12728:12764  payable(msg.sender).transfer(amount) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"gameContract_flattened.sol\":12616:12640  activeStakes[msg.sender] */\n      dup5\n      swap2\n        /* \"gameContract_flattened.sol\":12728:12764  payable(msg.sender).transfer(amount) */\n      dup2\n        /* \"gameContract_flattened.sol\":12599:12613  uint256 amount */\n      dup2\n        /* \"gameContract_flattened.sol\":12728:12764  payable(msg.sender).transfer(amount) */\n      dup2\n        /* \"gameContract_flattened.sol\":12616:12640  activeStakes[msg.sender] */\n      dup6\n        /* \"gameContract_flattened.sol\":12629:12639  msg.sender */\n      dup9\n        /* \"gameContract_flattened.sol\":12728:12764  payable(msg.sender).transfer(amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n        /* \"gameContract_flattened.sol\":12779:12813  StakeWithdrawn(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":451:476   */\n      dup2\n      dup2\n      mstore\n        /* \"gameContract_flattened.sol\":12794:12804  msg.sender */\n      caller\n      swap1\n        /* \"gameContract_flattened.sol\":12779:12813  StakeWithdrawn(msg.sender, amount) */\n      0x8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc\n      swap1\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"gameContract_flattened.sol\":12779:12813  StakeWithdrawn(msg.sender, amount) */\n      tag_91\n        /* \"#utility.yul\":305:482   */\n      jump\n        /* \"gameContract_flattened.sol\":3536:3751  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_75:\n        /* \"gameContract_flattened.sol\":2524:2537  _checkOwner() */\n      tag_131\n        /* \"gameContract_flattened.sol\":2524:2535  _checkOwner */\n      tag_82\n        /* \"gameContract_flattened.sol\":2524:2537  _checkOwner() */\n      jump\t// in\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gameContract_flattened.sol\":3620:3642  newOwner == address(0) */\n      dup2\n      and\n        /* \"gameContract_flattened.sol\":3616:3707  if (newOwner == address(0)) {... */\n      tag_133\n      jumpi\n        /* \"gameContract_flattened.sol\":3665:3696  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"gameContract_flattened.sol\":3693:3694  0 */\n      0x00\n        /* \"gameContract_flattened.sol\":3665:3696  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":825:876   */\n      mstore\n        /* \"#utility.yul\":798:816   */\n      0x24\n      add\n        /* \"gameContract_flattened.sol\":3665:3696  OwnableInvalidOwner(address(0)) */\n      tag_85\n        /* \"#utility.yul\":679:882   */\n      jump\n        /* \"gameContract_flattened.sol\":3616:3707  if (newOwner == address(0)) {... */\n    tag_133:\n        /* \"gameContract_flattened.sol\":3716:3744  _transferOwnership(newOwner) */\n      tag_135\n        /* \"gameContract_flattened.sol\":3735:3743  newOwner */\n      dup2\n        /* \"gameContract_flattened.sol\":3716:3734  _transferOwnership */\n      tag_96\n        /* \"gameContract_flattened.sol\":3716:3744  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_135:\n        /* \"gameContract_flattened.sol\":3536:3751  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"gameContract_flattened.sol\":7245:7341  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_79:\n        /* \"gameContract_flattened.sol\":7303:7310  uint256 */\n      0x00\n        /* \"gameContract_flattened.sol\":7329:7334  a - b */\n      tag_137\n        /* \"gameContract_flattened.sol\":7333:7334  b */\n      dup3\n        /* \"gameContract_flattened.sol\":7329:7330  a */\n      dup5\n        /* \"gameContract_flattened.sol\":7329:7334  a - b */\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"gameContract_flattened.sol\":7322:7334  return a - b */\n      swap4\n        /* \"gameContract_flattened.sol\":7245:7341  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"gameContract_flattened.sol\":2789:2951  function _checkOwner() internal view virtual {... */\n    tag_82:\n        /* \"gameContract_flattened.sol\":2677:2684  address */\n      0x00\n        /* \"gameContract_flattened.sol\":2703:2709  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"gameContract_flattened.sol\":788:798  msg.sender */\n      caller\n        /* \"gameContract_flattened.sol\":2848:2871  owner() != _msgSender() */\n      eq\n        /* \"gameContract_flattened.sol\":2844:2945  if (owner() != _msgSender()) {... */\n      tag_95\n      jumpi\n        /* \"gameContract_flattened.sol\":2894:2934  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"gameContract_flattened.sol\":788:798  msg.sender */\n      caller\n        /* \"gameContract_flattened.sol\":2894:2934  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":825:876   */\n      mstore\n        /* \"#utility.yul\":798:816   */\n      0x24\n      add\n        /* \"gameContract_flattened.sol\":2894:2934  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_85\n        /* \"#utility.yul\":679:882   */\n      jump\n        /* \"gameContract_flattened.sol\":3905:4092  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_96:\n        /* \"gameContract_flattened.sol\":3978:3994  address oldOwner */\n      0x00\n        /* \"gameContract_flattened.sol\":3997:4003  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"gameContract_flattened.sol\":4013:4030  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"gameContract_flattened.sol\":4045:4085  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"gameContract_flattened.sol\":3997:4003  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"gameContract_flattened.sol\":4045:4085  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"gameContract_flattened.sol\":3978:3994  address oldOwner */\n      swap1\n        /* \"gameContract_flattened.sol\":4045:4085  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"gameContract_flattened.sol\":3968:4092  {... */\n      pop\n        /* \"gameContract_flattened.sol\":3905:4092  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"gameContract_flattened.sol\":6878:6974  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_104:\n        /* \"gameContract_flattened.sol\":6936:6943  uint256 */\n      0x00\n        /* \"gameContract_flattened.sol\":6962:6967  a + b */\n      tag_137\n        /* \"gameContract_flattened.sol\":6966:6967  b */\n      dup3\n        /* \"gameContract_flattened.sol\":6962:6963  a */\n      dup5\n        /* \"gameContract_flattened.sol\":6962:6967  a + b */\n      tag_149\n      jump\t// in\n        /* \"#utility.yul\":14:300   */\n    tag_22:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_154:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_137\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":2346:2473   */\n    tag_151:\n        /* \"#utility.yul\":2407:2417   */\n      0x4e487b71\n        /* \"#utility.yul\":2402:2405   */\n      0xe0\n        /* \"#utility.yul\":2398:2418   */\n      shl\n        /* \"#utility.yul\":2395:2396   */\n      0x00\n        /* \"#utility.yul\":2388:2419   */\n      mstore\n        /* \"#utility.yul\":2438:2442   */\n      0x11\n        /* \"#utility.yul\":2435:2436   */\n      0x04\n        /* \"#utility.yul\":2428:2443   */\n      mstore\n        /* \"#utility.yul\":2462:2466   */\n      0x24\n        /* \"#utility.yul\":2459:2460   */\n      0x00\n        /* \"#utility.yul\":2452:2467   */\n      revert\n        /* \"#utility.yul\":2478:2613   */\n    tag_115:\n        /* \"#utility.yul\":2517:2520   */\n      0x00\n        /* \"#utility.yul\":2538:2555   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":2535:2578   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2558:2576   */\n      tag_166\n      tag_151\n      jump\t// in\n    tag_166:\n      pop\n        /* \"#utility.yul\":2605:2606   */\n      0x01\n        /* \"#utility.yul\":2594:2607   */\n      add\n      swap1\n        /* \"#utility.yul\":2478:2613   */\n      jump\t// out\n        /* \"#utility.yul\":3566:3694   */\n    tag_138:\n        /* \"#utility.yul\":3633:3642   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3654:3665   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3651:3688   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":3668:3686   */\n      tag_77\n      tag_151\n      jump\t// in\n        /* \"#utility.yul\":3699:3824   */\n    tag_149:\n        /* \"#utility.yul\":3764:3773   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3785:3795   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3782:3818   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":3798:3816   */\n      tag_77\n      tag_151\n      jump\t// in\n\n    auxdata: 0xa26469706673582212200d29acf80ea53763b5faa2a01bd3120f08cb8700901ab08c6ef6c0c5458256e064736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_554": {
									"entryPoint": null,
									"id": 554,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_77": {
									"entryPoint": null,
									"id": 77,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_173": {
									"entryPoint": 193,
									"id": 173,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:812:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nodeType": "YulIf",
															"src": "105:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "166:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "182:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "176:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "176:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "304:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "314:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "326:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "337:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "322:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "322:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "314:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "356:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "371:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "387:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "392:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "383:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "383:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "396:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "379:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "379:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "349:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "349:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "349:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "273:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "284:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "295:4:1",
														"type": ""
													}
												],
												"src": "203:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "585:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "602:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "613:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "595:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "595:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "595:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "636:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "647:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "632:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "632:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "652:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "625:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "625:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "675:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "686:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "671:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "671:18:1"
																	},
																	{
																		"hexValue": "5374616b6520616d6f756e74206d757374206265206772656174657220746861",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "691:34:1",
																		"type": "",
																		"value": "Stake amount must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "664:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "664:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "664:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "746:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "757:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "742:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "742:18:1"
																	},
																	{
																		"hexValue": "6e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "762:5:1",
																		"type": "",
																		"value": "n 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "735:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "735:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "735:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "777:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "789:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "800:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "777:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "562:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "576:4:1",
														"type": ""
													}
												],
												"src": "411:399:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Stake amount must be greater tha\")\n        mstore(add(headStart, 96), \"n 0\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161099b38038061099b83398101604081905261002e91610110565b338061005457604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61005d816100c1565b505f81116100b95760405162461bcd60e51b815260206004820152602360248201527f5374616b6520616d6f756e74206d75737420626520677265617465722074686160448201526206e20360ec1b606482015260840161004b565b600155610127565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f60208284031215610120575f80fd5b5051919050565b610867806101345f395ff3fe6080604052600436106100d9575f3560e01c8063719ce73e1161007c578063af89973511610057578063af8997351461020f578063bed9d86114610217578063c506f2331461022b578063f2fde38b14610256575f80fd5b8063719ce73e146101cc57806388b2f7c3146101e15780638da5cb5b146101e9575f80fd5b80635c492129116100b75780635c4921291461017857806360c7dc471461018d57806370740ac9146101a2578063715018a6146101b8575f80fd5b806307cc6d69146100dd57806319262d301461011b57806332d0bbe31461014a575b5f80fd5b3480156100e8575f80fd5b506101086100f73660046107b9565b60046020525f908152604090205481565b6040519081526020015b60405180910390f35b348015610126575f80fd5b5061013a6101353660046107b9565b610275565b6040519015158152602001610112565b348015610155575f80fd5b5061013a6101643660046107b9565b60056020525f908152604090205460ff1681565b348015610183575f80fd5b5061010860035481565b348015610198575f80fd5b5061010860015481565b3480156101ad575f80fd5b506101b66102c8565b005b3480156101c3575f80fd5b506101b66103b9565b3480156101d7575f80fd5b5061010860025481565b6101b66103cc565b3480156101f4575f80fd5b505f546040516001600160a01b039091168152602001610112565b6101b6610474565b348015610222575f80fd5b506101b66105ac565b348015610236575f80fd5b506101086102453660046107b9565b60066020525f908152604090205481565b348015610261575f80fd5b506101b66102703660046107b9565b6106e4565b6001600160a01b0381165f9081526005602052604081205460ff1680156102c257506001600160a01b0382165f9081526006602052604090205462015180906102bf904290610721565b10155b92915050565b6102d0610733565b5f6002541161031a5760405162461bcd60e51b81526020600482015260116024820152704e6f207072697a6520746f20636c61696d60781b60448201526064015b60405180910390fd5b600280545f9091556103335f546001600160a01b031690565b6001600160a01b03166108fc8290811502906040515f60405180830381858888f19350505050158015610368573d5f803e3d5ffd5b505f546001600160a01b03166001600160a01b03167f95681e512bc0fe659e195e06c283eada494316f3d801213e48e7101af92bf770826040516103ae91815260200190565b60405180910390a250565b6103c1610733565b6103ca5f61075f565b565b6103d4610733565b5f341161042f5760405162461bcd60e51b8152602060048201526024808201527f4d7573742073656e642045544820746f2066756e6420746865207072697a65206044820152631c1bdbdb60e21b6064820152608401610311565b60025461043c90346107ae565b6002556040513481527f9d81ff1364df34467b23be983916ca00ebe5b231f3c47645a0ad063b56589f489060200160405180910390a1565b60015434146104be5760405162461bcd60e51b8152602060048201526016602482015275125b98dbdc9c9958dd081cdd185ad948185b5bdd5b9d60521b6044820152606401610311565b335f9081526005602052604090205460ff161561051d5760405162461bcd60e51b815260206004820152601c60248201527f416c726561647920706c6179656420696e207468697320726f756e64000000006044820152606401610311565b335f90815260046020908152604080832034905560058252808320805460ff1916600117905560069091528120429055600380549161055b836107f3565b909155505060025461056d90346107ae565b6002556040805134815242602082015233917f24b31e1dbf1732a12bb700d3d77e5fb96ff3b693374d9fa15ccbc03f42715076910160405180910390a2565b335f9081526005602052604090205460ff166105fc5760405162461bcd60e51b815260206004820152600f60248201526e4e6f20616374697665207374616b6560881b6044820152606401610311565b335f90815260066020526040902054620151809061061b904290610721565b10156106625760405162461bcd60e51b81526020600482015260166024820152755374616b65206c6f636b656420666f7220312064617960501b6044820152606401610311565b335f8181526004602090815260408083208054908490556005909252808320805460ff191690555190929183156108fc02918491818181858888f193505050501580156106b1573d5f803e3d5ffd5b5060405181815233907f8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc906020016103ae565b6106ec610733565b6001600160a01b03811661071557604051631e4fbdf760e01b81525f6004820152602401610311565b61071e8161075f565b50565b5f61072c828461080b565b9392505050565b5f546001600160a01b031633146103ca5760405163118cdaa760e01b8152336004820152602401610311565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f61072c828461081e565b5f602082840312156107c9575f80fd5b81356001600160a01b038116811461072c575f80fd5b634e487b7160e01b5f52601160045260245ffd5b5f60018201610804576108046107df565b5060010190565b818103818111156102c2576102c26107df565b808201808211156102c2576102c26107df56fea26469706673582212200d29acf80ea53763b5faa2a01bd3120f08cb8700901ab08c6ef6c0c5458256e064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x99B CODESIZE SUB DUP1 PUSH2 0x99B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x110 JUMP JUMPDEST CALLER DUP1 PUSH2 0x54 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5D DUP2 PUSH2 0xC1 JUMP JUMPDEST POP PUSH0 DUP2 GT PUSH2 0xB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B6520616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH2 0x127 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x867 DUP1 PUSH2 0x134 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x719CE73E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xAF899735 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xAF899735 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xBED9D861 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xC506F233 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x256 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x719CE73E EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x88B2F7C3 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C492129 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x5C492129 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x60C7DC47 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x70740AC9 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7CC6D69 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x19262D30 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x32D0BBE3 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x112 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x3B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x3CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x112 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x474 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x5AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x2C2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x15180 SWAP1 PUSH2 0x2BF SWAP1 TIMESTAMP SWAP1 PUSH2 0x721 JUMP JUMPDEST LT ISZERO JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0x733 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD GT PUSH2 0x31A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F207072697A6520746F20636C61696D PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH0 SWAP1 SWAP2 SSTORE PUSH2 0x333 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x368 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x95681E512BC0FE659E195E06C283EADA494316F3D801213E48E7101AF92BF770 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x3CA PUSH0 PUSH2 0x75F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3D4 PUSH2 0x733 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x42F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4D7573742073656E642045544820746F2066756E6420746865207072697A6520 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1C1BDBDB PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x43C SWAP1 CALLVALUE PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH32 0x9D81FF1364DF34467B23BE983916CA00EBE5B231F3C47645A0AD063B56589F48 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLVALUE EQ PUSH2 0x4BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B98DBDC9C9958DD081CDD185AD948185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920706C6179656420696E207468697320726F756E6400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLVALUE SWAP1 SSTORE PUSH1 0x5 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 PUSH2 0x55B DUP4 PUSH2 0x7F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH2 0x56D SWAP1 CALLVALUE PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x24B31E1DBF1732A12BB700D3D77E5FB96FF3B693374D9FA15CCBC03F42715076 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F20616374697665207374616B65 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x15180 SWAP1 PUSH2 0x61B SWAP1 TIMESTAMP SWAP1 PUSH2 0x721 JUMP JUMPDEST LT ISZERO PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x5374616B65206C6F636B656420666F72203120646179 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP3 SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6B1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x8108595EB6BAD3ACEFA9DA467D90CC2217686D5C5AC85460F8B7849C840645FC SWAP1 PUSH1 0x20 ADD PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x6EC PUSH2 0x733 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x715 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x311 JUMP JUMPDEST PUSH2 0x71E DUP2 PUSH2 0x75F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x72C DUP3 DUP5 PUSH2 0x80B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3CA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x311 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x72C DUP3 DUP5 PUSH2 0x81E JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x72C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x804 JUMPI PUSH2 0x804 PUSH2 0x7DF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x7DF JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x7DF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x29 0xAC 0xF8 0xE 0xA5 CALLDATACOPY PUSH4 0xB5FAA2A0 SHL 0xD3 SLT 0xF ADDMOD 0xCB DUP8 STOP SWAP1 BYTE 0xB0 DUP13 PUSH15 0xF6C0C5458256E064736F6C63430008 EQ STOP CALLER ",
							"sourceMap": "10873:2426:0:-:0;;;11450:192;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11499:10;;2262:95;;2315:31;;-1:-1:-1;;;2315:31:0;;2343:1;2315:31;;;349:51:1;322:18;;2315:31:0;;;;;;;;2262:95;2366:32;2385:12;2366:18;:32::i;:::-;2218:187;11551:1:::1;11529:19;:23;11521:71;;;::::0;-1:-1:-1;;;11521:71:0;;613:2:1;11521:71:0::1;::::0;::::1;595:21:1::0;652:2;632:18;;;625:30;691:34;671:18;;;664:62;-1:-1:-1;;;742:18:1;;;735:33;785:19;;11521:71:0::1;411:399:1::0;11521:71:0::1;11602:11;:33:::0;10873:2426;;3905:187;3978:16;3997:6;;-1:-1:-1;;;;;4013:17:0;;;-1:-1:-1;;;;;;4013:17:0;;;;;;4045:40;;3997:6;;;;;;;4045:40;;3978:16;4045:40;3968:124;3905:187;:::o;14:184:1:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:1;;14:184;-1:-1:-1;14:184:1:o;411:399::-;10873:2426:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_111": {
									"entryPoint": 1843,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_173": {
									"entryPoint": 1887,
									"id": 173,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@activeStakes_501": {
									"entryPoint": null,
									"id": 501,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_349": {
									"entryPoint": 1966,
									"id": 349,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@canWithdraw_765": {
									"entryPoint": 629,
									"id": 765,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimPrize_743": {
									"entryPoint": 712,
									"id": 743,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fundPrizePool_645": {
									"entryPoint": 972,
									"id": 645,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@hasPlayed_505": {
									"entryPoint": null,
									"id": 505,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastPlayed_509": {
									"entryPoint": null,
									"id": 509,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_94": {
									"entryPoint": null,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@playGame_618": {
									"entryPoint": 1140,
									"id": 618,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@prizePool_495": {
									"entryPoint": null,
									"id": 495,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_125": {
									"entryPoint": 953,
									"id": 125,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeAmount_493": {
									"entryPoint": null,
									"id": 493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_364": {
									"entryPoint": 1825,
									"id": 364,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalGamesPlayed_497": {
									"entryPoint": null,
									"id": 497,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_153": {
									"entryPoint": 1764,
									"id": 153,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawStake_707": {
									"entryPoint": 1452,
									"id": 707,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_35075a8aaf17f88c6d06dfc971cf92115a9114e82f33628ec975082c22053630__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3f199782e4f29a835ea638fe1c7e17a78da2d188961e8a5fe86695b5d6f94265__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3f5071e4757739cd42b9e94901e6f3a73f485622954975b8d77f7b23a078c5be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9e295611c7fff753208b30618c22be66e796815d2bd93579abae4b5ec65907c1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f0eea299b23e35bb62f6facdd8a43d0b4ef250617409b6608fb2d409f5132935__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2015,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3826:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:1"
															},
															"nodeType": "YulIf",
															"src": "200:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:286:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "406:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "416:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "439:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "424:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "424:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "416:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "469:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "451:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "375:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "386:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "397:4:1",
														"type": ""
													}
												],
												"src": "305:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "582:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "592:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "615:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "600:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "600:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "592:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "634:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "659:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "652:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "652:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "645:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "645:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "627:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "627:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "551:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "562:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "573:4:1",
														"type": ""
													}
												],
												"src": "487:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "780:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "790:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "798:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "798:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "790:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "832:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "847:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "863:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "868:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "859:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "859:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "872:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "855:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "855:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "843:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "843:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "825:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "749:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "760:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "771:4:1",
														"type": ""
													}
												],
												"src": "679:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1061:167:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1078:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1089:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1071:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1071:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1071:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1112:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1123:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1108:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1108:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1128:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1101:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1101:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1101:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1151:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1162:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1147:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1147:18:1"
																	},
																	{
																		"hexValue": "4e6f207072697a6520746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1167:19:1",
																		"type": "",
																		"value": "No prize to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1140:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1140:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1196:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1208:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1219:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1204:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1204:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1196:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f0eea299b23e35bb62f6facdd8a43d0b4ef250617409b6608fb2d409f5132935__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1038:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1052:4:1",
														"type": ""
													}
												],
												"src": "887:341:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1407:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1424:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1435:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1417:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1417:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1417:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1458:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1469:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1454:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1454:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1474:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1447:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1447:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1497:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1508:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1493:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1493:18:1"
																	},
																	{
																		"hexValue": "4d7573742073656e642045544820746f2066756e6420746865207072697a6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1513:34:1",
																		"type": "",
																		"value": "Must send ETH to fund the prize "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1486:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1486:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1568:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1579:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1564:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1564:18:1"
																	},
																	{
																		"hexValue": "706f6f6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1584:6:1",
																		"type": "",
																		"value": "pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1557:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1557:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1557:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1600:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1612:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1623:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1608:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1608:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1600:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_35075a8aaf17f88c6d06dfc971cf92115a9114e82f33628ec975082c22053630__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1384:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1398:4:1",
														"type": ""
													}
												],
												"src": "1233:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1812:172:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1829:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1840:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1822:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1822:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1822:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1863:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1874:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1859:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1859:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1879:2:1",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1852:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1852:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1852:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1902:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1913:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1898:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1898:18:1"
																	},
																	{
																		"hexValue": "496e636f7272656374207374616b6520616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1918:24:1",
																		"type": "",
																		"value": "Incorrect stake amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1891:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1891:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1891:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1952:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1964:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1975:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1960:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1960:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1952:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f199782e4f29a835ea638fe1c7e17a78da2d188961e8a5fe86695b5d6f94265__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1789:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1803:4:1",
														"type": ""
													}
												],
												"src": "1638:346:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2163:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2180:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2191:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2173:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2214:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2225:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2210:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2230:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2203:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2203:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2203:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2253:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2264:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2249:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2249:18:1"
																	},
																	{
																		"hexValue": "416c726561647920706c6179656420696e207468697320726f756e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2269:30:1",
																		"type": "",
																		"value": "Already played in this round"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2242:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2242:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2242:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2309:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2321:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2332:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2317:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2317:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2309:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f5071e4757739cd42b9e94901e6f3a73f485622954975b8d77f7b23a078c5be__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2140:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2154:4:1",
														"type": ""
													}
												],
												"src": "1989:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2378:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2395:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2402:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2407:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2398:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2398:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2388:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2388:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2388:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2438:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2428:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2428:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2428:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2459:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2462:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2452:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2452:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2452:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2346:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2525:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2556:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2558:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2558:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2558:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2541:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2552:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2548:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2538:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:17:1"
															},
															"nodeType": "YulIf",
															"src": "2535:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2587:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2598:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2605:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2594:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2594:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2587:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2507:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2517:3:1",
														"type": ""
													}
												],
												"src": "2478:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2747:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2757:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2769:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2780:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2765:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2765:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2757:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2799:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2810:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2792:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2792:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2792:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2837:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2848:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2833:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2833:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2853:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2826:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2826:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2826:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2708:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2719:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2727:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2738:4:1",
														"type": ""
													}
												],
												"src": "2618:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3045:165:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3062:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3073:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3096:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3107:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3092:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3092:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3112:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3085:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3085:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3085:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3135:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3146:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3131:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3131:18:1"
																	},
																	{
																		"hexValue": "4e6f20616374697665207374616b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3151:17:1",
																		"type": "",
																		"value": "No active stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3124:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3124:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3124:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3178:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3190:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3201:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3186:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3186:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3178:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3022:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3036:4:1",
														"type": ""
													}
												],
												"src": "2871:339:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3389:172:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3406:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3417:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3399:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3399:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3440:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3451:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3436:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3456:2:1",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3429:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3429:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3479:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3490:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3475:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:18:1"
																	},
																	{
																		"hexValue": "5374616b65206c6f636b656420666f72203120646179",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3495:24:1",
																		"type": "",
																		"value": "Stake locked for 1 day"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3468:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3468:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3468:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3529:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3541:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3552:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3537:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3537:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3529:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9e295611c7fff753208b30618c22be66e796815d2bd93579abae4b5ec65907c1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3366:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3380:4:1",
														"type": ""
													}
												],
												"src": "3215:346:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3615:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3625:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3637:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3640:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3633:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3633:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3625:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3666:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3668:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3668:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3668:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3663:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3654:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3654:11:1"
															},
															"nodeType": "YulIf",
															"src": "3651:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3597:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3600:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3606:4:1",
														"type": ""
													}
												],
												"src": "3566:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3747:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3757:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3768:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3771:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3764:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3764:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3757:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3796:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3798:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3798:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3798:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3788:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3791:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3785:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3785:10:1"
															},
															"nodeType": "YulIf",
															"src": "3782:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3730:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3733:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3739:3:1",
														"type": ""
													}
												],
												"src": "3699:125:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_f0eea299b23e35bb62f6facdd8a43d0b4ef250617409b6608fb2d409f5132935__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"No prize to claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_35075a8aaf17f88c6d06dfc971cf92115a9114e82f33628ec975082c22053630__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Must send ETH to fund the prize \")\n        mstore(add(headStart, 96), \"pool\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3f199782e4f29a835ea638fe1c7e17a78da2d188961e8a5fe86695b5d6f94265__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Incorrect stake amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3f5071e4757739cd42b9e94901e6f3a73f485622954975b8d77f7b23a078c5be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Already played in this round\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"No active stake\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9e295611c7fff753208b30618c22be66e796815d2bd93579abae4b5ec65907c1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Stake locked for 1 day\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100d9575f3560e01c8063719ce73e1161007c578063af89973511610057578063af8997351461020f578063bed9d86114610217578063c506f2331461022b578063f2fde38b14610256575f80fd5b8063719ce73e146101cc57806388b2f7c3146101e15780638da5cb5b146101e9575f80fd5b80635c492129116100b75780635c4921291461017857806360c7dc471461018d57806370740ac9146101a2578063715018a6146101b8575f80fd5b806307cc6d69146100dd57806319262d301461011b57806332d0bbe31461014a575b5f80fd5b3480156100e8575f80fd5b506101086100f73660046107b9565b60046020525f908152604090205481565b6040519081526020015b60405180910390f35b348015610126575f80fd5b5061013a6101353660046107b9565b610275565b6040519015158152602001610112565b348015610155575f80fd5b5061013a6101643660046107b9565b60056020525f908152604090205460ff1681565b348015610183575f80fd5b5061010860035481565b348015610198575f80fd5b5061010860015481565b3480156101ad575f80fd5b506101b66102c8565b005b3480156101c3575f80fd5b506101b66103b9565b3480156101d7575f80fd5b5061010860025481565b6101b66103cc565b3480156101f4575f80fd5b505f546040516001600160a01b039091168152602001610112565b6101b6610474565b348015610222575f80fd5b506101b66105ac565b348015610236575f80fd5b506101086102453660046107b9565b60066020525f908152604090205481565b348015610261575f80fd5b506101b66102703660046107b9565b6106e4565b6001600160a01b0381165f9081526005602052604081205460ff1680156102c257506001600160a01b0382165f9081526006602052604090205462015180906102bf904290610721565b10155b92915050565b6102d0610733565b5f6002541161031a5760405162461bcd60e51b81526020600482015260116024820152704e6f207072697a6520746f20636c61696d60781b60448201526064015b60405180910390fd5b600280545f9091556103335f546001600160a01b031690565b6001600160a01b03166108fc8290811502906040515f60405180830381858888f19350505050158015610368573d5f803e3d5ffd5b505f546001600160a01b03166001600160a01b03167f95681e512bc0fe659e195e06c283eada494316f3d801213e48e7101af92bf770826040516103ae91815260200190565b60405180910390a250565b6103c1610733565b6103ca5f61075f565b565b6103d4610733565b5f341161042f5760405162461bcd60e51b8152602060048201526024808201527f4d7573742073656e642045544820746f2066756e6420746865207072697a65206044820152631c1bdbdb60e21b6064820152608401610311565b60025461043c90346107ae565b6002556040513481527f9d81ff1364df34467b23be983916ca00ebe5b231f3c47645a0ad063b56589f489060200160405180910390a1565b60015434146104be5760405162461bcd60e51b8152602060048201526016602482015275125b98dbdc9c9958dd081cdd185ad948185b5bdd5b9d60521b6044820152606401610311565b335f9081526005602052604090205460ff161561051d5760405162461bcd60e51b815260206004820152601c60248201527f416c726561647920706c6179656420696e207468697320726f756e64000000006044820152606401610311565b335f90815260046020908152604080832034905560058252808320805460ff1916600117905560069091528120429055600380549161055b836107f3565b909155505060025461056d90346107ae565b6002556040805134815242602082015233917f24b31e1dbf1732a12bb700d3d77e5fb96ff3b693374d9fa15ccbc03f42715076910160405180910390a2565b335f9081526005602052604090205460ff166105fc5760405162461bcd60e51b815260206004820152600f60248201526e4e6f20616374697665207374616b6560881b6044820152606401610311565b335f90815260066020526040902054620151809061061b904290610721565b10156106625760405162461bcd60e51b81526020600482015260166024820152755374616b65206c6f636b656420666f7220312064617960501b6044820152606401610311565b335f8181526004602090815260408083208054908490556005909252808320805460ff191690555190929183156108fc02918491818181858888f193505050501580156106b1573d5f803e3d5ffd5b5060405181815233907f8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc906020016103ae565b6106ec610733565b6001600160a01b03811661071557604051631e4fbdf760e01b81525f6004820152602401610311565b61071e8161075f565b50565b5f61072c828461080b565b9392505050565b5f546001600160a01b031633146103ca5760405163118cdaa760e01b8152336004820152602401610311565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f61072c828461081e565b5f602082840312156107c9575f80fd5b81356001600160a01b038116811461072c575f80fd5b634e487b7160e01b5f52601160045260245ffd5b5f60018201610804576108046107df565b5060010190565b818103818111156102c2576102c26107df565b808201808211156102c2576102c26107df56fea26469706673582212200d29acf80ea53763b5faa2a01bd3120f08cb8700901ab08c6ef6c0c5458256e064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x719CE73E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xAF899735 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xAF899735 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xBED9D861 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xC506F233 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x256 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x719CE73E EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x88B2F7C3 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C492129 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x5C492129 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x60C7DC47 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x70740AC9 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7CC6D69 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x19262D30 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x32D0BBE3 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x112 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x3B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x3CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x112 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x474 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x5AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x2C2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x15180 SWAP1 PUSH2 0x2BF SWAP1 TIMESTAMP SWAP1 PUSH2 0x721 JUMP JUMPDEST LT ISZERO JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0x733 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD GT PUSH2 0x31A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F207072697A6520746F20636C61696D PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH0 SWAP1 SWAP2 SSTORE PUSH2 0x333 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x368 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x95681E512BC0FE659E195E06C283EADA494316F3D801213E48E7101AF92BF770 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x3CA PUSH0 PUSH2 0x75F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3D4 PUSH2 0x733 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x42F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4D7573742073656E642045544820746F2066756E6420746865207072697A6520 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1C1BDBDB PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x43C SWAP1 CALLVALUE PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH32 0x9D81FF1364DF34467B23BE983916CA00EBE5B231F3C47645A0AD063B56589F48 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLVALUE EQ PUSH2 0x4BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B98DBDC9C9958DD081CDD185AD948185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920706C6179656420696E207468697320726F756E6400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLVALUE SWAP1 SSTORE PUSH1 0x5 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 PUSH2 0x55B DUP4 PUSH2 0x7F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH2 0x56D SWAP1 CALLVALUE PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x24B31E1DBF1732A12BB700D3D77E5FB96FF3B693374D9FA15CCBC03F42715076 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F20616374697665207374616B65 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x15180 SWAP1 PUSH2 0x61B SWAP1 TIMESTAMP SWAP1 PUSH2 0x721 JUMP JUMPDEST LT ISZERO PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x5374616B65206C6F636B656420666F72203120646179 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP3 SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6B1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x8108595EB6BAD3ACEFA9DA467D90CC2217686D5C5AC85460F8B7849C840645FC SWAP1 PUSH1 0x20 ADD PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x6EC PUSH2 0x733 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x715 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x311 JUMP JUMPDEST PUSH2 0x71E DUP2 PUSH2 0x75F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x72C DUP3 DUP5 PUSH2 0x80B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3CA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x311 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x72C DUP3 DUP5 PUSH2 0x81E JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x72C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x804 JUMPI PUSH2 0x804 PUSH2 0x7DF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x7DF JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x7DF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x29 0xAC 0xF8 0xE 0xA5 CALLDATACOPY PUSH4 0xB5FAA2A0 SHL 0xD3 SLT 0xF ADDMOD 0xCB DUP8 STOP SWAP1 BYTE 0xB0 DUP13 PUSH15 0xF6C0C5458256E064736F6C63430008 EQ STOP CALLER ",
							"sourceMap": "10873:2426:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11043:47;;;;;;;;;;-1:-1:-1;11043:47:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;451:25:1;;;439:2;424:18;11043:47:0;;;;;;;;13137:160;;;;;;;;;;-1:-1:-1;13137:160:0;;;;;:::i;:::-;;:::i;:::-;;;652:14:1;;645:22;627:41;;615:2;600:18;13137:160:0;487:187:1;11096:41:0;;;;;;;;;;-1:-1:-1;11096:41:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;11005:31;;;;;;;;;;;;;;;;10943:26;;;;;;;;;;;;;;;;12826:248;;;;;;;;;;;;;:::i;:::-;;3286:101;;;;;;;;;;;;;:::i;10975:24::-;;;;;;;;;;;;;;;;12173:218;;;:::i;2631:85::-;;;;;;;;;;-1:-1:-1;2677:7:0;2703:6;2631:85;;-1:-1:-1;;;;;2703:6:0;;;825:51:1;;813:2;798:18;2631:85:0;679:203:1;11648:519:0;;;:::i;12397:423::-;;;;;;;;;;;;;:::i;11143:45::-;;;;;;;;;;-1:-1:-1;11143:45:0;;;;;:::i;:::-;;;;;;;;;;;;;;3536:215;;;;;;;;;;-1:-1:-1;3536:215:0;;;;;:::i;:::-;;:::i;13137:160::-;-1:-1:-1;;;;;13220:17:0;;13197:4;13220:17;;;:9;:17;;;;;;;;:70;;;;-1:-1:-1;;;;;;13261:18:0;;;;;;:10;:18;;;;;;13284:6;;13241:39;;:15;;:19;:39::i;:::-;:49;;13220:70;13213:77;13137:160;-1:-1:-1;;13137:160:0:o;12826:248::-;2524:13;:11;:13::i;:::-;12897:1:::1;12885:9;;:13;12877:43;;;::::0;-1:-1:-1;;;12877:43:0;;1089:2:1;12877:43:0::1;::::0;::::1;1071:21:1::0;1128:2;1108:18;;;1101:30;-1:-1:-1;;;1147:18:1;;;1140:47;1204:18;;12877:43:0::1;;;;;;;;;12947:9;::::0;;12930:14:::1;12966:13:::0;;;12998:7:::1;2677::::0;2703:6;-1:-1:-1;;;;;2703:6:0;;2631:85;12998:7:::1;-1:-1:-1::0;;;;;12990:25:0::1;:33;13016:6;12990:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2677:7:0;2703:6;-1:-1:-1;;;;;2703:6:0;-1:-1:-1;;;;;13038:29:0::1;;13060:6;13038:29;;;;451:25:1::0;;439:2;424:18;;305:177;13038:29:0::1;;;;;;;;12867:207;12826:248::o:0;3286:101::-;2524:13;:11;:13::i;:::-;3350:30:::1;3377:1;3350:18;:30::i;:::-;3286:101::o:0;12173:218::-;2524:13;:11;:13::i;:::-;12255:1:::1;12243:9;:13;12235:62;;;::::0;-1:-1:-1;;;12235:62:0;;1435:2:1;12235:62:0::1;::::0;::::1;1417:21:1::0;1474:2;1454:18;;;1447:30;1513:34;1493:18;;;1486:62;-1:-1:-1;;;1564:18:1;;;1557:34;1608:19;;12235:62:0::1;1233:400:1::0;12235:62:0::1;12319:9;::::0;:24:::1;::::0;12333:9:::1;12319:13;:24::i;:::-;12307:9;:36:::0;12358:26:::1;::::0;12374:9:::1;451:25:1::0;;12358:26:0::1;::::0;439:2:1;424:18;12358:26:0::1;;;;;;;12173:218::o:0;11648:519::-;11716:11;;11703:9;:24;11695:59;;;;-1:-1:-1;;;11695:59:0;;1840:2:1;11695:59:0;;;1822:21:1;1879:2;1859:18;;;1852:30;-1:-1:-1;;;1898:18:1;;;1891:52;1960:18;;11695:59:0;1638:346:1;11695:59:0;11783:10;11773:21;;;;:9;:21;;;;;;;;11772:22;11764:63;;;;-1:-1:-1;;;11764:63:0;;2191:2:1;11764:63:0;;;2173:21:1;2230:2;2210:18;;;2203:30;2269;2249:18;;;2242:58;2317:18;;11764:63:0;1989:352:1;11764:63:0;11851:10;11838:24;;;;:12;:24;;;;;;;;11865:9;11838:36;;11884:9;:21;;;;;:28;;-1:-1:-1;;11884:28:0;11908:4;11884:28;;;11922:10;:22;;;;;11947:15;11922:40;;11972:16;:18;;;;;;:::i;:::-;;;;-1:-1:-1;;12070:9:0;;:24;;12084:9;12070:13;:24::i;:::-;12058:9;:36;12110:50;;;12133:9;2792:25:1;;12144:15:0;2848:2:1;2833:18;;2826:34;12121:10:0;;12110:50;;2765:18:1;12110:50:0;;;;;;;11648:519::o;12397:423::-;12459:10;12449:21;;;;:9;:21;;;;;;;;12441:49;;;;-1:-1:-1;;;12441:49:0;;3073:2:1;12441:49:0;;;3055:21:1;3112:2;3092:18;;;3085:30;-1:-1:-1;;;3131:18:1;;;3124:45;3186:18;;12441:49:0;2871:339:1;12441:49:0;12539:10;12528:22;;;;:10;:22;;;;;;12555:6;;12508:43;;:15;;:19;:43::i;:::-;:53;;12500:88;;;;-1:-1:-1;;;12500:88:0;;3417:2:1;12500:88:0;;;3399:21:1;3456:2;3436:18;;;3429:30;-1:-1:-1;;;3475:18:1;;;3468:52;3537:18;;12500:88:0;3215:346:1;12500:88:0;12629:10;12599:14;12616:24;;;:12;:24;;;;;;;;;;12650:28;;;;12688:9;:21;;;;;;:29;;-1:-1:-1;;12688:29:0;;;12728:36;12616:24;;12629:10;12728:36;;;;;12616:24;;12728:36;12599:14;12728:36;12616:24;12629:10;12728:36;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12779:34:0;;451:25:1;;;12794:10:0;;12779:34;;439:2:1;424:18;12779:34:0;305:177:1;3536:215:0;2524:13;:11;:13::i;:::-;-1:-1:-1;;;;;3620:22:0;::::1;3616:91;;3665:31;::::0;-1:-1:-1;;;3665:31:0;;3693:1:::1;3665:31;::::0;::::1;825:51:1::0;798:18;;3665:31:0::1;679:203:1::0;3616:91:0::1;3716:28;3735:8;3716:18;:28::i;:::-;3536:215:::0;:::o;7245:96::-;7303:7;7329:5;7333:1;7329;:5;:::i;:::-;7322:12;7245:96;-1:-1:-1;;;7245:96:0:o;2789:162::-;2677:7;2703:6;-1:-1:-1;;;;;2703:6:0;788:10;2848:23;2844:101;;2894:40;;-1:-1:-1;;;2894:40:0;;788:10;2894:40;;;825:51:1;798:18;;2894:40:0;679:203:1;3905:187:0;3978:16;3997:6;;-1:-1:-1;;;;;4013:17:0;;;-1:-1:-1;;;;;;4013:17:0;;;;;;4045:40;;3997:6;;;;;;;4045:40;;3978:16;4045:40;3968:124;3905:187;:::o;6878:96::-;6936:7;6962:5;6966:1;6962;:5;:::i;14:286:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:1;;210:42;;200:70;;266:1;263;256:12;2346:127;2407:10;2402:3;2398:20;2395:1;2388:31;2438:4;2435:1;2428:15;2462:4;2459:1;2452:15;2478:135;2517:3;2538:17;;;2535:43;;2558:18;;:::i;:::-;-1:-1:-1;2605:1:1;2594:13;;2478:135::o;3566:128::-;3633:9;;;3654:11;;;3651:37;;;3668:18;;:::i;3699:125::-;3764:9;;;3785:10;;;3782:36;;;3798:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "430200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"activeStakes(address)": "2494",
								"canWithdraw(address)": "infinite",
								"claimPrize()": "infinite",
								"fundPrizePool()": "27728",
								"hasPlayed(address)": "2561",
								"lastPlayed(address)": "2536",
								"owner()": "2366",
								"playGame()": "123395",
								"prizePool()": "2306",
								"renounceOwnership()": "infinite",
								"stakeAmount()": "2328",
								"totalGamesPlayed()": "2306",
								"transferOwnership(address)": "28382",
								"withdrawStake()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 10873,
									"end": 13299,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 10873,
									"end": 13299,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10873,
									"end": 13299,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 11450,
									"end": 11642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 11450,
									"end": 11642,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11499,
									"end": 11509,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 11499,
									"end": 11509,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2262,
									"end": 2357,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2262,
									"end": 2357,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2315,
									"end": 2346,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2315,
									"end": 2346,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2315,
									"end": 2346,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2315,
									"end": 2346,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2315,
									"end": 2346,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2315,
									"end": 2346,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2315,
									"end": 2346,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 349,
									"end": 400,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 322,
									"end": 340,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 322,
									"end": 340,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2315,
									"end": 2346,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2315,
									"end": 2346,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2315,
									"end": 2346,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2315,
									"end": 2346,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2315,
									"end": 2346,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2315,
									"end": 2346,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2315,
									"end": 2346,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2315,
									"end": 2346,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2315,
									"end": 2346,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2262,
									"end": 2357,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2262,
									"end": 2357,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2366,
									"end": 2398,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2385,
									"end": 2397,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2366,
									"end": 2384,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2366,
									"end": 2398,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2366,
									"end": 2398,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2366,
									"end": 2398,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2218,
									"end": 2405,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11551,
									"end": 11552,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11529,
									"end": 11548,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11529,
									"end": 11552,
									"modifierDepth": 1,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 11521,
									"end": 11592,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 11521,
									"end": 11592,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11521,
									"end": 11592,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11521,
									"end": 11592,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 11521,
									"end": 11592,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11521,
									"end": 11592,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 613,
									"end": 615,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11521,
									"end": 11592,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11521,
									"end": 11592,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11521,
									"end": 11592,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 595,
									"end": 616,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 652,
									"end": 654,
									"name": "PUSH",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 632,
									"end": 650,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 632,
									"end": 650,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 632,
									"end": 650,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 625,
									"end": 655,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 691,
									"end": 725,
									"name": "PUSH",
									"source": 1,
									"value": "5374616B6520616D6F756E74206D757374206265206772656174657220746861"
								},
								{
									"begin": 671,
									"end": 689,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 671,
									"end": 689,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 671,
									"end": 689,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 664,
									"end": 726,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6E203"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 742,
									"end": 760,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 742,
									"end": 760,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 742,
									"end": 760,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 735,
									"end": 768,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 785,
									"end": 804,
									"name": "PUSH",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 785,
									"end": 804,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11521,
									"end": 11592,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 411,
									"end": 810,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11521,
									"end": 11592,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 11521,
									"end": 11592,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11602,
									"end": 11613,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11602,
									"end": 11635,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10873,
									"end": 13299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 10873,
									"end": 13299,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3905,
									"end": 4092,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3905,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3978,
									"end": 3994,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3997,
									"end": 4003,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3997,
									"end": 4003,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4013,
									"end": 4030,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4013,
									"end": 4030,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4013,
									"end": 4030,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4013,
									"end": 4030,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4013,
									"end": 4030,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4013,
									"end": 4030,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4013,
									"end": 4030,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 4013,
									"end": 4030,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 4013,
									"end": 4030,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 4045,
									"end": 4085,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4045,
									"end": 4085,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3997,
									"end": 4003,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3997,
									"end": 4003,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3997,
									"end": 4003,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3997,
									"end": 4003,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3997,
									"end": 4003,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3997,
									"end": 4003,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3997,
									"end": 4003,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4045,
									"end": 4085,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 4045,
									"end": 4085,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3978,
									"end": 3994,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4045,
									"end": 4085,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3968,
									"end": 4092,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3905,
									"end": 4092,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3905,
									"end": 4092,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 198,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 411,
									"end": 810,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 411,
									"end": 810,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10873,
									"end": 13299,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10873,
									"end": 13299,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10873,
									"end": 13299,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10873,
									"end": 13299,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10873,
									"end": 13299,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 10873,
									"end": 13299,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10873,
									"end": 13299,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200d29acf80ea53763b5faa2a01bd3120f08cb8700901ab08c6ef6c0c5458256e064736f6c63430008140033",
									".code": [
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "719CE73E"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "AF899735"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "AF899735"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "BED9D861"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "C506F233"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "719CE73E"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "88B2F7C3"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "5C492129"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "5C492129"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "60C7DC47"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "70740AC9"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "7CC6D69"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "19262D30"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "32D0BBE3"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 13299,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 11043,
											"end": 11090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11043,
											"end": 11090,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 13137,
											"end": 13297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 13137,
											"end": 13297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 645,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 627,
											"end": 668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 627,
											"end": 668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 615,
											"end": 617,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 600,
											"end": 618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 487,
											"end": 674,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 11096,
											"end": 11137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11137,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11036,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11005,
											"end": 11036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11036,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 11005,
											"end": 11036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11005,
											"end": 11036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11036,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11036,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 11005,
											"end": 11036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11005,
											"end": 11036,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11005,
											"end": 11036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11036,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10969,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10943,
											"end": 10969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10969,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10969,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 10943,
											"end": 10969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10943,
											"end": 10969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10969,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10969,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 10943,
											"end": 10969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10943,
											"end": 10969,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10943,
											"end": 10969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10969,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 13074,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12826,
											"end": 13074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 13074,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 13074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 13074,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 13074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 12826,
											"end": 13074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 13074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12826,
											"end": 13074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 13074,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 13074,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 12826,
											"end": 13074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 13074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 13074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 12826,
											"end": 13074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 12826,
											"end": 13074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 13074,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 12826,
											"end": 13074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 13074,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3387,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3286,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3387,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3286,
											"end": 3387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3387,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3387,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3286,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3286,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3286,
											"end": 3387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10975,
											"end": 10999,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10975,
											"end": 10999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10975,
											"end": 10999,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10975,
											"end": 10999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10975,
											"end": 10999,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10975,
											"end": 10999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10975,
											"end": 10999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10975,
											"end": 10999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10975,
											"end": 10999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10975,
											"end": 10999,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10975,
											"end": 10999,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10975,
											"end": 10999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10975,
											"end": 10999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10975,
											"end": 10999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10975,
											"end": 10999,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10975,
											"end": 10999,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10975,
											"end": 10999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10975,
											"end": 10999,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12391,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 12173,
											"end": 12391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 12173,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 12173,
											"end": 12391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2716,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2631,
											"end": 2716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2716,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2716,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2631,
											"end": 2716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2716,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2716,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2631,
											"end": 2716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2677,
											"end": 2684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2631,
											"end": 2716,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 825,
											"end": 876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 825,
											"end": 876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 813,
											"end": 815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 679,
											"end": 882,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11648,
											"end": 12167,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 11648,
											"end": 12167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11648,
											"end": 12167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 11648,
											"end": 12167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 11648,
											"end": 12167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12397,
											"end": 12820,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 12397,
											"end": 12820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12397,
											"end": 12820,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12397,
											"end": 12820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12397,
											"end": 12820,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12397,
											"end": 12820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12397,
											"end": 12820,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12397,
											"end": 12820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12397,
											"end": 12820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12397,
											"end": 12820,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12397,
											"end": 12820,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12397,
											"end": 12820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12397,
											"end": 12820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12397,
											"end": 12820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 12397,
											"end": 12820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 12397,
											"end": 12820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 11143,
											"end": 11188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11188,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3536,
											"end": 3751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3536,
											"end": 3751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13220,
											"end": 13237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13197,
											"end": 13201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13220,
											"end": 13237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13229,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13220,
											"end": 13237,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13220,
											"end": 13237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13220,
											"end": 13237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13237,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13237,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13237,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13220,
											"end": 13237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13290,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 13220,
											"end": 13290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13261,
											"end": 13279,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13261,
											"end": 13279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13271,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13261,
											"end": 13279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13261,
											"end": 13279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13261,
											"end": 13279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13279,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13284,
											"end": 13290,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 13284,
											"end": 13290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13241,
											"end": 13280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 13241,
											"end": 13280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13241,
											"end": 13256,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 13241,
											"end": 13256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13241,
											"end": 13260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 13241,
											"end": 13280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13241,
											"end": 13280,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 13241,
											"end": 13280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13241,
											"end": 13290,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13241,
											"end": 13290,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13290,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 13220,
											"end": 13290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13290,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13297,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13137,
											"end": 13297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 13074,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 12826,
											"end": 13074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2524,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2524,
											"end": 2537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2537,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2524,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12897,
											"end": 12898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12885,
											"end": 12894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12885,
											"end": 12894,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12885,
											"end": 12898,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 12877,
											"end": 12920,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12877,
											"end": 12920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12877,
											"end": 12920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1091,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12877,
											"end": 12920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12877,
											"end": 12920,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12920,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1071,
											"end": 1092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1108,
											"end": 1126,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1108,
											"end": 1126,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F207072697A6520746F20636C61696D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1147,
											"end": 1165,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1147,
											"end": 1165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1222,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1204,
											"end": 1222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12877,
											"end": 12920,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 12877,
											"end": 12920,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12877,
											"end": 12920,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12920,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12920,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12920,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12920,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12920,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 12877,
											"end": 12920,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12947,
											"end": 12956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12947,
											"end": 12956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12947,
											"end": 12956,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12966,
											"end": 12979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 12979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 12979,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12998,
											"end": 13005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2677,
											"end": 2684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2716,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12998,
											"end": 13005,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 12998,
											"end": 13005,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12990,
											"end": 13015,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 13016,
											"end": 13022,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12990,
											"end": 13023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 12990,
											"end": 13023,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2677,
											"end": 2684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13038,
											"end": 13067,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13038,
											"end": 13067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "95681E512BC0FE659E195E06C283EADA494316F3D801213E48E7101AF92BF770"
										},
										{
											"begin": 13060,
											"end": 13066,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13038,
											"end": 13067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13038,
											"end": 13067,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13038,
											"end": 13067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 13038,
											"end": 13067,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 424,
											"end": 442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 305,
											"end": 482,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13038,
											"end": 13067,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 13038,
											"end": 13067,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13038,
											"end": 13067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13038,
											"end": 13067,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13038,
											"end": 13067,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13038,
											"end": 13067,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13038,
											"end": 13067,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13038,
											"end": 13067,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13038,
											"end": 13067,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 12867,
											"end": 13074,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 13074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3387,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3286,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2524,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2524,
											"end": 2537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2537,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2524,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3377,
											"end": 3378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3350,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3350,
											"end": 3380,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3350,
											"end": 3380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12391,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 12173,
											"end": 12391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2524,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2524,
											"end": 2537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2537,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2524,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12255,
											"end": 12256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12243,
											"end": 12252,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12243,
											"end": 12256,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12235,
											"end": 12297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12235,
											"end": 12297,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12235,
											"end": 12297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12235,
											"end": 12297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12235,
											"end": 12297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12235,
											"end": 12297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1437,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12235,
											"end": 12297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12235,
											"end": 12297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12235,
											"end": 12297,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1476,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1447,
											"end": 1477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "4D7573742073656E642045544820746F2066756E6420746865207072697A6520"
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C1BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1564,
											"end": 1582,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1564,
											"end": 1582,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1627,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1608,
											"end": 1627,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12235,
											"end": 12297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1233,
											"end": 1633,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12235,
											"end": 12297,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12235,
											"end": 12297,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12319,
											"end": 12328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12319,
											"end": 12328,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12319,
											"end": 12343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 12319,
											"end": 12343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12333,
											"end": 12342,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12319,
											"end": 12332,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12319,
											"end": 12343,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12319,
											"end": 12343,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 12319,
											"end": 12343,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12307,
											"end": 12316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12307,
											"end": 12343,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12358,
											"end": 12384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12358,
											"end": 12384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12374,
											"end": 12383,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12358,
											"end": 12384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9D81FF1364DF34467B23BE983916CA00EBE5B231F3C47645A0AD063B56589F48"
										},
										{
											"begin": 12358,
											"end": 12384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12358,
											"end": 12384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12358,
											"end": 12384,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12358,
											"end": 12384,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12358,
											"end": 12384,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12358,
											"end": 12384,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12358,
											"end": 12384,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12358,
											"end": 12384,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 12173,
											"end": 12391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11648,
											"end": 12167,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 11648,
											"end": 12167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11716,
											"end": 11727,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11716,
											"end": 11727,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11712,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11727,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11695,
											"end": 11754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 11695,
											"end": 11754,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11695,
											"end": 11754,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11695,
											"end": 11754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11695,
											"end": 11754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11695,
											"end": 11754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11695,
											"end": 11754,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11695,
											"end": 11754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11695,
											"end": 11754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1822,
											"end": 1843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1881,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1859,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1859,
											"end": 1877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B98DBDC9C9958DD081CDD185AD948185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1898,
											"end": 1916,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1898,
											"end": 1916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1898,
											"end": 1916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 1943,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1978,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1960,
											"end": 1978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11695,
											"end": 11754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1984,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11695,
											"end": 11754,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 11695,
											"end": 11754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11783,
											"end": 11793,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11773,
											"end": 11794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11773,
											"end": 11794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11773,
											"end": 11794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11773,
											"end": 11794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11773,
											"end": 11782,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11773,
											"end": 11794,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11773,
											"end": 11794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11773,
											"end": 11794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11773,
											"end": 11794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11773,
											"end": 11794,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11773,
											"end": 11794,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11773,
											"end": 11794,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11773,
											"end": 11794,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11772,
											"end": 11794,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11764,
											"end": 11827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 11764,
											"end": 11827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11764,
											"end": 11827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11764,
											"end": 11827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11764,
											"end": 11827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11764,
											"end": 11827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2193,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11764,
											"end": 11827,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11764,
											"end": 11827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11764,
											"end": 11827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "416C726561647920706C6179656420696E207468697320726F756E6400000000"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2300,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11764,
											"end": 11827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1989,
											"end": 2341,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11764,
											"end": 11827,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 11764,
											"end": 11827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11851,
											"end": 11861,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11838,
											"end": 11862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11838,
											"end": 11862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11838,
											"end": 11862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11838,
											"end": 11862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11838,
											"end": 11850,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11838,
											"end": 11862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11838,
											"end": 11862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11838,
											"end": 11862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11838,
											"end": 11862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11838,
											"end": 11862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11838,
											"end": 11862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11838,
											"end": 11862,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11838,
											"end": 11862,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11838,
											"end": 11874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11838,
											"end": 11874,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11893,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11884,
											"end": 11905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11905,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11905,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11912,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11884,
											"end": 11912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11908,
											"end": 11912,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11884,
											"end": 11912,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11884,
											"end": 11912,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11922,
											"end": 11932,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11922,
											"end": 11944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11922,
											"end": 11944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11922,
											"end": 11944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11922,
											"end": 11944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11922,
											"end": 11944,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11947,
											"end": 11962,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 11922,
											"end": 11962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11922,
											"end": 11962,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11972,
											"end": 11988,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11972,
											"end": 11990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11972,
											"end": 11990,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11972,
											"end": 11990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11972,
											"end": 11990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11972,
											"end": 11990,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11972,
											"end": 11990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11972,
											"end": 11990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11972,
											"end": 11990,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11972,
											"end": 11990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11972,
											"end": 11990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11972,
											"end": 11990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11972,
											"end": 11990,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12070,
											"end": 12079,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12070,
											"end": 12079,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12070,
											"end": 12094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 12070,
											"end": 12094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12084,
											"end": 12093,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12070,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12070,
											"end": 12094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12070,
											"end": 12094,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 12070,
											"end": 12094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12058,
											"end": 12067,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12058,
											"end": 12094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12110,
											"end": 12160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12110,
											"end": 12160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12110,
											"end": 12160,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12133,
											"end": 12142,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12144,
											"end": 12159,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 2850,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2833,
											"end": 2851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12121,
											"end": 12131,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12110,
											"end": 12160,
											"name": "PUSH",
											"source": 0,
											"value": "24B31E1DBF1732A12BB700D3D77E5FB96FF3B693374D9FA15CCBC03F42715076"
										},
										{
											"begin": 12110,
											"end": 12160,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12110,
											"end": 12160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12110,
											"end": 12160,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12110,
											"end": 12160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12110,
											"end": 12160,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12110,
											"end": 12160,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12110,
											"end": 12160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12110,
											"end": 12160,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 11648,
											"end": 12167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12397,
											"end": 12820,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 12397,
											"end": 12820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12459,
											"end": 12469,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12449,
											"end": 12470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12458,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12449,
											"end": 12470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12449,
											"end": 12470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12449,
											"end": 12470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12470,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12470,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12470,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12449,
											"end": 12470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12441,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 12441,
											"end": 12490,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12441,
											"end": 12490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12441,
											"end": 12490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12441,
											"end": 12490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12441,
											"end": 12490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12441,
											"end": 12490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12441,
											"end": 12490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12441,
											"end": 12490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3112,
											"end": 3114,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 3092,
											"end": 3110,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3092,
											"end": 3110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F20616374697665207374616B65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3131,
											"end": 3149,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3131,
											"end": 3149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12441,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2871,
											"end": 3210,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12441,
											"end": 12490,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 12441,
											"end": 12490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12539,
											"end": 12549,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12528,
											"end": 12550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12528,
											"end": 12550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12528,
											"end": 12550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12528,
											"end": 12550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12528,
											"end": 12538,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12528,
											"end": 12550,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12528,
											"end": 12550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12528,
											"end": 12550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12528,
											"end": 12550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12528,
											"end": 12550,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12528,
											"end": 12550,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12561,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 12555,
											"end": 12561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 12551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 12508,
											"end": 12551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 12523,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 12523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 12527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12508,
											"end": 12551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 12551,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 12508,
											"end": 12551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 12561,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 12561,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12500,
											"end": 12588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 12500,
											"end": 12588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12500,
											"end": 12588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12500,
											"end": 12588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12500,
											"end": 12588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12500,
											"end": 12588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3417,
											"end": 3419,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12500,
											"end": 12588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12500,
											"end": 12588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12500,
											"end": 12588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3420,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3458,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3436,
											"end": 3454,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3436,
											"end": 3454,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3459,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5374616B65206C6F636B656420666F72203120646179"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3475,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3475,
											"end": 3493,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3555,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3537,
											"end": 3555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12500,
											"end": 12588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3215,
											"end": 3561,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12500,
											"end": 12588,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 12500,
											"end": 12588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12639,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12599,
											"end": 12613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12616,
											"end": 12640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12616,
											"end": 12640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12616,
											"end": 12640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12616,
											"end": 12628,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12616,
											"end": 12640,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12616,
											"end": 12640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12616,
											"end": 12640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12616,
											"end": 12640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12616,
											"end": 12640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12616,
											"end": 12640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12616,
											"end": 12640,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12616,
											"end": 12640,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12616,
											"end": 12640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12616,
											"end": 12640,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12650,
											"end": 12678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12650,
											"end": 12678,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12650,
											"end": 12678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12650,
											"end": 12678,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12688,
											"end": 12697,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12688,
											"end": 12709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12688,
											"end": 12709,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12688,
											"end": 12709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12688,
											"end": 12709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12688,
											"end": 12709,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12688,
											"end": 12709,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12688,
											"end": 12717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12688,
											"end": 12717,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12688,
											"end": 12717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12688,
											"end": 12717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12688,
											"end": 12717,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12616,
											"end": 12640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12616,
											"end": 12640,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12616,
											"end": 12640,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12616,
											"end": 12640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12599,
											"end": 12613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12616,
											"end": 12640,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12639,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12779,
											"end": 12813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12779,
											"end": 12813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12794,
											"end": 12804,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12794,
											"end": 12804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12779,
											"end": 12813,
											"name": "PUSH",
											"source": 0,
											"value": "8108595EB6BAD3ACEFA9DA467D90CC2217686D5C5AC85460F8B7849C840645FC"
										},
										{
											"begin": 12779,
											"end": 12813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12779,
											"end": 12813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 305,
											"end": 482,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2524,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2524,
											"end": 2537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2537,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2524,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3620,
											"end": 3642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3642,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3707,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3616,
											"end": 3707,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3665,
											"end": 3696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3693,
											"end": 3694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3665,
											"end": 3696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3696,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 825,
											"end": 876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 798,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 679,
											"end": 882,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3707,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3616,
											"end": 3707,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3735,
											"end": 3743,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3716,
											"end": 3744,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3744,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3716,
											"end": 3744,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7341,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 7245,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7303,
											"end": 7310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7329,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7333,
											"end": 7334,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7329,
											"end": 7330,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7329,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7329,
											"end": 7334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7329,
											"end": 7334,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7329,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7334,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7341,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7245,
											"end": 7341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2951,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2789,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 788,
											"end": 798,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 2871,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2844,
											"end": 2945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2894,
											"end": 2934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2894,
											"end": 2934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 2934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 788,
											"end": 798,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2894,
											"end": 2934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 2934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 825,
											"end": 876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 798,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 679,
											"end": 882,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 4092,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3905,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 3994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4013,
											"end": 4030,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4013,
											"end": 4030,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4030,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4030,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4030,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4045,
											"end": 4085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4085,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 4045,
											"end": 4085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 3994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4085,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3968,
											"end": 4092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6878,
											"end": 6974,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6878,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6936,
											"end": 6943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6962,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6966,
											"end": 6967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6963,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6962,
											"end": 6967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2473,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2346,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2417,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2402,
											"end": 2405,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2442,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2428,
											"end": 2443,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2466,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2459,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2467,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2613,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2478,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2538,
											"end": 2555,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2538,
											"end": 2555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2535,
											"end": 2578,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2558,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2605,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3566,
											"end": 3694,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3566,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3633,
											"end": 3642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3633,
											"end": 3642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3633,
											"end": 3642,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3665,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3651,
											"end": 3688,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3651,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3651,
											"end": 3688,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3668,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3668,
											"end": 3686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3824,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3699,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3773,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3773,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3795,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3795,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3782,
											"end": 3818,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3782,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3782,
											"end": 3818,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3798,
											"end": 3816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"gameContract_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"activeStakes(address)": "07cc6d69",
							"canWithdraw(address)": "19262d30",
							"claimPrize()": "70740ac9",
							"fundPrizePool()": "88b2f7c3",
							"hasPlayed(address)": "32d0bbe3",
							"lastPlayed(address)": "c506f233",
							"owner()": "8da5cb5b",
							"playGame()": "af899735",
							"prizePool()": "719ce73e",
							"renounceOwnership()": "715018a6",
							"stakeAmount()": "60c7dc47",
							"totalGamesPlayed()": "5c492129",
							"transferOwnership(address)": "f2fde38b",
							"withdrawStake()": "bed9d861"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialStakeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"GamePlayed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PrizeClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PrizePoolFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"activeStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"canWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPrize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundPrizePool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasPlayed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastPlayed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"playGame\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prizePool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalGamesPlayed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gameContract_flattened.sol\":\"VersaGames\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"gameContract_flattened.sol\":{\"keccak256\":\"0x6ae0cc3478fb57947b3fce6baaa45f9c00bc5d3a064bfcc6223738dd92377bbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfa29312e01cc0e432021b3670361071a6f16a5a170967c8f3254fe73bfd98a8\",\"dweb:/ipfs/QmPMaXTDq4tx8NA8BGgcEfjyYJGzmEV2bHbyBNAegExGhc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 35,
								"contract": "gameContract_flattened.sol:VersaGames",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 493,
								"contract": "gameContract_flattened.sol:VersaGames",
								"label": "stakeAmount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 495,
								"contract": "gameContract_flattened.sol:VersaGames",
								"label": "prizePool",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 497,
								"contract": "gameContract_flattened.sol:VersaGames",
								"label": "totalGamesPlayed",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 501,
								"contract": "gameContract_flattened.sol:VersaGames",
								"label": "activeStakes",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 505,
								"contract": "gameContract_flattened.sol:VersaGames",
								"label": "hasPlayed",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 509,
								"contract": "gameContract_flattened.sol:VersaGames",
								"label": "lastPlayed",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"gameContract_flattened.sol": {
				"ast": {
					"absolutePath": "gameContract_flattened.sol",
					"exportedSymbols": {
						"Context": [
							29
						],
						"Ownable": [
							174
						],
						"SafeMath": [
							485
						],
						"VersaGames": [
							766
						]
					},
					"id": 767,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "154:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "180:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "Context",
							"nameLocation": "695:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "771:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "788:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "792:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "788:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "781:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "718:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "728:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "762:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "761:9:0"
									},
									"scope": 29,
									"src": "709:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "878:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "895:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "899:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "895:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "888:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "820:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "828:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "862:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "862:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:16:0"
									},
									"scope": 29,
									"src": "811:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "988:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1005:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 24,
												"id": 26,
												"nodeType": "Return",
												"src": "998:8:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "925:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "945:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "979:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:9:0"
									},
									"scope": 29,
									"src": "916:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 767,
							"src": "677:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 30,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1141:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 32,
										"name": "Context",
										"nameLocations": [
											"1685:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "1685:7:0"
									},
									"id": 33,
									"nodeType": "InheritanceSpecifier",
									"src": "1685:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 31,
								"nodeType": "StructuredDocumentation",
								"src": "1168:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 174,
							"linearizedBaseContracts": [
								174,
								29
							],
							"name": "Ownable",
							"nameLocation": "1674:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 35,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1715:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 174,
									"src": "1699:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 34,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1699:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1728:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 40,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1824:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1859:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1851:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1850:17:0"
									},
									"src": "1818:50:0"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1874:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 45,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1967:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1995:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1987:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1986:15:0"
									},
									"src": "1961:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 51,
									"name": "OwnershipTransferred",
									"nameLocation": "2014:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "2051:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2035:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2082:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2066:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2034:57:0"
									},
									"src": "2008:84:0"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "2252:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 57,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2266:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2290:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2282:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 58,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2282:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2282:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2266:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 71,
												"nodeType": "IfStatement",
												"src": "2262:95:0",
												"trueBody": {
													"id": 70,
													"nodeType": "Block",
													"src": "2294:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 66,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2343:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 65,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2335:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 64,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2335:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2335:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 63,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "2315:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2315:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 69,
															"nodeType": "RevertStatement",
															"src": "2308:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 73,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "2385:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 72,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "2366:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2366:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "2366:32:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2098:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 77,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2238:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "2230:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2230:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2229:22:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2252:0:0"
									},
									"scope": 174,
									"src": "2218:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "2514:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 80,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2524:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2524:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "2524:13:0"
											},
											{
												"id": 83,
												"nodeType": "PlaceholderStatement",
												"src": "2547:1:0"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "2411:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 85,
									"name": "onlyOwner",
									"nameLocation": "2502:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2511:2:0"
									},
									"src": "2493:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "2686:30:0",
										"statements": [
											{
												"expression": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 35,
													"src": "2703:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 90,
												"id": 92,
												"nodeType": "Return",
												"src": "2696:13:0"
											}
										]
									},
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "2561:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2640:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2645:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "2677:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:9:0"
									},
									"scope": 174,
									"src": "2631:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2834:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 98,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2848:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2848:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 100,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "2859:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2859:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2848:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 109,
												"nodeType": "IfStatement",
												"src": "2844:101:0",
												"trueBody": {
													"id": 108,
													"nodeType": "Block",
													"src": "2873:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 104,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "2921:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2921:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 103,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "2894:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2894:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 107,
															"nodeType": "RevertStatement",
															"src": "2887:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "2722:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2798:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2809:2:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2834:0:0"
									},
									"scope": 174,
									"src": "2789:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "3340:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3377:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3369:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 118,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3369:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3369:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 117,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "3350:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3350:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "3350:30:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "2957:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 114,
												"name": "onlyOwner",
												"nameLocations": [
													"3330:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "3330:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3330:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3295:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3340:0:0"
									},
									"scope": 174,
									"src": "3286:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3606:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 133,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "3620:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3640:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3632:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 134,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3632:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3632:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3620:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "IfStatement",
												"src": "3616:91:0",
												"trueBody": {
													"id": 146,
													"nodeType": "Block",
													"src": "3644:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3693:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3685:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 140,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3685:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3685:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 139,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "3665:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3665:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 145,
															"nodeType": "RevertStatement",
															"src": "3658:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 149,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "3735:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 148,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "3716:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3716:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "3716:28:0"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "3393:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 131,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 130,
												"name": "onlyOwner",
												"nameLocations": [
													"3596:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "3596:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3596:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3545:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3571:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3563:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3563:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3562:18:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3606:0:0"
									},
									"scope": 174,
									"src": "3536:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "3968:124:0",
										"statements": [
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3986:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 172,
														"src": "3978:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 159,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3978:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 162,
												"initialValue": {
													"id": 161,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 35,
													"src": "3997:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3978:25:0"
											},
											{
												"expression": {
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 163,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "4013:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 164,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "4022:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4013:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "4013:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 168,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "4066:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 169,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "4076:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 167,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "4045:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4045:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "EmitStatement",
												"src": "4040:45:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "3757:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3914:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3941:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "3933:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3933:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3932:18:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3968:0:0"
									},
									"scope": 174,
									"src": "3905:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 767,
							"src": "1656:2438:0",
							"usedErrors": [
								40,
								45
							],
							"usedEvents": [
								51
							]
						},
						{
							"id": 175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4230:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 176,
								"nodeType": "StructuredDocumentation",
								"src": "4408:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 485,
							"linearizedBaseContracts": [
								485
							],
							"name": "SafeMath",
							"nameLocation": "4613:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "4840:140:0",
										"statements": [
											{
												"id": 206,
												"nodeType": "UncheckedBlock",
												"src": "4850:124:0",
												"statements": [
													{
														"assignments": [
															189
														],
														"declarations": [
															{
																"constant": false,
																"id": 189,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "4882:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 206,
																"src": "4874:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 188,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4874:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 193,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 190,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "4886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 191,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "4890:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4886:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4874:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "4909:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 195,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "4913:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4909:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "4905:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4924:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4931:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4923:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 187,
															"id": 200,
															"nodeType": "Return",
															"src": "4916:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4955:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 203,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "4961:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 204,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4954:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 187,
														"id": 205,
														"nodeType": "Return",
														"src": "4947:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "4628:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "4773:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4788:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "4780:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4799:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "4791:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4779:22:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "4825:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4825:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "4831:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4824:15:0"
									},
									"scope": 485,
									"src": "4764:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "5201:113:0",
										"statements": [
											{
												"id": 234,
												"nodeType": "UncheckedBlock",
												"src": "5211:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 220,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "5239:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 221,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "5243:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5239:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 227,
														"nodeType": "IfStatement",
														"src": "5235:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5254:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5261:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 225,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5253:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 219,
															"id": 226,
															"nodeType": "Return",
															"src": "5246:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5285:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 229,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 211,
																		"src": "5291:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 230,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "5295:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5291:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 232,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5284:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 219,
														"id": 233,
														"nodeType": "Return",
														"src": "5277:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "4986:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "5134:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5149:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5141:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5141:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5160:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5152:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5152:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5140:22:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5186:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5186:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5192:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5192:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5185:15:0"
									},
									"scope": 485,
									"src": "5125:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "5538:417:0",
										"statements": [
											{
												"id": 276,
												"nodeType": "UncheckedBlock",
												"src": "5548:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 248,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "5806:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5811:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5806:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 255,
														"nodeType": "IfStatement",
														"src": "5802:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5822:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5828:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 253,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5821:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 247,
															"id": 254,
															"nodeType": "Return",
															"src": "5814:16:0"
														}
													},
													{
														"assignments": [
															257
														],
														"declarations": [
															{
																"constant": false,
																"id": 257,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "5852:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 276,
																"src": "5844:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 256,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5844:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 261,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 258,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "5856:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 259,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "5860:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5856:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5844:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 262,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "5879:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 263,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "5883:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5879:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 265,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "5888:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5879:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 271,
														"nodeType": "IfStatement",
														"src": "5875:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5899:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5906:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 269,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5898:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 247,
															"id": 270,
															"nodeType": "Return",
															"src": "5891:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5930:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 273,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "5936:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 274,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5929:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 247,
														"id": 275,
														"nodeType": "Return",
														"src": "5922:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "5320:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "5471:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "5478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "5489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5477:22:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "5523:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 243,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5523:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "5529:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5522:15:0"
									},
									"scope": 485,
									"src": "5462:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "6180:114:0",
										"statements": [
											{
												"id": 304,
												"nodeType": "UncheckedBlock",
												"src": "6190:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "6218:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 291,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6223:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6218:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 297,
														"nodeType": "IfStatement",
														"src": "6214:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6234:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6241:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 295,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6233:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 289,
															"id": 296,
															"nodeType": "Return",
															"src": "6226:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6265:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 299,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "6271:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 300,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 283,
																		"src": "6275:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6271:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 302,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6264:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 289,
														"id": 303,
														"nodeType": "Return",
														"src": "6257:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "5961:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "6113:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6128:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "6120:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6139:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "6131:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6131:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6119:22:0"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "6165:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6165:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "6171:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6164:15:0"
									},
									"scope": 485,
									"src": "6104:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "6529:114:0",
										"statements": [
											{
												"id": 332,
												"nodeType": "UncheckedBlock",
												"src": "6539:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "6567:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6572:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6567:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 325,
														"nodeType": "IfStatement",
														"src": "6563:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6583:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6590:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 323,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6582:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 317,
															"id": 324,
															"nodeType": "Return",
															"src": "6575:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6614:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "6620:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 328,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 311,
																		"src": "6624:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6620:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 330,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6613:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 317,
														"id": 331,
														"nodeType": "Return",
														"src": "6606:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "6300:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "6462:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6477:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "6469:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6488:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "6480:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6468:22:0"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "6514:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6514:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "6520:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6520:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6513:15:0"
									},
									"scope": 485,
									"src": "6453:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6945:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "6962:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 345,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "6966:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6962:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 343,
												"id": 347,
												"nodeType": "Return",
												"src": "6955:12:0"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "6649:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "6887:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6899:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6891:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6910:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6902:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6890:22:0"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6936:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6935:9:0"
									},
									"scope": 485,
									"src": "6878:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "7312:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "7329:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 360,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "7333:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7329:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 358,
												"id": 362,
												"nodeType": "Return",
												"src": "7322:12:0"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6980:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "7254:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7266:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "7258:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7277:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "7269:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7257:22:0"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "7303:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7302:9:0"
									},
									"scope": 485,
									"src": "7245:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "7655:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 374,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "7672:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 375,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "7676:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7672:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 373,
												"id": 377,
												"nodeType": "Return",
												"src": "7665:12:0"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "7347:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "7597:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7609:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "7601:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7620:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "7612:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7600:22:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "7646:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7646:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:9:0"
									},
									"scope": 485,
									"src": "7588:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "8040:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 389,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "8057:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 390,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "8061:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8057:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 388,
												"id": 392,
												"nodeType": "Return",
												"src": "8050:12:0"
											}
										]
									},
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "7690:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "7982:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7994:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "7986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "7997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7985:22:0"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "8031:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8030:9:0"
									},
									"scope": 485,
									"src": "7973:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "8589:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 404,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "8606:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 405,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "8610:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8606:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 403,
												"id": 407,
												"nodeType": "Return",
												"src": "8599:12:0"
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "8075:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "8531:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8543:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "8535:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8554:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "8546:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:22:0"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "8580:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8579:9:0"
									},
									"scope": 485,
									"src": "8522:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "9177:106:0",
										"statements": [
											{
												"id": 432,
												"nodeType": "UncheckedBlock",
												"src": "9187:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 422,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "9219:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 423,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 412,
																		"src": "9224:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9219:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 425,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "9227:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 421,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "9211:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9211:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 427,
														"nodeType": "ExpressionStatement",
														"src": "9211:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 428,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "9261:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 429,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "9265:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9261:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 420,
														"id": 431,
														"nodeType": "Return",
														"src": "9254:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "8624:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "9091:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9103:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "9095:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9095:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9114:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "9106:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9106:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9131:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "9117:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 415,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9117:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9094:50:0"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "9168:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9167:9:0"
									},
									"scope": 485,
									"src": "9082:201:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "9862:105:0",
										"statements": [
											{
												"id": 457,
												"nodeType": "UncheckedBlock",
												"src": "9872:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 447,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 439,
																		"src": "9904:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9908:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9904:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 450,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "9911:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 446,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "9896:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9896:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 452,
														"nodeType": "ExpressionStatement",
														"src": "9896:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 453,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "9945:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 454,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "9949:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9945:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 445,
														"id": 456,
														"nodeType": "Return",
														"src": "9938:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "9289:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "9776:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9788:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "9780:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9799:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "9791:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9816:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "9802:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 440,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9802:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9779:50:0"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "9853:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9853:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9852:9:0"
									},
									"scope": 485,
									"src": "9767:200:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "10708:105:0",
										"statements": [
											{
												"id": 482,
												"nodeType": "UncheckedBlock",
												"src": "10718:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 472,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "10750:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10754:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10750:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 475,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "10757:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 471,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "10742:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10742:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 477,
														"nodeType": "ExpressionStatement",
														"src": "10742:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 478,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "10791:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 479,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "10795:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10791:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 470,
														"id": 481,
														"nodeType": "Return",
														"src": "10784:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "9973:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "10622:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10634:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "10626:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10645:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "10637:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "10662:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "10648:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10648:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10625:50:0"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "10699:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10699:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10698:9:0"
									},
									"scope": 485,
									"src": "10613:200:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 767,
							"src": "4605:6210:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 486,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "10845:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 487,
										"name": "Ownable",
										"nameLocations": [
											"10896:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 174,
										"src": "10896:7:0"
									},
									"id": 488,
									"nodeType": "InheritanceSpecifier",
									"src": "10896:7:0"
								}
							],
							"canonicalName": "VersaGames",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 766,
							"linearizedBaseContracts": [
								766,
								174,
								29
							],
							"name": "VersaGames",
							"nameLocation": "10882:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 491,
									"libraryName": {
										"id": 489,
										"name": "SafeMath",
										"nameLocations": [
											"10916:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 485,
										"src": "10916:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "10910:27:0",
									"typeName": {
										"id": 490,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10929:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "60c7dc47",
									"id": 493,
									"mutability": "mutable",
									"name": "stakeAmount",
									"nameLocation": "10958:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 766,
									"src": "10943:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 492,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10943:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "719ce73e",
									"id": 495,
									"mutability": "mutable",
									"name": "prizePool",
									"nameLocation": "10990:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 766,
									"src": "10975:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 494,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10975:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5c492129",
									"id": 497,
									"mutability": "mutable",
									"name": "totalGamesPlayed",
									"nameLocation": "11020:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 766,
									"src": "11005:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 496,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11005:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "07cc6d69",
									"id": 501,
									"mutability": "mutable",
									"name": "activeStakes",
									"nameLocation": "11078:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 766,
									"src": "11043:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 500,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 498,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11051:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11043:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 499,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11062:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "32d0bbe3",
									"id": 505,
									"mutability": "mutable",
									"name": "hasPlayed",
									"nameLocation": "11128:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 766,
									"src": "11096:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 504,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 502,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11104:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11096:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 503,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "11115:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c506f233",
									"id": 509,
									"mutability": "mutable",
									"name": "lastPlayed",
									"nameLocation": "11178:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 766,
									"src": "11143:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 508,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 506,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11151:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11143:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 507,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11162:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "24b31e1dbf1732a12bb700d3d77e5fb96ff3b693374d9fa15ccbc03f42715076",
									"id": 517,
									"name": "GamePlayed",
									"nameLocation": "11201:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "11228:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "11212:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11244:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "11236:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "11260:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "11252:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11252:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11211:59:0"
									},
									"src": "11195:76:0"
								},
								{
									"anonymous": false,
									"eventSelector": "9d81ff1364df34467b23be983916ca00ebe5b231f3c47645a0ad063b56589f48",
									"id": 521,
									"name": "PrizePoolFunded",
									"nameLocation": "11282:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11306:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "11298:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11298:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11297:16:0"
									},
									"src": "11276:38:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc",
									"id": 527,
									"name": "StakeWithdrawn",
									"nameLocation": "11325:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "11356:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "11340:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11372:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "11364:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11364:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11339:40:0"
									},
									"src": "11319:61:0"
								},
								{
									"anonymous": false,
									"eventSelector": "95681e512bc0fe659e195e06c283eada494316f3d801213e48e7101af92bf770",
									"id": 533,
									"name": "PrizeClaimed",
									"nameLocation": "11391:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"indexed": true,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "11420:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "11404:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11436:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "11428:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11403:40:0"
									},
									"src": "11385:59:0"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "11511:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 543,
																"name": "_initialStakeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "11529:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11551:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11529:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b6520616d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11554:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30",
																"typeString": "literal_string \"Stake amount must be greater than 0\""
															},
															"value": "Stake amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30",
																"typeString": "literal_string \"Stake amount must be greater than 0\""
															}
														],
														"id": 542,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11521:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11521:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "11521:71:0"
											},
											{
												"expression": {
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 549,
														"name": "stakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "11602:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 550,
														"name": "_initialStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "11616:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11602:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "11602:33:0"
											}
										]
									},
									"id": 554,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 538,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "11499:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "11503:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "11499:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 540,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 537,
												"name": "Ownable",
												"nameLocations": [
													"11491:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 174,
												"src": "11491:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "11491:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "_initialStakeAmount",
												"nameLocation": "11470:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "11462:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11461:29:0"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11511:0:0"
									},
									"scope": 766,
									"src": "11450:192:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "11685:482:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 558,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "11703:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11707:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "11703:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 560,
																"name": "stakeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "11716:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11703:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f7272656374207374616b6520616d6f756e74",
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11729:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f199782e4f29a835ea638fe1c7e17a78da2d188961e8a5fe86695b5d6f94265",
																"typeString": "literal_string \"Incorrect stake amount\""
															},
															"value": "Incorrect stake amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f199782e4f29a835ea638fe1c7e17a78da2d188961e8a5fe86695b5d6f94265",
																"typeString": "literal_string \"Incorrect stake amount\""
															}
														],
														"id": 557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11695:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11695:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "11695:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "11772:22:0",
															"subExpression": {
																"baseExpression": {
																	"id": 566,
																	"name": "hasPlayed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "11773:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 569,
																"indexExpression": {
																	"expression": {
																		"id": 567,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11783:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11787:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11783:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11773:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920706c6179656420696e207468697320726f756e64",
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11796:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f5071e4757739cd42b9e94901e6f3a73f485622954975b8d77f7b23a078c5be",
																"typeString": "literal_string \"Already played in this round\""
															},
															"value": "Already played in this round"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f5071e4757739cd42b9e94901e6f3a73f485622954975b8d77f7b23a078c5be",
																"typeString": "literal_string \"Already played in this round\""
															}
														],
														"id": 565,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11764:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11764:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "11764:63:0"
											},
											{
												"expression": {
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 574,
															"name": "activeStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "11838:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 577,
														"indexExpression": {
															"expression": {
																"id": 575,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11851:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11855:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11851:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11838:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 578,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "11865:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11869:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "11865:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11838:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "11838:36:0"
											},
											{
												"expression": {
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 582,
															"name": "hasPlayed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "11884:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 585,
														"indexExpression": {
															"expression": {
																"id": 583,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11894:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11898:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11894:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11884:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11908:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11884:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "11884:28:0"
											},
											{
												"expression": {
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 589,
															"name": "lastPlayed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "11922:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 592,
														"indexExpression": {
															"expression": {
																"id": 590,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11933:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11937:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11933:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11922:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 593,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "11947:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11953:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "11947:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11922:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "11922:40:0"
											},
											{
												"expression": {
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "11972:18:0",
													"subExpression": {
														"id": 597,
														"name": "totalGamesPlayed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "11972:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "11972:18:0"
											},
											{
												"expression": {
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 600,
														"name": "prizePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "12058:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 603,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "12084:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12088:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "12084:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 601,
																"name": "prizePool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "12070:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12080:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 349,
															"src": "12070:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12070:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12058:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "12058:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 609,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12121:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12125:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12121:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 611,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12133:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12137:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "12133:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 613,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "12144:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12150:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "12144:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 608,
														"name": "GamePlayed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "12110:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12110:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 616,
												"nodeType": "EmitStatement",
												"src": "12105:55:0"
											}
										]
									},
									"functionSelector": "af899735",
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "playGame",
									"nameLocation": "11657:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11665:2:0"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11685:0:0"
									},
									"scope": 766,
									"src": "11648:519:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "12225:166:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 624,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "12243:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12247:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "12243:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12255:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12243:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742073656e642045544820746f2066756e6420746865207072697a6520706f6f6c",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12258:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35075a8aaf17f88c6d06dfc971cf92115a9114e82f33628ec975082c22053630",
																"typeString": "literal_string \"Must send ETH to fund the prize pool\""
															},
															"value": "Must send ETH to fund the prize pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35075a8aaf17f88c6d06dfc971cf92115a9114e82f33628ec975082c22053630",
																"typeString": "literal_string \"Must send ETH to fund the prize pool\""
															}
														],
														"id": 623,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12235:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12235:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "12235:62:0"
											},
											{
												"expression": {
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 631,
														"name": "prizePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "12307:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 634,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "12333:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12337:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "12333:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 632,
																"name": "prizePool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "12319:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12329:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 349,
															"src": "12319:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12319:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12307:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "12307:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 640,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12374:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12378:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "12374:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 639,
														"name": "PrizePoolFunded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "12358:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12358:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "EmitStatement",
												"src": "12353:31:0"
											}
										]
									},
									"functionSelector": "88b2f7c3",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 621,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 620,
												"name": "onlyOwner",
												"nameLocations": [
													"12215:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "12215:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "12215:9:0"
										}
									],
									"name": "fundPrizePool",
									"nameLocation": "12182:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12195:2:0"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12225:0:0"
									},
									"scope": 766,
									"src": "12173:218:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "12431:389:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 649,
																"name": "hasPlayed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "12449:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 652,
															"indexExpression": {
																"expression": {
																	"id": 650,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "12459:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12463:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "12459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12449:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20616374697665207374616b65",
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12472:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d",
																"typeString": "literal_string \"No active stake\""
															},
															"value": "No active stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d",
																"typeString": "literal_string \"No active stake\""
															}
														],
														"id": 648,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12441:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12441:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "12441:49:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 660,
																			"name": "lastPlayed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 509,
																			"src": "12528:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 663,
																		"indexExpression": {
																			"expression": {
																				"id": 661,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "12539:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "12543:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "12539:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12528:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 657,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "12508:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12514:9:0",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "12508:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12524:3:0",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 364,
																	"src": "12508:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12508:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12555:6:0",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															},
															"src": "12508:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b65206c6f636b656420666f72203120646179",
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12563:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9e295611c7fff753208b30618c22be66e796815d2bd93579abae4b5ec65907c1",
																"typeString": "literal_string \"Stake locked for 1 day\""
															},
															"value": "Stake locked for 1 day"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9e295611c7fff753208b30618c22be66e796815d2bd93579abae4b5ec65907c1",
																"typeString": "literal_string \"Stake locked for 1 day\""
															}
														],
														"id": 656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12500:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12500:88:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "12500:88:0"
											},
											{
												"assignments": [
													671
												],
												"declarations": [
													{
														"constant": false,
														"id": 671,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "12607:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 706,
														"src": "12599:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 670,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12599:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 676,
												"initialValue": {
													"baseExpression": {
														"id": 672,
														"name": "activeStakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "12616:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 675,
													"indexExpression": {
														"expression": {
															"id": 673,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "12629:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12633:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "12629:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12616:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12599:41:0"
											},
											{
												"expression": {
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 677,
															"name": "activeStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "12650:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 680,
														"indexExpression": {
															"expression": {
																"id": 678,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12663:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12667:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12663:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12650:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12677:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12650:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "12650:28:0"
											},
											{
												"expression": {
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 684,
															"name": "hasPlayed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "12688:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 687,
														"indexExpression": {
															"expression": {
																"id": 685,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12698:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12702:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12698:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12688:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12712:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "12688:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "12688:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 697,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "12757:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 693,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "12736:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12740:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "12736:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12728:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 691,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12728:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12728:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12748:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "12728:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12728:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "12728:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 701,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12794:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12798:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12794:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 703,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "12806:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 700,
														"name": "StakeWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "12779:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12779:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "EmitStatement",
												"src": "12774:39:0"
											}
										]
									},
									"functionSelector": "bed9d861",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawStake",
									"nameLocation": "12406:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12419:2:0"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12431:0:0"
									},
									"scope": 766,
									"src": "12397:423:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "12867:207:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 713,
																"name": "prizePool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "12885:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12897:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12885:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207072697a6520746f20636c61696d",
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12900:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f0eea299b23e35bb62f6facdd8a43d0b4ef250617409b6608fb2d409f5132935",
																"typeString": "literal_string \"No prize to claim\""
															},
															"value": "No prize to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f0eea299b23e35bb62f6facdd8a43d0b4ef250617409b6608fb2d409f5132935",
																"typeString": "literal_string \"No prize to claim\""
															}
														],
														"id": 712,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12877:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12877:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "12877:43:0"
											},
											{
												"assignments": [
													720
												],
												"declarations": [
													{
														"constant": false,
														"id": 720,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "12938:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 742,
														"src": "12930:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 719,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12930:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 722,
												"initialValue": {
													"id": 721,
													"name": "prizePool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 495,
													"src": "12947:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12930:26:0"
											},
											{
												"expression": {
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 723,
														"name": "prizePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "12966:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12978:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12966:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "12966:13:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 733,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "13016:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 729,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 94,
																		"src": "12998:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12998:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12990:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 727,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12990:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12990:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13007:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "12990:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12990:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "12990:33:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 737,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "13051:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13051:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 739,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "13060:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 736,
														"name": "PrizeClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "13038:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13038:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "EmitStatement",
												"src": "13033:34:0"
											}
										]
									},
									"functionSelector": "70740ac9",
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 710,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 709,
												"name": "onlyOwner",
												"nameLocations": [
													"12857:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "12857:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "12857:9:0"
										}
									],
									"name": "claimPrize",
									"nameLocation": "12835:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12845:2:0"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12867:0:0"
									},
									"scope": 766,
									"src": "12826:248:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "13203:94:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 750,
															"name": "hasPlayed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "13220:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 752,
														"indexExpression": {
															"id": 751,
															"name": "player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "13230:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13220:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"baseExpression": {
																		"id": 756,
																		"name": "lastPlayed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 509,
																		"src": "13261:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 758,
																	"indexExpression": {
																		"id": 757,
																		"name": "player",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 745,
																		"src": "13272:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13261:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 753,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "13241:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13247:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "13241:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13257:3:0",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 364,
																"src": "13241:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13241:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"hexValue": "31",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13284:6:0",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														},
														"src": "13241:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13220:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 749,
												"id": 763,
												"nodeType": "Return",
												"src": "13213:77:0"
											}
										]
									},
									"functionSelector": "19262d30",
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canWithdraw",
									"nameLocation": "13146:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "13166:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "13158:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13157:16:0"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "13197:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 747,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13197:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13196:6:0"
									},
									"scope": 766,
									"src": "13137:160:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 767,
							"src": "10873:2426:0",
							"usedErrors": [
								40,
								45
							],
							"usedEvents": [
								51,
								517,
								521,
								527,
								533
							]
						}
					],
					"src": "154:13145:0"
				},
				"id": 0
			}
		}
	}
}